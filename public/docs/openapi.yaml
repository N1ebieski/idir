openapi: 3.0.3
info:
  title: 'API Documentation - iDir - nowoczesny katalog stron'
  description: ''
  version: 1.0.0
servers:
  -
    url: 'https://idir.test:8443'
paths:
  /api/user:
    get:
      summary: 'Show user'
      description: "Show authenticated User resource\n\n<aside class=\"notice\">Available only to users with permission: api.access.</aside>"
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 12245
                    name: 'Prof. Elliot Monahan V'
                    status:
                      value: 1
                      label: active
                    created_at: '2022-03-12T12:02:32.000000Z'
                    updated_at: '2022-03-12T12:02:32.000000Z'
                    roles:
                      -
                        id: 3
                        name: user
                        created_at: '2021-01-06T16:58:51.000000Z'
                        updated_at: '2021-01-06T16:58:51.000000Z'
                properties:
                  data:
                    type: object
                    example:
                      id: 12245
                      name: 'Prof. Elliot Monahan V'
                      status:
                        value: 1
                        label: active
                      created_at: '2022-03-12T12:02:32.000000Z'
                      updated_at: '2022-03-12T12:02:32.000000Z'
                      roles:
                        -
                          id: 3
                          name: user
                          created_at: '2021-01-06T16:58:51.000000Z'
                          updated_at: '2021-01-06T16:58:51.000000Z'
      tags:
        - 'Authenticated user'
  /api/token:
    post:
      summary: Token
      description: "Create access token and (optional) refresh token.\n\n<aside class=\"notice\">Access token expires after 2 hours. Refresh token expires after 1 year.</aside>"
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        201:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  access_token: 1|LN8Gmqe6cRHQpPr5X5GW9wFXuqHVK09L8FSb7Ju9
                  refresh_token: 2|hVHAhrgiBmSbyYjbVAC17wjwAJyKK8TQmhglBAtM
                properties:
                  access_token:
                    type: string
                    example: 1|LN8Gmqe6cRHQpPr5X5GW9wFXuqHVK09L8FSb7Ju9
                    description: ''
                  refresh_token:
                    type: string
                    example: 2|hVHAhrgiBmSbyYjbVAC17wjwAJyKK8TQmhglBAtM
                    description: '(only if remember param was true)'
      tags:
        - Authentication
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: ''
                  example: kontakt@demo.idir.intelekt.net.pl
                password:
                  type: string
                  description: ''
                  example: demo1234
                remember:
                  type: boolean
                  description: ''
                  example: true
      security: []
  /api/register:
    post:
      summary: Register
      description: 'Create user and send email verification notification'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 12248
                    name: 'Prof. Enos Harris IV'
                    status:
                      value: 1
                      label: active
                    created_at: '2022-03-12T12:02:34.000000Z'
                    updated_at: '2022-03-12T12:02:34.000000Z'
                    roles:
                      -
                        id: 3
                        name: user
                        created_at: '2021-01-06T16:58:51.000000Z'
                        updated_at: '2021-01-06T16:58:51.000000Z'
                properties:
                  data:
                    type: object
                    example:
                      id: 12248
                      name: 'Prof. Enos Harris IV'
                      status:
                        value: 1
                        label: active
                      created_at: '2022-03-12T12:02:34.000000Z'
                      updated_at: '2022-03-12T12:02:34.000000Z'
                      roles:
                        -
                          id: 3
                          name: user
                          created_at: '2021-01-06T16:58:51.000000Z'
                          updated_at: '2021-01-06T16:58:51.000000Z'
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: N1ebieski
                email:
                  type: string
                  description: ''
                  example: example@example.pl
                password:
                  type: string
                  description: ''
                  example: demo1234
                password_confirmation:
                  type: string
                  description: ''
                  example: demo1234
                privacy_agreement:
                  type: boolean
                  description: 'Acceptance of privacy policy'
                  example: true
                contact_agreement:
                  type: boolean
                  description: 'Acceptance of receiving e-mail system notifications'
                  example: true
                marketing_agreement:
                  type: boolean
                  description: 'Acceptance of receiving marketing information notifications'
                  example: true
              required:
                - name
                - email
                - password
                - password_confirmation
                - privacy_agreement
                - contact_agreement
      security: []
  /api/revoke:
    post:
      summary: 'Revoke token'
      description: 'Revoke access token and refresh token.'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        204:
          description: success
      tags:
        - Authentication
  /api/refresh:
    post:
      summary: 'Refresh token'
      description: "Create new access token and refresh token.\n\n<aside class=\"success\">Refresh token must be in the Authorization header with the value \"Bearer {YOUR_REFRESH_TOKEN}\".</aside>"
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_REFRESH_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        201:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  access_token: 3|LN8Gmqe6cRHQpPr5X5GW9wFXuqHVK09L8FSb7Ju9
                  refresh_token: 4|hVHAhrgiBmSbyYjbVAC17wjwAJyKK8TQmhglBAtM
                properties:
                  access_token:
                    type: string
                    example: 3|LN8Gmqe6cRHQpPr5X5GW9wFXuqHVK09L8FSb7Ju9
                    description: ''
                  refresh_token:
                    type: string
                    example: 4|hVHAhrgiBmSbyYjbVAC17wjwAJyKK8TQmhglBAtM
                    description: ''
      tags:
        - Authentication
  /api/categories/dir/index:
    post:
      summary: 'Index of dir''s categories'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 2531
                      name: 'saepe molestiae'
                      slug: saepe-molestiae
                      icon: null
                      status:
                        value: 1
                        label: active
                      real_depth: 0
                      created_at: '2022-03-12T12:02:32.000000Z'
                      updated_at: '2022-03-12T12:02:32.000000Z'
                    -
                      id: 2532
                      name: 'facilis sequi'
                      slug: facilis-sequi
                      icon: null
                      status:
                        value: 1
                        label: active
                      real_depth: 0
                      created_at: '2022-03-12T12:02:32.000000Z'
                      updated_at: '2022-03-12T12:02:32.000000Z'
                  meta: 'Paging, filtering and sorting information'
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 2531
                        name: 'saepe molestiae'
                        slug: saepe-molestiae
                        icon: null
                        status:
                          value: 1
                          label: active
                        real_depth: 0
                        created_at: '2022-03-12T12:02:32.000000Z'
                        updated_at: '2022-03-12T12:02:32.000000Z'
                      -
                        id: 2532
                        name: 'facilis sequi'
                        slug: facilis-sequi
                        icon: null
                        status:
                          value: 1
                          label: active
                        real_depth: 0
                        created_at: '2022-03-12T12:02:32.000000Z'
                        updated_at: '2022-03-12T12:02:32.000000Z'
                    items:
                      type: object
                  meta:
                    type: string
                    example: 'Paging, filtering and sorting information'
      tags:
        - Categories
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: integer
                  description: ''
                  example: 1
                filter:
                  type: object
                  description: ''
                  example: []
                  properties:
                    except:
                      type: array
                      description: 'Array containing IDs, excluding records from the list.'
                      example: []
                      items:
                        type: integer
                    search:
                      type: string
                      description: 'Search by keyword. Must be at least 3 characters. Must not be greater than 255 characters.'
                      example: ''
                    status:
                      type: integer
                      description: 'Must be one of 1 or 0 (available only for admin.categories.view).'
                      example: 1
                    parent:
                      type: integer
                      description: 'ID of category parent. If 0, shows only roots.'
                      example: 0
                    orderby:
                      type: string
                      description: 'Sorting the result list. Must be one of <code>created_at|asc</code>, <code>created_at|desc</code>, <code>updated_at|asc</code>, <code>updated_at|desc</code>, <code>name|asc</code>, <code>name|desc</code>, <code>position|asc</code>, <code>position|desc</code>, <code>real_depth|asc</code>, or <code>real_depth|desc</code>.'
                      example: ''
                    paginate:
                      type: integer
                      description: 'Number of records in the list. Must be one of <code>25</code>, <code>50</code>, or <code>100</code>.'
                      example: 50
      security: []
  /api/categories/post/index:
    post:
      summary: 'Index of post''s categories'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 2533
                      name: 'fuga voluptates'
                      slug: fuga-voluptates
                      icon: null
                      status:
                        value: 1
                        label: active
                      real_depth: 0
                      created_at: '2022-03-12T12:02:34.000000Z'
                      updated_at: '2022-03-12T12:02:34.000000Z'
                    -
                      id: 2534
                      name: 'qui maiores'
                      slug: qui-maiores
                      icon: null
                      status:
                        value: 1
                        label: active
                      real_depth: 0
                      created_at: '2022-03-12T12:02:34.000000Z'
                      updated_at: '2022-03-12T12:02:34.000000Z'
                  meta: 'Paging, filtering and sorting information'
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 2533
                        name: 'fuga voluptates'
                        slug: fuga-voluptates
                        icon: null
                        status:
                          value: 1
                          label: active
                        real_depth: 0
                        created_at: '2022-03-12T12:02:34.000000Z'
                        updated_at: '2022-03-12T12:02:34.000000Z'
                      -
                        id: 2534
                        name: 'qui maiores'
                        slug: qui-maiores
                        icon: null
                        status:
                          value: 1
                          label: active
                        real_depth: 0
                        created_at: '2022-03-12T12:02:34.000000Z'
                        updated_at: '2022-03-12T12:02:34.000000Z'
                    items:
                      type: object
                  meta:
                    type: string
                    example: 'Paging, filtering and sorting information'
      tags:
        - Categories
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: integer
                  description: ''
                  example: 1
                filter:
                  type: object
                  description: ''
                  example: []
                  properties:
                    except:
                      type: array
                      description: 'Array containing IDs, excluding records from the list.'
                      example: []
                      items:
                        type: integer
                    search:
                      type: string
                      description: 'Search by keyword. Must be at least 3 characters. Must not be greater than 255 characters.'
                      example: ''
                    status:
                      type: integer
                      description: 'Must be one of 1 or 0 (available only for admin.categories.view).'
                      example: 1
                    parent:
                      type: integer
                      description: 'ID of category parent. If 0, shows only roots.'
                      example: 0
                    orderby:
                      type: string
                      description: 'Sorting the result list. Must be one of <code>created_at|asc</code>, <code>created_at|desc</code>, <code>updated_at|asc</code>, <code>updated_at|desc</code>, <code>name|asc</code>, <code>name|desc</code>, <code>position|asc</code>, <code>position|desc</code>, <code>real_depth|asc</code>, or <code>real_depth|desc</code>.'
                      example: ''
                    paginate:
                      type: integer
                      description: 'Number of records in the list. Must be one of <code>25</code>, <code>50</code>, or <code>100</code>.'
                      example: 25
      security: []
  /api/categories/index:
    post:
      summary: 'Index of all categories'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 12
                      name: 'Gabinety kosmetyczne'
                      slug: gabinety-kosmetyczne
                      icon: null
                      status:
                        value: 1
                        label: active
                      real_depth: 1
                      created_at: '2009-08-21T08:36:46.000000Z'
                      updated_at: '2009-08-21T08:36:46.000000Z'
                    -
                      id: 12
                      name: 'Gabinety kosmetyczne'
                      slug: gabinety-kosmetyczne
                      icon: null
                      status:
                        value: 1
                        label: active
                      real_depth: 1
                      created_at: '2009-08-21T08:36:46.000000Z'
                      updated_at: '2009-08-21T08:36:46.000000Z'
                  meta: 'Paging, filtering and sorting information'
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 12
                        name: 'Gabinety kosmetyczne'
                        slug: gabinety-kosmetyczne
                        icon: null
                        status:
                          value: 1
                          label: active
                        real_depth: 1
                        created_at: '2009-08-21T08:36:46.000000Z'
                        updated_at: '2009-08-21T08:36:46.000000Z'
                      -
                        id: 12
                        name: 'Gabinety kosmetyczne'
                        slug: gabinety-kosmetyczne
                        icon: null
                        status:
                          value: 1
                          label: active
                        real_depth: 1
                        created_at: '2009-08-21T08:36:46.000000Z'
                        updated_at: '2009-08-21T08:36:46.000000Z'
                    items:
                      type: object
                  meta:
                    type: string
                    example: 'Paging, filtering and sorting information'
      tags:
        - Categories
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: integer
                  description: ''
                  example: 1
                filter:
                  type: object
                  description: ''
                  example: []
                  properties:
                    except:
                      type: array
                      description: 'Array containing IDs, excluding records from the list.'
                      example: []
                      items:
                        type: integer
                    search:
                      type: string
                      description: 'Search by keyword. Must be at least 3 characters. Must not be greater than 255 characters.'
                      example: ''
                    status:
                      type: integer
                      description: 'Must be one of 1 or 0 (available only for admin.categories.view).'
                      example: 1
                    parent:
                      type: integer
                      description: 'ID of category parent. If 0, shows only roots.'
                      example: 0
                    orderby:
                      type: string
                      description: 'Sorting the result list. Must be one of <code>created_at|asc</code>, <code>created_at|desc</code>, <code>updated_at|asc</code>, <code>updated_at|desc</code>, <code>name|asc</code>, <code>name|desc</code>, <code>position|asc</code>, <code>position|desc</code>, <code>real_depth|asc</code>, or <code>real_depth|desc</code>.'
                      example: ''
                    paginate:
                      type: integer
                      description: 'Number of records in the list. Must be one of <code>25</code>, <code>50</code>, or <code>100</code>.'
                      example: 50
      security: []
  '/api/dirs/group/{group}':
    post:
      summary: 'Create dir'
      description: '<aside class="notice">If the user is authenticated the entry is added to his/her account, if not, an account is created for the email address provided.</aside>'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 13369
                    slug: aut-sed
                    title: 'Aut sed.'
                    url: 'http://jenkins.com'
                    short_content: 'Neque possimus dolorem iure molestias. A perspiciatis nemo commodi ut et pariatur. Sit et et voluptas sit deleniti. Laboriosam similique officia saepe nam. Deleniti quia aut aliquam ut sunt et iste.'
                    content: 'Neque possimus dolorem iure molestias. A perspiciatis nemo commodi ut et pariatur. Sit et et voluptas sit deleniti. Laboriosam similique officia saepe nam. Deleniti quia aut aliquam ut sunt et iste.'
                    content_html: 'Neque possimus dolorem iure molestias. A perspiciatis nemo commodi ut et pariatur. Sit et et voluptas sit deleniti. Laboriosam similique officia saepe nam. Deleniti quia aut aliquam ut sunt et iste.'
                    less_content_html: 'Neque possimus dolorem iure molestias. A perspiciatis nemo commodi ut et pariatur. Sit et et voluptas sit deleniti. Laboriosam similique officia saepe nam. Deleniti quia aut aliquam ut sunt et iste.... <a href="http://idir.test:8443/dirs/aut-sed">show more &raquo</a>'
                    thumbnail_url: 'https://idir.test:8443/thumbnails?url=eyJpdiI6Ik5mVDd4QkRoNkhIdUpTT1hDcmc1WkE9PSIsInZhbHVlIjoiS2JhbzNGUks2QnNIQ1ZyU0ZjWVVCUlZiVGZrUjA3eWFRZlphYzZrSHF1QT0iLCJtYWMiOiI1MjdiMDA1ODM2ODc4NTUxN2ZiZmU2OTEyYmI2MzMxZWZiMWFmMTMxODVmZDQyMjFkOTAyODA3M2I1NWQ2MGRjIn0='
                    sum_rating: '0.00'
                    created_at: '2022-03-12T12:02:31.000000Z'
                    updated_at: '2022-03-12T12:02:31.000000Z'
                    categories:
                      -
                        id: 2530
                        name: Exercitationem
                        slug: exercitationem-3
                        icon: null
                        status:
                          value: 1
                          label: active
                        real_depth: 0
                        created_at: '2022-03-12T12:02:31.000000Z'
                        updated_at: '2022-03-12T12:02:31.000000Z'
                    links: []
                properties:
                  data:
                    type: object
                    example:
                      id: 13369
                      slug: aut-sed
                      title: 'Aut sed.'
                      url: 'http://jenkins.com'
                      short_content: 'Neque possimus dolorem iure molestias. A perspiciatis nemo commodi ut et pariatur. Sit et et voluptas sit deleniti. Laboriosam similique officia saepe nam. Deleniti quia aut aliquam ut sunt et iste.'
                      content: 'Neque possimus dolorem iure molestias. A perspiciatis nemo commodi ut et pariatur. Sit et et voluptas sit deleniti. Laboriosam similique officia saepe nam. Deleniti quia aut aliquam ut sunt et iste.'
                      content_html: 'Neque possimus dolorem iure molestias. A perspiciatis nemo commodi ut et pariatur. Sit et et voluptas sit deleniti. Laboriosam similique officia saepe nam. Deleniti quia aut aliquam ut sunt et iste.'
                      less_content_html: 'Neque possimus dolorem iure molestias. A perspiciatis nemo commodi ut et pariatur. Sit et et voluptas sit deleniti. Laboriosam similique officia saepe nam. Deleniti quia aut aliquam ut sunt et iste.... <a href="http://idir.test:8443/dirs/aut-sed">show more &raquo</a>'
                      thumbnail_url: 'https://idir.test:8443/thumbnails?url=eyJpdiI6Ik5mVDd4QkRoNkhIdUpTT1hDcmc1WkE9PSIsInZhbHVlIjoiS2JhbzNGUks2QnNIQ1ZyU0ZjWVVCUlZiVGZrUjA3eWFRZlphYzZrSHF1QT0iLCJtYWMiOiI1MjdiMDA1ODM2ODc4NTUxN2ZiZmU2OTEyYmI2MzMxZWZiMWFmMTMxODVmZDQyMjFkOTAyODA3M2I1NWQ2MGRjIn0='
                      sum_rating: '0.00'
                      created_at: '2022-03-12T12:02:31.000000Z'
                      updated_at: '2022-03-12T12:02:31.000000Z'
                      categories:
                        -
                          id: 2530
                          name: Exercitationem
                          slug: exercitationem-3
                          icon: null
                          status:
                            value: 1
                            label: active
                          real_depth: 0
                          created_at: '2022-03-12T12:02:31.000000Z'
                          updated_at: '2022-03-12T12:02:31.000000Z'
                      links: []
      tags:
        - Dirs
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must be between 3 and 100 characters.'
                  example: wyvmajyljdtcyfsbarsnbudluwqhcpfhvjbpwqrruzwamxdtiftrbtuenspkmupzsqwmmqwcbtzmpycvqqtdhgv
                tags:
                  type: array
                  description: 'Must be at least 3 characters. Must not be greater than 30 characters.'
                  example:
                    - fcgaarmqkwyuljdi
                  items:
                    type: string
                categories:
                  type: array
                  description: 'Array containing category IDs.'
                  example: []
                  items:
                    type: integer
                content_html:
                  type: string
                  description: 'Description. Must be between 255 and 1000 characters.'
                  example: nbmhipaekvqebhobhszohrwmkwfericdxysezkplnmvztdjeifrywfcdfrgfsvslyhxvnbyqsahntrgbyklhziewivodmzrmxwhfguypgewclrinjyarqnreqrtguquubgyjczilszcjqdjvdamtebrbdzfxvoduhyskxauekdvgchofvkocrqfknpprksblacimxqlvbmkinvipmghldughfumfvwrnsvamzljhccoopaoiyinnmruluuxiszqziiwohgbztpnxdzksvyse
                notes:
                  type: string
                  description: 'Additional information for the moderator. Must be between 3 and 255 characters.'
                  example: ''
                url:
                  type: string
                  description: 'Unique website url with http/https protocol.'
                  example: 'https://demo.idir.intelekt.net.pl'
                backlink:
                  type: integer
                  description: 'ID of the selected backlink.'
                  example: null
                backlink_url:
                  type: string
                  description: 'Url with http/https protocol to backlink.'
                  example: null
                email:
                  type: string
                  description: 'Email address, required if the user adds the entry as unauthenticated.'
                  example: kontakt@intelekt.net.pl
                field:
                  type: array
                  description: 'Array containing additional form fields if the group allows it.'
                  example: null
                  items:
                    type: object
                payment_type:
                  type: string
                  description: 'If the group requires a payment, the selected type must be defined. Must be one of <code>transfer</code>, <code>code_transfer</code>, <code>code_sms</code>, or <code>paypal_express</code>.'
                  example: null
                payment_transfer:
                  type: integer
                  description: 'ID of the selected Price if payment_type is <code>transfer</code>.'
                  example: null
                payment_code_sms:
                  type: integer
                  description: 'ID of the selected Price if payment_type is <code>code_sms</code>.'
                  example: null
                code_sms:
                  type: string
                  description: 'Received code if payment_type is <code>code_sms</code>.'
                  example: null
                payment_code_transfer:
                  type: integer
                  description: 'ID of the selected Price if payment_type is <code>code_transfer</code>.'
                  example: null
                code_transfer:
                  type: string
                  description: 'Received code if payment_type is <code>code_transfer</code>.'
                  example: null
                payment_paypal_express:
                  type: integer
                  description: 'ID of the selected Price if payment_type is <code>paypal_express</code>.'
                  example: null
              required:
                - title
                - categories
                - content_html
      security: []
    parameters:
      -
        in: path
        name: group
        description: 'The group ID.'
        example: 1
        required: true
        schema:
          type: integer
  /api/dirs/index:
    post:
      summary: 'Index of dirs'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 13368
                    slug: ut-unde
                    title: 'Ut unde.'
                    url: 'http://www.purdy.com'
                    short_content: 'Est modi quia doloribus explicabo recusandae amet. Dolorem dignissimos fugiat sunt ipsam est recusandae. Reiciendis quis dolorem rerum odit possimus. Nihil molestiae qui nihil possimus quibusdam.'
                    content: 'Est modi quia doloribus explicabo recusandae amet. Dolorem dignissimos fugiat sunt ipsam est recusandae. Reiciendis quis dolorem rerum odit possimus. Nihil molestiae qui nihil possimus quibusdam.'
                    content_html: 'Est modi quia doloribus explicabo recusandae amet. Dolorem dignissimos fugiat sunt ipsam est recusandae. Reiciendis quis dolorem rerum odit possimus. Nihil molestiae qui nihil possimus quibusdam.'
                    less_content_html: 'Est modi quia doloribus explicabo recusandae amet. Dolorem dignissimos fugiat sunt ipsam est recusandae. Reiciendis quis dolorem rerum odit possimus. Nihil molestiae qui nihil possimus quibusdam.... <a href="http://idir.test:8443/dirs/ut-unde">show more &raquo</a>'
                    thumbnail_url: 'https://idir.test:8443/thumbnails?url=eyJpdiI6Im9lMVBWTTg0RnUwM2RoWVFnaVVsTGc9PSIsInZhbHVlIjoiTTZKNXhlZkdcL2xDK1ltNDZNQzRxSm95d25iSG5TbXdoMW5MWTNpR2R0V1E9IiwibWFjIjoiYTU4NjE4MGY4ZDFkODQ5YzQxNWRjZmMyMmNlM2MwMDBjODMyYWNlMGFmMDhlZTc5M2Y4YzViODI2OTBiODhmZiJ9'
                    sum_rating: '0.00'
                    created_at: '2022-03-12T12:02:31.000000Z'
                    updated_at: '2022-03-12T12:02:31.000000Z'
                    categories:
                      -
                        id: 2528
                        name: Eos
                        slug: eos-6
                        icon: null
                        status:
                          value: 1
                          label: active
                        real_depth: 0
                        created_at: '2022-03-12T12:02:31.000000Z'
                        updated_at: '2022-03-12T12:02:31.000000Z'
                    links: []
                properties:
                  data:
                    type: object
                    example:
                      id: 13368
                      slug: ut-unde
                      title: 'Ut unde.'
                      url: 'http://www.purdy.com'
                      short_content: 'Est modi quia doloribus explicabo recusandae amet. Dolorem dignissimos fugiat sunt ipsam est recusandae. Reiciendis quis dolorem rerum odit possimus. Nihil molestiae qui nihil possimus quibusdam.'
                      content: 'Est modi quia doloribus explicabo recusandae amet. Dolorem dignissimos fugiat sunt ipsam est recusandae. Reiciendis quis dolorem rerum odit possimus. Nihil molestiae qui nihil possimus quibusdam.'
                      content_html: 'Est modi quia doloribus explicabo recusandae amet. Dolorem dignissimos fugiat sunt ipsam est recusandae. Reiciendis quis dolorem rerum odit possimus. Nihil molestiae qui nihil possimus quibusdam.'
                      less_content_html: 'Est modi quia doloribus explicabo recusandae amet. Dolorem dignissimos fugiat sunt ipsam est recusandae. Reiciendis quis dolorem rerum odit possimus. Nihil molestiae qui nihil possimus quibusdam.... <a href="http://idir.test:8443/dirs/ut-unde">show more &raquo</a>'
                      thumbnail_url: 'https://idir.test:8443/thumbnails?url=eyJpdiI6Im9lMVBWTTg0RnUwM2RoWVFnaVVsTGc9PSIsInZhbHVlIjoiTTZKNXhlZkdcL2xDK1ltNDZNQzRxSm95d25iSG5TbXdoMW5MWTNpR2R0V1E9IiwibWFjIjoiYTU4NjE4MGY4ZDFkODQ5YzQxNWRjZmMyMmNlM2MwMDBjODMyYWNlMGFmMDhlZTc5M2Y4YzViODI2OTBiODhmZiJ9'
                      sum_rating: '0.00'
                      created_at: '2022-03-12T12:02:31.000000Z'
                      updated_at: '2022-03-12T12:02:31.000000Z'
                      categories:
                        -
                          id: 2528
                          name: Eos
                          slug: eos-6
                          icon: null
                          status:
                            value: 1
                            label: active
                          real_depth: 0
                          created_at: '2022-03-12T12:02:31.000000Z'
                          updated_at: '2022-03-12T12:02:31.000000Z'
                      links: []
      tags:
        - Dirs
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: integer
                  description: ''
                  example: 1
                filter:
                  type: object
                  description: ''
                  example: []
                  properties:
                    except:
                      type: array
                      description: 'Array containing IDs, excluding records from the list.'
                      example: []
                      items:
                        type: integer
                    search:
                      type: string
                      description: 'Search by keyword. Must be at least 3 characters. Must not be greater than 255 characters.'
                      example: ''
                    status:
                      type: integer
                      description: 'Must be one of 1 or (available only for admin.dirs.view) 0, 2, 3, 4, 5.'
                      example: 1
                    group:
                      type: integer
                      description: 'ID of Group relationship.'
                      example: null
                    category:
                      type: integer
                      description: 'ID of Category relationship.'
                      example: null
                    orderby:
                      type: string
                      description: 'Sorting the result list. Must be one of <code>created_at|asc</code>, <code>created_at|desc</code>, <code>updated_at|asc</code>, <code>updated_at|desc</code>, <code>title|asc</code>, <code>title|desc</code>, <code>sum_rating|desc</code>, <code>sum_rating|asc</code>, <code>click|desc</code>, <code>click|asc</code>, <code>view|desc</code>, or <code>view|asc</code>.'
                      example: ''
                    paginate:
                      type: integer
                      description: 'Number of records in the list. Must be one of <code>25</code>, <code>50</code>, or <code>100</code>.'
                      example: 50
                    author:
                      type: integer
                      description: '(available only for admin.dirs.view) ID of User relationship.'
                      example: null
                    report:
                      type: integer
                      description: '(available only for admin.dirs.view) Must be one of 1 or 0.'
                      example: null
  /api/groups/index:
    post:
      summary: 'Index of groups'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 19
                      slug: qui
                      position: 10
                      name: Qui
                      desc: 'Molestiae voluptas quia unde nisi animi ut. Et est nisi ipsum aut quae. Atque exercitationem veniam expedita eos beatae et. Ullam qui est repellat cupiditate voluptatem suscipit et consequuntur. Occaecati qui eveniet expedita sint.'
                      border: null
                      max_cats: 5
                      max_models: null
                      max_models_daily: 10
                      visible:
                        value: 1
                        label: public
                      apply_status:
                        value: 0
                        label: 'pending acceptance'
                      url:
                        value: 0
                        label: none
                      backlink:
                        value: 0
                        label: none
                      created_at: '2022-03-12T12:02:30.000000Z'
                      updated_at: '2022-03-12T12:02:30.000000Z'
                      alt: null
                      privileges:
                        -
                          id: 9
                          name: 'additional options for editing content'
                          created_at: '2021-01-06T16:58:51.000000Z'
                          updated_at: '2021-01-06T16:58:51.000000Z'
                    -
                      id: 20
                      slug: aspernatur
                      position: 11
                      name: Aspernatur
                      desc: 'Et et et enim atque ab aliquam maiores. Natus suscipit error non non aut quo. Enim voluptate tempore nihil veritatis quo non quia. Eos vel sit esse explicabo et. Quae illo minima voluptatum ea. Qui voluptatem soluta enim omnis aut ipsum. Quam perspiciatis eos sint et commodi dolorem.'
                      border: null
                      max_cats: 4
                      max_models: 27
                      max_models_daily: null
                      visible:
                        value: 1
                        label: public
                      apply_status:
                        value: 0
                        label: 'pending acceptance'
                      url:
                        value: 1
                        label: optional
                      backlink:
                        value: 1
                        label: optional
                      created_at: '2022-03-12T12:02:30.000000Z'
                      updated_at: '2022-03-12T12:02:30.000000Z'
                      alt: null
                      privileges:
                        -
                          id: 9
                          name: 'additional options for editing content'
                          created_at: '2021-01-06T16:58:51.000000Z'
                          updated_at: '2021-01-06T16:58:51.000000Z'
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 19
                        slug: qui
                        position: 10
                        name: Qui
                        desc: 'Molestiae voluptas quia unde nisi animi ut. Et est nisi ipsum aut quae. Atque exercitationem veniam expedita eos beatae et. Ullam qui est repellat cupiditate voluptatem suscipit et consequuntur. Occaecati qui eveniet expedita sint.'
                        border: null
                        max_cats: 5
                        max_models: null
                        max_models_daily: 10
                        visible:
                          value: 1
                          label: public
                        apply_status:
                          value: 0
                          label: 'pending acceptance'
                        url:
                          value: 0
                          label: none
                        backlink:
                          value: 0
                          label: none
                        created_at: '2022-03-12T12:02:30.000000Z'
                        updated_at: '2022-03-12T12:02:30.000000Z'
                        alt: null
                        privileges:
                          -
                            id: 9
                            name: 'additional options for editing content'
                            created_at: '2021-01-06T16:58:51.000000Z'
                            updated_at: '2021-01-06T16:58:51.000000Z'
                      -
                        id: 20
                        slug: aspernatur
                        position: 11
                        name: Aspernatur
                        desc: 'Et et et enim atque ab aliquam maiores. Natus suscipit error non non aut quo. Enim voluptate tempore nihil veritatis quo non quia. Eos vel sit esse explicabo et. Quae illo minima voluptatum ea. Qui voluptatem soluta enim omnis aut ipsum. Quam perspiciatis eos sint et commodi dolorem.'
                        border: null
                        max_cats: 4
                        max_models: 27
                        max_models_daily: null
                        visible:
                          value: 1
                          label: public
                        apply_status:
                          value: 0
                          label: 'pending acceptance'
                        url:
                          value: 1
                          label: optional
                        backlink:
                          value: 1
                          label: optional
                        created_at: '2022-03-12T12:02:30.000000Z'
                        updated_at: '2022-03-12T12:02:30.000000Z'
                        alt: null
                        privileges:
                          -
                            id: 9
                            name: 'additional options for editing content'
                            created_at: '2021-01-06T16:58:51.000000Z'
                            updated_at: '2021-01-06T16:58:51.000000Z'
                    items:
                      type: object
      tags:
        - Groups
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: integer
                  description: ''
                  example: 1
                filter:
                  type: object
                  description: ''
                  example: []
                  properties:
                    except:
                      type: array
                      description: 'Array containing IDs, excluding records from the list.'
                      example: []
                      items:
                        type: integer
                    search:
                      type: string
                      description: 'Search by keyword. Must be at least 3 characters. Must not be greater than 255 characters.'
                      example: ''
                    visible:
                      type: integer
                      description: 'Must be one of 1 or 0 (available only for admin.groups.view).'
                      example: 1
                    orderby:
                      type: string
                      description: 'Sorting the result list. Must be one of <code>created_at|asc</code>, <code>created_at|desc</code>, <code>updated_at|asc</code>, <code>updated_at|desc</code>, <code>name|asc</code>, <code>name|desc</code>, <code>position|asc</code>, or <code>position|desc</code>.'
                      example: ''
                    paginate:
                      type: integer
                      description: 'Number of records in the list. Must be one of <code>25</code>, <code>50</code>, or <code>100</code>.'
                      example: 100
      security: []
  '/api/payments/{payment_dir_pending}/dir/{driver}':
    get:
      summary: 'Initialise dir''s payment'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    uuid: 1a86efb9-5f07-45a7-b274-91a6edbdea6e
                    driver: null
                    status:
                      value: 2
                      label: pending
                    created_at: '2022-03-12T12:02:29.000000Z'
                    updated_at: '2022-03-12T12:02:29.000000Z'
                    morph:
                      id: 13367
                      slug: quos-dicta-et-quos
                      title: 'Quos dicta et quos.'
                      url: 'http://simonis.biz'
                      short_content: 'Est quo accusantium et officia. Numquam mollitia consequatur et molestiae. Optio placeat et numquam veniam. Veniam adipisci quia aut consequatur et nobis. Tempore molestiae voluptas aspernatur sint. Molestias quae ut deserunt facilis omnis magnam. Mi'
                      content: 'Est quo accusantium et officia. Numquam mollitia consequatur et molestiae. Optio placeat et numquam veniam. Veniam adipisci quia aut consequatur et nobis. Tempore molestiae voluptas aspernatur sint. Molestias quae ut deserunt facilis omnis magnam. Minima et vero officia. Vel ea ad facere qui repellendus.'
                      content_html: 'Est quo accusantium et officia. Numquam mollitia consequatur et molestiae. Optio placeat et numquam veniam. Veniam adipisci quia aut consequatur et nobis. Tempore molestiae voluptas aspernatur sint. Molestias quae ut deserunt facilis omnis magnam. Minima et vero officia. Vel ea ad facere qui repellendus.'
                      less_content_html: 'Est quo accusantium et officia. Numquam mollitia consequatur et molestiae. Optio placeat et numquam veniam. Veniam adipisci quia aut consequatur et nobis. Tempore molestiae voluptas aspernatur sint. Molestias quae ut deserunt facilis omnis magnam. Mi... <a href="https://idir.test:8443/dirs/quos-dicta-et-quos">show more &raquo</a>'
                      thumbnail_url: 'https://idir.test:8443/thumbnails?url=eyJpdiI6InB4UnZLZHdXOUwzSmxHT0VQaWVkNHc9PSIsInZhbHVlIjoicDNVWCtMTHlXZk1zdGlteHlnY3ZORlBJa2ZWdHFaVnNhKytWSHRXTGJhRT0iLCJtYWMiOiIxMmYzMmVhNTc1MTZlODk3ZDhkYzNjZjZjOWMxODMwNWVjOGJlNzQ1NThhMjU1NjczZDJkYzEwMDk5YTYyNjQ2In0='
                      sum_rating: '0.00'
                      created_at: '2022-03-12T12:02:29.000000Z'
                      updated_at: '2022-03-12T12:02:29.000000Z'
                      links: []
                    order:
                      id: 20
                      type: transfer
                      price: '2.70'
                      regular_price: '2.70'
                      discount_price: null
                      discount: null
                      qr_as_image: null
                      days: null
                      created_at: '2022-03-12T12:02:29.000000Z'
                      updated_at: '2022-03-12T12:02:29.000000Z'
                  url: 'https://paytest.cashbill.pl/pl/payment/eydJpZCI6IlRFU1RfNmV6OWZ6dXpvIiwicGMiOiIiLCJ0b2tlbiI6ImJiNjQ3ZGFhOTQ3NDU1NzM0OGRhMzhkYjEyMTE0YTI5MTA0NDhkMGUifQ--'
                properties:
                  data:
                    type: object
                    example:
                      uuid: 1a86efb9-5f07-45a7-b274-91a6edbdea6e
                      driver: null
                      status:
                        value: 2
                        label: pending
                      created_at: '2022-03-12T12:02:29.000000Z'
                      updated_at: '2022-03-12T12:02:29.000000Z'
                      morph:
                        id: 13367
                        slug: quos-dicta-et-quos
                        title: 'Quos dicta et quos.'
                        url: 'http://simonis.biz'
                        short_content: 'Est quo accusantium et officia. Numquam mollitia consequatur et molestiae. Optio placeat et numquam veniam. Veniam adipisci quia aut consequatur et nobis. Tempore molestiae voluptas aspernatur sint. Molestias quae ut deserunt facilis omnis magnam. Mi'
                        content: 'Est quo accusantium et officia. Numquam mollitia consequatur et molestiae. Optio placeat et numquam veniam. Veniam adipisci quia aut consequatur et nobis. Tempore molestiae voluptas aspernatur sint. Molestias quae ut deserunt facilis omnis magnam. Minima et vero officia. Vel ea ad facere qui repellendus.'
                        content_html: 'Est quo accusantium et officia. Numquam mollitia consequatur et molestiae. Optio placeat et numquam veniam. Veniam adipisci quia aut consequatur et nobis. Tempore molestiae voluptas aspernatur sint. Molestias quae ut deserunt facilis omnis magnam. Minima et vero officia. Vel ea ad facere qui repellendus.'
                        less_content_html: 'Est quo accusantium et officia. Numquam mollitia consequatur et molestiae. Optio placeat et numquam veniam. Veniam adipisci quia aut consequatur et nobis. Tempore molestiae voluptas aspernatur sint. Molestias quae ut deserunt facilis omnis magnam. Mi... <a href="https://idir.test:8443/dirs/quos-dicta-et-quos">show more &raquo</a>'
                        thumbnail_url: 'https://idir.test:8443/thumbnails?url=eyJpdiI6InB4UnZLZHdXOUwzSmxHT0VQaWVkNHc9PSIsInZhbHVlIjoicDNVWCtMTHlXZk1zdGlteHlnY3ZORlBJa2ZWdHFaVnNhKytWSHRXTGJhRT0iLCJtYWMiOiIxMmYzMmVhNTc1MTZlODk3ZDhkYzNjZjZjOWMxODMwNWVjOGJlNzQ1NThhMjU1NjczZDJkYzEwMDk5YTYyNjQ2In0='
                        sum_rating: '0.00'
                        created_at: '2022-03-12T12:02:29.000000Z'
                        updated_at: '2022-03-12T12:02:29.000000Z'
                        links: []
                      order:
                        id: 20
                        type: transfer
                        price: '2.70'
                        regular_price: '2.70'
                        discount_price: null
                        discount: null
                        qr_as_image: null
                        days: null
                        created_at: '2022-03-12T12:02:29.000000Z'
                        updated_at: '2022-03-12T12:02:29.000000Z'
                  url:
                    type: string
                    example: 'https://paytest.cashbill.pl/pl/payment/eydJpZCI6IlRFU1RfNmV6OWZ6dXpvIiwicGMiOiIiLCJ0b2tlbiI6ImJiNjQ3ZGFhOTQ3NDU1NzM0OGRhMzhkYjEyMTE0YTI5MTA0NDhkMGUifQ--'
                    description: 'Link to the driver''s payment page (for transfer type payment).'
      tags:
        - Payments
      security: []
    parameters:
      -
        in: path
        name: payment_dir_pending
        description: 'The payment UUID.'
        example: null
        required: true
        schema:
          type: string
      -
        in: path
        name: driver
        description: 'Optional parameter. The payment driver.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
  /api/posts/index:
    post:
      summary: 'Index of posts'
      description: '<aside class="notice">Available only to users with permission: api.access and api.posts.view.</aside>'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 185
                      slug: non-id-itaque-in-delectus-sint
                      title: 'Non id itaque in delectus sint.'
                      short_content: 'Est similique nobis voluptate corrupti assumenda necessitatibus assumenda architecto. Placeat velit aut consequatur qui quaerat. Qui nulla perspiciatis repudiandae et tempora libero nam. Quos vero atque eum natus est sed deleniti culpa. Itaque dolores maxime illum eum nemo. Voluptatem ipsam nulla dolores provident quia voluptatem enim. Et atque voluptate minima dolorem. Odio aut doloribus qui facilis enim. Et molestias voluptate quo quam iusto dolorem consequatur voluptatibus. Aut quo est ut max'
                      content: 'Est similique nobis voluptate corrupti assumenda necessitatibus assumenda architecto. Placeat velit aut consequatur qui quaerat. Qui nulla perspiciatis repudiandae et tempora libero nam. Quos vero atque eum natus est sed deleniti culpa. Itaque dolores maxime illum eum nemo. Voluptatem ipsam nulla dolores provident quia voluptatem enim. Et atque voluptate minima dolorem. Odio aut doloribus qui facilis enim. Et molestias voluptate quo quam iusto dolorem consequatur voluptatibus. Aut quo est ut maxime ad. Facere veritatis qui perferendis assumenda et temporibus. Tenetur animi accusamus dolor soluta velit. Iste accusamus quasi sit deleniti rem perferendis. Eos molestiae dolor repellat nulla. Ut possimus expedita velit est. Exercitationem molestiae sapiente ipsum quasi nihil et id est. Fugiat mollitia quibusdam veniam tenetur et id modi. Ipsa qui vero enim ullam cupiditate ullam debitis fuga. Nobis repellendus voluptas aperiam. Non consectetur sed quod maiores voluptatem. Incidunt voluptatum incidunt est amet libero maxime. Aut et vitae quis. Dolorem voluptatem qui tempora et officia quo voluptatem. Possimus quis error deserunt sit sed id dignissimos et. Ut quia laboriosam sed ut. Suscipit aperiam minima numquam nesciunt. Iure consequatur qui dolor. Est est eaque et amet est commodi quia. Hic et enim saepe rem. Quae porro iste eos qui. Nobis et eos quo aut. Nihil enim fuga voluptatem necessitatibus. Sed ut laboriosam ducimus natus ab consequatur est. Quo libero eum enim sed rem. Corporis aut qui ducimus consequatur consequuntur praesentium iusto. Nobis iusto eum et. Exercitationem ex nisi quaerat est assumenda. Esse illum amet unde ut nisi nihil. Accusantium iste soluta sed nihil reiciendis ex et. Et cupiditate voluptatem dolorum eius totam qui. Ducimus harum fugiat molestiae voluptates. Ut molestias eius qui et et perspiciatis et.'
                      content_html: '<p>Est similique nobis voluptate corrupti assumenda necessitatibus assumenda architecto. Placeat velit aut consequatur qui quaerat. Qui nulla perspiciatis repudiandae et tempora libero nam. Quos vero atque eum natus est sed deleniti culpa. Itaque dolores maxime illum eum nemo. Voluptatem ipsam nulla dolores provident quia voluptatem enim. Et atque voluptate minima dolorem. Odio aut doloribus qui facilis enim. Et molestias voluptate quo quam iusto dolorem consequatur voluptatibus. Aut quo est ut maxime ad. Facere veritatis qui perferendis assumenda et temporibus. Tenetur animi accusamus dolor soluta velit. Iste accusamus quasi sit deleniti rem perferendis. Eos molestiae dolor repellat nulla. Ut possimus expedita velit est. Exercitationem molestiae sapiente ipsum quasi nihil et id est. Fugiat mollitia quibusdam veniam tenetur et id modi. Ipsa qui vero enim ullam cupiditate ullam debitis fuga. Nobis repellendus voluptas aperiam. Non consectetur sed quod maiores voluptatem. Incidunt voluptatum incidunt est amet libero maxime. Aut et vitae quis. Dolorem voluptatem qui tempora et officia quo voluptatem. Possimus quis error deserunt sit sed id dignissimos et. Ut quia laboriosam sed ut. Suscipit aperiam minima numquam nesciunt. Iure consequatur qui dolor. Est est eaque et amet est commodi quia. Hic et enim saepe rem. Quae porro iste eos qui. Nobis et eos quo aut. Nihil enim fuga voluptatem necessitatibus. Sed ut laboriosam ducimus natus ab consequatur est. Quo libero eum enim sed rem. Corporis aut qui ducimus consequatur consequuntur praesentium iusto. Nobis iusto eum et. Exercitationem ex nisi quaerat est assumenda. Esse illum amet unde ut nisi nihil. Accusantium iste soluta sed nihil reiciendis ex et. Et cupiditate voluptatem dolorum eius totam qui. Ducimus harum fugiat molestiae voluptates. Ut molestias eius qui et et perspiciatis et.</p>'
                      no_more_content_html: '<p>Est similique nobis voluptate corrupti assumenda necessitatibus assumenda architecto. Placeat velit aut consequatur qui quaerat. Qui nulla perspiciatis repudiandae et tempora libero nam. Quos vero atque eum natus est sed deleniti culpa. Itaque dolores maxime illum eum nemo. Voluptatem ipsam nulla dolores provident quia voluptatem enim. Et atque voluptate minima dolorem. Odio aut doloribus qui facilis enim. Et molestias voluptate quo quam iusto dolorem consequatur voluptatibus. Aut quo est ut maxime ad. Facere veritatis qui perferendis assumenda et temporibus. Tenetur animi accusamus dolor soluta velit. Iste accusamus quasi sit deleniti rem perferendis. Eos molestiae dolor repellat nulla. Ut possimus expedita velit est. Exercitationem molestiae sapiente ipsum quasi nihil et id est. Fugiat mollitia quibusdam veniam tenetur et id modi. Ipsa qui vero enim ullam cupiditate ullam debitis fuga. Nobis repellendus voluptas aperiam. Non consectetur sed quod maiores voluptatem. Incidunt voluptatum incidunt est amet libero maxime. Aut et vitae quis. Dolorem voluptatem qui tempora et officia quo voluptatem. Possimus quis error deserunt sit sed id dignissimos et. Ut quia laboriosam sed ut. Suscipit aperiam minima numquam nesciunt. Iure consequatur qui dolor. Est est eaque et amet est commodi quia. Hic et enim saepe rem. Quae porro iste eos qui. Nobis et eos quo aut. Nihil enim fuga voluptatem necessitatibus. Sed ut laboriosam ducimus natus ab consequatur est. Quo libero eum enim sed rem. Corporis aut qui ducimus consequatur consequuntur praesentium iusto. Nobis iusto eum et. Exercitationem ex nisi quaerat est assumenda. Esse illum amet unde ut nisi nihil. Accusantium iste soluta sed nihil reiciendis ex et. Et cupiditate voluptatem dolorum eius totam qui. Ducimus harum fugiat molestiae voluptates. Ut molestias eius qui et et perspiciatis et.</p>'
                      less_content_html: '<p>Est similique nobis voluptate corrupti assumenda necessitatibus assumenda architecto. Placeat velit aut consequatur qui quaerat. Qui nulla perspiciatis repudiandae et tempora libero nam. Quos vero atque eum natus est sed deleniti culpa. Itaque dolores maxime illum eum nemo. Voluptatem ipsam nulla dolores provident quia voluptatem enim. Et atque voluptate minima dolorem. Odio aut doloribus qui facilis enim. Et molestias voluptate quo quam iusto dolorem consequatur voluptatibus. Aut quo est ut maxime ad. Facere veritatis qui perferendis assumenda et temporibus. Tenetur animi accusamus dolor soluta velit. Iste accusamus quasi sit deleniti rem perferendis. Eos molestiae dolor repellat nulla. Ut possimus expedita velit est. Exercitationem molestiae sapiente ipsum quasi nihil et id est. Fugiat mollitia quibusdam veniam tenetur et id modi. Ipsa qui vero enim ullam cupiditate ullam debitis fuga. Nobis repellendus voluptas aperiam. Non consectetur sed quod maiores voluptatem. Incidunt voluptatum incidunt est amet libero maxime. Aut et vitae quis. Dolorem voluptatem qui tempora et officia quo voluptatem. Possimus quis error deserunt sit sed id dignissimos et. Ut quia laboriosam sed ut. Suscipit aperiam minima numquam nesciunt. Iure consequatur qui dolor. Est est eaque et amet est commodi quia. Hic et enim saepe rem. Quae porro iste eos qui. Nobis et eos quo aut. Nihil enim fuga voluptatem necessitatibus. Sed ut laboriosam ducimus natus ab consequatur est. Quo libero eum enim sed rem. Corporis aut qui ducimus consequatur consequuntur praesentium iusto. Nobis iusto eum et. Exercitationem ex nisi quaerat est assumenda. Esse illum amet unde ut nisi nihil. Accusantium iste soluta sed nihil reiciendis ex et. Et cupiditate voluptatem dolorum eius totam qui. Ducimus harum fugiat molestiae voluptates. Ut molestias eius qui et et perspiciatis et.</p>'
                      seo_title: null
                      meta_title: 'Non id itaque in delectus sint.'
                      seo_desc: 'Natus reprehenderit totam nihil perferendis. Sed similique numquam ducimus accusamus. Et sit facere voluptatem non laborum.'
                      meta_desc: 'Natus reprehenderit totam nihil perferendis. Sed similique numquam ducimus accusamus. Et sit facere voluptatem non laborum.'
                      seo_noindex: true
                      seo_nofollow: false
                      status:
                        value: 1
                        label: active
                      comment: false
                      first_image: null
                      published_at: '2021-10-05T00:44:56.000000Z'
                      created_at: '2022-03-12T12:02:32.000000Z'
                      updated_at: '2022-03-12T12:02:32.000000Z'
                      user:
                        id: 12246
                        name: 'Elna Baumbach Sr.'
                        status:
                          value: 1
                          label: active
                        created_at: '2022-03-12T12:02:32.000000Z'
                        updated_at: '2022-03-12T12:02:32.000000Z'
                      links:
                        web: 'http://idir.test:8443/posts/non-id-itaque-in-delectus-sint'
                    -
                      id: 186
                      slug: est-in-optio-eaque-quo-consectetur
                      title: 'Est in optio eaque quo consectetur.'
                      short_content: 'Eum assumenda officia ut nihil perferendis. Sequi rerum reiciendis sequi. Exercitationem nihil non amet quia. Laudantium quibusdam aut adipisci blanditiis error et totam eveniet. Est nemo id non. Blanditiis tenetur consequuntur amet ducimus eum et. Animi quae modi nesciunt exercitationem sapiente. Repellendus libero quod et ut esse exercitationem voluptatum. Sit tenetur culpa deleniti numquam explicabo. Architecto aut nihil et. Tempora vero nemo ut in. Et sed id adipisci sunt magnam corporis dis'
                      content: 'Eum assumenda officia ut nihil perferendis. Sequi rerum reiciendis sequi. Exercitationem nihil non amet quia. Laudantium quibusdam aut adipisci blanditiis error et totam eveniet. Est nemo id non. Blanditiis tenetur consequuntur amet ducimus eum et. Animi quae modi nesciunt exercitationem sapiente. Repellendus libero quod et ut esse exercitationem voluptatum. Sit tenetur culpa deleniti numquam explicabo. Architecto aut nihil et. Tempora vero nemo ut in. Et sed id adipisci sunt magnam corporis distinctio. Illo sit quas et dignissimos sed iste. Et vitae optio est explicabo dolores voluptatem. Deleniti similique assumenda est est. At ex veniam rerum consequatur veniam. Iure sit itaque eos. Molestias facere hic vel expedita dignissimos fugiat. Rerum velit sed sint earum rerum. Beatae cumque qui recusandae quisquam sed ut. Quam aut fuga architecto. Culpa eius autem non at. Aperiam nulla assumenda autem et aut. Aut dolor consequatur fuga dicta facilis tempora. Impedit doloribus ut ut quaerat ut. Qui id in molestias expedita. Quaerat harum tempora quia odit amet aliquam aut. Quod velit sint molestiae officia quae quis ea. Facilis fugiat autem error tempora omnis excepturi provident. At veniam culpa quidem repudiandae. Aut aut porro nam in velit est. Deleniti qui dolores vel iure mollitia modi suscipit. Similique dignissimos est consequatur labore aut doloremque quo. Fugit iure odio omnis voluptas aut. Eum asperiores quia alias reprehenderit ut fugiat. Eum praesentium ipsum quod maiores atque. Possimus aut aut doloremque sunt dolores. Aliquid porro perferendis omnis ab vel. Voluptates temporibus earum nemo aperiam fugiat. Dolores ut doloremque asperiores ut. Ea reiciendis at exercitationem blanditiis. Sed et aliquam dicta. Velit libero eum saepe tempore. Quam doloribus ullam dolorum fugit odio pariatur. Amet est et recusandae. Sunt ipsum labore et magni facilis. Explicabo id ipsum necessitatibus quis ut. Quae incidunt et ut ad sint beatae voluptatem ipsa.'
                      content_html: '<p>Eum assumenda officia ut nihil perferendis. Sequi rerum reiciendis sequi. Exercitationem nihil non amet quia. Laudantium quibusdam aut adipisci blanditiis error et totam eveniet. Est nemo id non. Blanditiis tenetur consequuntur amet ducimus eum et. Animi quae modi nesciunt exercitationem sapiente. Repellendus libero quod et ut esse exercitationem voluptatum. Sit tenetur culpa deleniti numquam explicabo. Architecto aut nihil et. Tempora vero nemo ut in. Et sed id adipisci sunt magnam corporis distinctio. Illo sit quas et dignissimos sed iste. Et vitae optio est explicabo dolores voluptatem. Deleniti similique assumenda est est. At ex veniam rerum consequatur veniam. Iure sit itaque eos. Molestias facere hic vel expedita dignissimos fugiat. Rerum velit sed sint earum rerum. Beatae cumque qui recusandae quisquam sed ut. Quam aut fuga architecto. Culpa eius autem non at. Aperiam nulla assumenda autem et aut. Aut dolor consequatur fuga dicta facilis tempora. Impedit doloribus ut ut quaerat ut. Qui id in molestias expedita. Quaerat harum tempora quia odit amet aliquam aut. Quod velit sint molestiae officia quae quis ea. Facilis fugiat autem error tempora omnis excepturi provident. At veniam culpa quidem repudiandae. Aut aut porro nam in velit est. Deleniti qui dolores vel iure mollitia modi suscipit. Similique dignissimos est consequatur labore aut doloremque quo. Fugit iure odio omnis voluptas aut. Eum asperiores quia alias reprehenderit ut fugiat. Eum praesentium ipsum quod maiores atque. Possimus aut aut doloremque sunt dolores. Aliquid porro perferendis omnis ab vel. Voluptates temporibus earum nemo aperiam fugiat. Dolores ut doloremque asperiores ut. Ea reiciendis at exercitationem blanditiis. Sed et aliquam dicta. Velit libero eum saepe tempore. Quam doloribus ullam dolorum fugit odio pariatur. Amet est et recusandae. Sunt ipsum labore et magni facilis. Explicabo id ipsum necessitatibus quis ut. Quae incidunt et ut ad sint beatae voluptatem ipsa.</p>'
                      no_more_content_html: '<p>Eum assumenda officia ut nihil perferendis. Sequi rerum reiciendis sequi. Exercitationem nihil non amet quia. Laudantium quibusdam aut adipisci blanditiis error et totam eveniet. Est nemo id non. Blanditiis tenetur consequuntur amet ducimus eum et. Animi quae modi nesciunt exercitationem sapiente. Repellendus libero quod et ut esse exercitationem voluptatum. Sit tenetur culpa deleniti numquam explicabo. Architecto aut nihil et. Tempora vero nemo ut in. Et sed id adipisci sunt magnam corporis distinctio. Illo sit quas et dignissimos sed iste. Et vitae optio est explicabo dolores voluptatem. Deleniti similique assumenda est est. At ex veniam rerum consequatur veniam. Iure sit itaque eos. Molestias facere hic vel expedita dignissimos fugiat. Rerum velit sed sint earum rerum. Beatae cumque qui recusandae quisquam sed ut. Quam aut fuga architecto. Culpa eius autem non at. Aperiam nulla assumenda autem et aut. Aut dolor consequatur fuga dicta facilis tempora. Impedit doloribus ut ut quaerat ut. Qui id in molestias expedita. Quaerat harum tempora quia odit amet aliquam aut. Quod velit sint molestiae officia quae quis ea. Facilis fugiat autem error tempora omnis excepturi provident. At veniam culpa quidem repudiandae. Aut aut porro nam in velit est. Deleniti qui dolores vel iure mollitia modi suscipit. Similique dignissimos est consequatur labore aut doloremque quo. Fugit iure odio omnis voluptas aut. Eum asperiores quia alias reprehenderit ut fugiat. Eum praesentium ipsum quod maiores atque. Possimus aut aut doloremque sunt dolores. Aliquid porro perferendis omnis ab vel. Voluptates temporibus earum nemo aperiam fugiat. Dolores ut doloremque asperiores ut. Ea reiciendis at exercitationem blanditiis. Sed et aliquam dicta. Velit libero eum saepe tempore. Quam doloribus ullam dolorum fugit odio pariatur. Amet est et recusandae. Sunt ipsum labore et magni facilis. Explicabo id ipsum necessitatibus quis ut. Quae incidunt et ut ad sint beatae voluptatem ipsa.</p>'
                      less_content_html: '<p>Eum assumenda officia ut nihil perferendis. Sequi rerum reiciendis sequi. Exercitationem nihil non amet quia. Laudantium quibusdam aut adipisci blanditiis error et totam eveniet. Est nemo id non. Blanditiis tenetur consequuntur amet ducimus eum et. Animi quae modi nesciunt exercitationem sapiente. Repellendus libero quod et ut esse exercitationem voluptatum. Sit tenetur culpa deleniti numquam explicabo. Architecto aut nihil et. Tempora vero nemo ut in. Et sed id adipisci sunt magnam corporis distinctio. Illo sit quas et dignissimos sed iste. Et vitae optio est explicabo dolores voluptatem. Deleniti similique assumenda est est. At ex veniam rerum consequatur veniam. Iure sit itaque eos. Molestias facere hic vel expedita dignissimos fugiat. Rerum velit sed sint earum rerum. Beatae cumque qui recusandae quisquam sed ut. Quam aut fuga architecto. Culpa eius autem non at. Aperiam nulla assumenda autem et aut. Aut dolor consequatur fuga dicta facilis tempora. Impedit doloribus ut ut quaerat ut. Qui id in molestias expedita. Quaerat harum tempora quia odit amet aliquam aut. Quod velit sint molestiae officia quae quis ea. Facilis fugiat autem error tempora omnis excepturi provident. At veniam culpa quidem repudiandae. Aut aut porro nam in velit est. Deleniti qui dolores vel iure mollitia modi suscipit. Similique dignissimos est consequatur labore aut doloremque quo. Fugit iure odio omnis voluptas aut. Eum asperiores quia alias reprehenderit ut fugiat. Eum praesentium ipsum quod maiores atque. Possimus aut aut doloremque sunt dolores. Aliquid porro perferendis omnis ab vel. Voluptates temporibus earum nemo aperiam fugiat. Dolores ut doloremque asperiores ut. Ea reiciendis at exercitationem blanditiis. Sed et aliquam dicta. Velit libero eum saepe tempore. Quam doloribus ullam dolorum fugit odio pariatur. Amet est et recusandae. Sunt ipsum labore et magni facilis. Explicabo id ipsum necessitatibus quis ut. Quae incidunt et ut ad sint beatae voluptatem ipsa.</p>'
                      seo_title: 'Impedit dolore suscipit ullam.'
                      meta_title: 'Impedit dolore suscipit ullam.'
                      seo_desc: 'Et molestiae aspernatur dolorem quod. Voluptas blanditiis laborum ut et qui laborum voluptatem. Sequi assumenda est et repellendus vel voluptatem fugiat.'
                      meta_desc: 'Et molestiae aspernatur dolorem quod. Voluptas blanditiis laborum ut et qui laborum voluptatem. Sequi assumenda est et repellendus vel voluptatem fugiat.'
                      seo_noindex: true
                      seo_nofollow: false
                      status:
                        value: 1
                        label: active
                      comment: false
                      first_image: null
                      published_at: '2021-03-18T05:16:01.000000Z'
                      created_at: '2022-03-12T12:02:32.000000Z'
                      updated_at: '2022-03-12T12:02:32.000000Z'
                      user:
                        id: 12247
                        name: 'Marques Lueilwitz'
                        status:
                          value: 0
                          label: inactive
                        created_at: '2022-03-12T12:02:32.000000Z'
                        updated_at: '2022-03-12T12:02:32.000000Z'
                      links:
                        web: 'http://idir.test:8443/posts/est-in-optio-eaque-quo-consectetur'
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 185
                        slug: non-id-itaque-in-delectus-sint
                        title: 'Non id itaque in delectus sint.'
                        short_content: 'Est similique nobis voluptate corrupti assumenda necessitatibus assumenda architecto. Placeat velit aut consequatur qui quaerat. Qui nulla perspiciatis repudiandae et tempora libero nam. Quos vero atque eum natus est sed deleniti culpa. Itaque dolores maxime illum eum nemo. Voluptatem ipsam nulla dolores provident quia voluptatem enim. Et atque voluptate minima dolorem. Odio aut doloribus qui facilis enim. Et molestias voluptate quo quam iusto dolorem consequatur voluptatibus. Aut quo est ut max'
                        content: 'Est similique nobis voluptate corrupti assumenda necessitatibus assumenda architecto. Placeat velit aut consequatur qui quaerat. Qui nulla perspiciatis repudiandae et tempora libero nam. Quos vero atque eum natus est sed deleniti culpa. Itaque dolores maxime illum eum nemo. Voluptatem ipsam nulla dolores provident quia voluptatem enim. Et atque voluptate minima dolorem. Odio aut doloribus qui facilis enim. Et molestias voluptate quo quam iusto dolorem consequatur voluptatibus. Aut quo est ut maxime ad. Facere veritatis qui perferendis assumenda et temporibus. Tenetur animi accusamus dolor soluta velit. Iste accusamus quasi sit deleniti rem perferendis. Eos molestiae dolor repellat nulla. Ut possimus expedita velit est. Exercitationem molestiae sapiente ipsum quasi nihil et id est. Fugiat mollitia quibusdam veniam tenetur et id modi. Ipsa qui vero enim ullam cupiditate ullam debitis fuga. Nobis repellendus voluptas aperiam. Non consectetur sed quod maiores voluptatem. Incidunt voluptatum incidunt est amet libero maxime. Aut et vitae quis. Dolorem voluptatem qui tempora et officia quo voluptatem. Possimus quis error deserunt sit sed id dignissimos et. Ut quia laboriosam sed ut. Suscipit aperiam minima numquam nesciunt. Iure consequatur qui dolor. Est est eaque et amet est commodi quia. Hic et enim saepe rem. Quae porro iste eos qui. Nobis et eos quo aut. Nihil enim fuga voluptatem necessitatibus. Sed ut laboriosam ducimus natus ab consequatur est. Quo libero eum enim sed rem. Corporis aut qui ducimus consequatur consequuntur praesentium iusto. Nobis iusto eum et. Exercitationem ex nisi quaerat est assumenda. Esse illum amet unde ut nisi nihil. Accusantium iste soluta sed nihil reiciendis ex et. Et cupiditate voluptatem dolorum eius totam qui. Ducimus harum fugiat molestiae voluptates. Ut molestias eius qui et et perspiciatis et.'
                        content_html: '<p>Est similique nobis voluptate corrupti assumenda necessitatibus assumenda architecto. Placeat velit aut consequatur qui quaerat. Qui nulla perspiciatis repudiandae et tempora libero nam. Quos vero atque eum natus est sed deleniti culpa. Itaque dolores maxime illum eum nemo. Voluptatem ipsam nulla dolores provident quia voluptatem enim. Et atque voluptate minima dolorem. Odio aut doloribus qui facilis enim. Et molestias voluptate quo quam iusto dolorem consequatur voluptatibus. Aut quo est ut maxime ad. Facere veritatis qui perferendis assumenda et temporibus. Tenetur animi accusamus dolor soluta velit. Iste accusamus quasi sit deleniti rem perferendis. Eos molestiae dolor repellat nulla. Ut possimus expedita velit est. Exercitationem molestiae sapiente ipsum quasi nihil et id est. Fugiat mollitia quibusdam veniam tenetur et id modi. Ipsa qui vero enim ullam cupiditate ullam debitis fuga. Nobis repellendus voluptas aperiam. Non consectetur sed quod maiores voluptatem. Incidunt voluptatum incidunt est amet libero maxime. Aut et vitae quis. Dolorem voluptatem qui tempora et officia quo voluptatem. Possimus quis error deserunt sit sed id dignissimos et. Ut quia laboriosam sed ut. Suscipit aperiam minima numquam nesciunt. Iure consequatur qui dolor. Est est eaque et amet est commodi quia. Hic et enim saepe rem. Quae porro iste eos qui. Nobis et eos quo aut. Nihil enim fuga voluptatem necessitatibus. Sed ut laboriosam ducimus natus ab consequatur est. Quo libero eum enim sed rem. Corporis aut qui ducimus consequatur consequuntur praesentium iusto. Nobis iusto eum et. Exercitationem ex nisi quaerat est assumenda. Esse illum amet unde ut nisi nihil. Accusantium iste soluta sed nihil reiciendis ex et. Et cupiditate voluptatem dolorum eius totam qui. Ducimus harum fugiat molestiae voluptates. Ut molestias eius qui et et perspiciatis et.</p>'
                        no_more_content_html: '<p>Est similique nobis voluptate corrupti assumenda necessitatibus assumenda architecto. Placeat velit aut consequatur qui quaerat. Qui nulla perspiciatis repudiandae et tempora libero nam. Quos vero atque eum natus est sed deleniti culpa. Itaque dolores maxime illum eum nemo. Voluptatem ipsam nulla dolores provident quia voluptatem enim. Et atque voluptate minima dolorem. Odio aut doloribus qui facilis enim. Et molestias voluptate quo quam iusto dolorem consequatur voluptatibus. Aut quo est ut maxime ad. Facere veritatis qui perferendis assumenda et temporibus. Tenetur animi accusamus dolor soluta velit. Iste accusamus quasi sit deleniti rem perferendis. Eos molestiae dolor repellat nulla. Ut possimus expedita velit est. Exercitationem molestiae sapiente ipsum quasi nihil et id est. Fugiat mollitia quibusdam veniam tenetur et id modi. Ipsa qui vero enim ullam cupiditate ullam debitis fuga. Nobis repellendus voluptas aperiam. Non consectetur sed quod maiores voluptatem. Incidunt voluptatum incidunt est amet libero maxime. Aut et vitae quis. Dolorem voluptatem qui tempora et officia quo voluptatem. Possimus quis error deserunt sit sed id dignissimos et. Ut quia laboriosam sed ut. Suscipit aperiam minima numquam nesciunt. Iure consequatur qui dolor. Est est eaque et amet est commodi quia. Hic et enim saepe rem. Quae porro iste eos qui. Nobis et eos quo aut. Nihil enim fuga voluptatem necessitatibus. Sed ut laboriosam ducimus natus ab consequatur est. Quo libero eum enim sed rem. Corporis aut qui ducimus consequatur consequuntur praesentium iusto. Nobis iusto eum et. Exercitationem ex nisi quaerat est assumenda. Esse illum amet unde ut nisi nihil. Accusantium iste soluta sed nihil reiciendis ex et. Et cupiditate voluptatem dolorum eius totam qui. Ducimus harum fugiat molestiae voluptates. Ut molestias eius qui et et perspiciatis et.</p>'
                        less_content_html: '<p>Est similique nobis voluptate corrupti assumenda necessitatibus assumenda architecto. Placeat velit aut consequatur qui quaerat. Qui nulla perspiciatis repudiandae et tempora libero nam. Quos vero atque eum natus est sed deleniti culpa. Itaque dolores maxime illum eum nemo. Voluptatem ipsam nulla dolores provident quia voluptatem enim. Et atque voluptate minima dolorem. Odio aut doloribus qui facilis enim. Et molestias voluptate quo quam iusto dolorem consequatur voluptatibus. Aut quo est ut maxime ad. Facere veritatis qui perferendis assumenda et temporibus. Tenetur animi accusamus dolor soluta velit. Iste accusamus quasi sit deleniti rem perferendis. Eos molestiae dolor repellat nulla. Ut possimus expedita velit est. Exercitationem molestiae sapiente ipsum quasi nihil et id est. Fugiat mollitia quibusdam veniam tenetur et id modi. Ipsa qui vero enim ullam cupiditate ullam debitis fuga. Nobis repellendus voluptas aperiam. Non consectetur sed quod maiores voluptatem. Incidunt voluptatum incidunt est amet libero maxime. Aut et vitae quis. Dolorem voluptatem qui tempora et officia quo voluptatem. Possimus quis error deserunt sit sed id dignissimos et. Ut quia laboriosam sed ut. Suscipit aperiam minima numquam nesciunt. Iure consequatur qui dolor. Est est eaque et amet est commodi quia. Hic et enim saepe rem. Quae porro iste eos qui. Nobis et eos quo aut. Nihil enim fuga voluptatem necessitatibus. Sed ut laboriosam ducimus natus ab consequatur est. Quo libero eum enim sed rem. Corporis aut qui ducimus consequatur consequuntur praesentium iusto. Nobis iusto eum et. Exercitationem ex nisi quaerat est assumenda. Esse illum amet unde ut nisi nihil. Accusantium iste soluta sed nihil reiciendis ex et. Et cupiditate voluptatem dolorum eius totam qui. Ducimus harum fugiat molestiae voluptates. Ut molestias eius qui et et perspiciatis et.</p>'
                        seo_title: null
                        meta_title: 'Non id itaque in delectus sint.'
                        seo_desc: 'Natus reprehenderit totam nihil perferendis. Sed similique numquam ducimus accusamus. Et sit facere voluptatem non laborum.'
                        meta_desc: 'Natus reprehenderit totam nihil perferendis. Sed similique numquam ducimus accusamus. Et sit facere voluptatem non laborum.'
                        seo_noindex: true
                        seo_nofollow: false
                        status:
                          value: 1
                          label: active
                        comment: false
                        first_image: null
                        published_at: '2021-10-05T00:44:56.000000Z'
                        created_at: '2022-03-12T12:02:32.000000Z'
                        updated_at: '2022-03-12T12:02:32.000000Z'
                        user:
                          id: 12246
                          name: 'Elna Baumbach Sr.'
                          status:
                            value: 1
                            label: active
                          created_at: '2022-03-12T12:02:32.000000Z'
                          updated_at: '2022-03-12T12:02:32.000000Z'
                        links:
                          web: 'http://idir.test:8443/posts/non-id-itaque-in-delectus-sint'
                      -
                        id: 186
                        slug: est-in-optio-eaque-quo-consectetur
                        title: 'Est in optio eaque quo consectetur.'
                        short_content: 'Eum assumenda officia ut nihil perferendis. Sequi rerum reiciendis sequi. Exercitationem nihil non amet quia. Laudantium quibusdam aut adipisci blanditiis error et totam eveniet. Est nemo id non. Blanditiis tenetur consequuntur amet ducimus eum et. Animi quae modi nesciunt exercitationem sapiente. Repellendus libero quod et ut esse exercitationem voluptatum. Sit tenetur culpa deleniti numquam explicabo. Architecto aut nihil et. Tempora vero nemo ut in. Et sed id adipisci sunt magnam corporis dis'
                        content: 'Eum assumenda officia ut nihil perferendis. Sequi rerum reiciendis sequi. Exercitationem nihil non amet quia. Laudantium quibusdam aut adipisci blanditiis error et totam eveniet. Est nemo id non. Blanditiis tenetur consequuntur amet ducimus eum et. Animi quae modi nesciunt exercitationem sapiente. Repellendus libero quod et ut esse exercitationem voluptatum. Sit tenetur culpa deleniti numquam explicabo. Architecto aut nihil et. Tempora vero nemo ut in. Et sed id adipisci sunt magnam corporis distinctio. Illo sit quas et dignissimos sed iste. Et vitae optio est explicabo dolores voluptatem. Deleniti similique assumenda est est. At ex veniam rerum consequatur veniam. Iure sit itaque eos. Molestias facere hic vel expedita dignissimos fugiat. Rerum velit sed sint earum rerum. Beatae cumque qui recusandae quisquam sed ut. Quam aut fuga architecto. Culpa eius autem non at. Aperiam nulla assumenda autem et aut. Aut dolor consequatur fuga dicta facilis tempora. Impedit doloribus ut ut quaerat ut. Qui id in molestias expedita. Quaerat harum tempora quia odit amet aliquam aut. Quod velit sint molestiae officia quae quis ea. Facilis fugiat autem error tempora omnis excepturi provident. At veniam culpa quidem repudiandae. Aut aut porro nam in velit est. Deleniti qui dolores vel iure mollitia modi suscipit. Similique dignissimos est consequatur labore aut doloremque quo. Fugit iure odio omnis voluptas aut. Eum asperiores quia alias reprehenderit ut fugiat. Eum praesentium ipsum quod maiores atque. Possimus aut aut doloremque sunt dolores. Aliquid porro perferendis omnis ab vel. Voluptates temporibus earum nemo aperiam fugiat. Dolores ut doloremque asperiores ut. Ea reiciendis at exercitationem blanditiis. Sed et aliquam dicta. Velit libero eum saepe tempore. Quam doloribus ullam dolorum fugit odio pariatur. Amet est et recusandae. Sunt ipsum labore et magni facilis. Explicabo id ipsum necessitatibus quis ut. Quae incidunt et ut ad sint beatae voluptatem ipsa.'
                        content_html: '<p>Eum assumenda officia ut nihil perferendis. Sequi rerum reiciendis sequi. Exercitationem nihil non amet quia. Laudantium quibusdam aut adipisci blanditiis error et totam eveniet. Est nemo id non. Blanditiis tenetur consequuntur amet ducimus eum et. Animi quae modi nesciunt exercitationem sapiente. Repellendus libero quod et ut esse exercitationem voluptatum. Sit tenetur culpa deleniti numquam explicabo. Architecto aut nihil et. Tempora vero nemo ut in. Et sed id adipisci sunt magnam corporis distinctio. Illo sit quas et dignissimos sed iste. Et vitae optio est explicabo dolores voluptatem. Deleniti similique assumenda est est. At ex veniam rerum consequatur veniam. Iure sit itaque eos. Molestias facere hic vel expedita dignissimos fugiat. Rerum velit sed sint earum rerum. Beatae cumque qui recusandae quisquam sed ut. Quam aut fuga architecto. Culpa eius autem non at. Aperiam nulla assumenda autem et aut. Aut dolor consequatur fuga dicta facilis tempora. Impedit doloribus ut ut quaerat ut. Qui id in molestias expedita. Quaerat harum tempora quia odit amet aliquam aut. Quod velit sint molestiae officia quae quis ea. Facilis fugiat autem error tempora omnis excepturi provident. At veniam culpa quidem repudiandae. Aut aut porro nam in velit est. Deleniti qui dolores vel iure mollitia modi suscipit. Similique dignissimos est consequatur labore aut doloremque quo. Fugit iure odio omnis voluptas aut. Eum asperiores quia alias reprehenderit ut fugiat. Eum praesentium ipsum quod maiores atque. Possimus aut aut doloremque sunt dolores. Aliquid porro perferendis omnis ab vel. Voluptates temporibus earum nemo aperiam fugiat. Dolores ut doloremque asperiores ut. Ea reiciendis at exercitationem blanditiis. Sed et aliquam dicta. Velit libero eum saepe tempore. Quam doloribus ullam dolorum fugit odio pariatur. Amet est et recusandae. Sunt ipsum labore et magni facilis. Explicabo id ipsum necessitatibus quis ut. Quae incidunt et ut ad sint beatae voluptatem ipsa.</p>'
                        no_more_content_html: '<p>Eum assumenda officia ut nihil perferendis. Sequi rerum reiciendis sequi. Exercitationem nihil non amet quia. Laudantium quibusdam aut adipisci blanditiis error et totam eveniet. Est nemo id non. Blanditiis tenetur consequuntur amet ducimus eum et. Animi quae modi nesciunt exercitationem sapiente. Repellendus libero quod et ut esse exercitationem voluptatum. Sit tenetur culpa deleniti numquam explicabo. Architecto aut nihil et. Tempora vero nemo ut in. Et sed id adipisci sunt magnam corporis distinctio. Illo sit quas et dignissimos sed iste. Et vitae optio est explicabo dolores voluptatem. Deleniti similique assumenda est est. At ex veniam rerum consequatur veniam. Iure sit itaque eos. Molestias facere hic vel expedita dignissimos fugiat. Rerum velit sed sint earum rerum. Beatae cumque qui recusandae quisquam sed ut. Quam aut fuga architecto. Culpa eius autem non at. Aperiam nulla assumenda autem et aut. Aut dolor consequatur fuga dicta facilis tempora. Impedit doloribus ut ut quaerat ut. Qui id in molestias expedita. Quaerat harum tempora quia odit amet aliquam aut. Quod velit sint molestiae officia quae quis ea. Facilis fugiat autem error tempora omnis excepturi provident. At veniam culpa quidem repudiandae. Aut aut porro nam in velit est. Deleniti qui dolores vel iure mollitia modi suscipit. Similique dignissimos est consequatur labore aut doloremque quo. Fugit iure odio omnis voluptas aut. Eum asperiores quia alias reprehenderit ut fugiat. Eum praesentium ipsum quod maiores atque. Possimus aut aut doloremque sunt dolores. Aliquid porro perferendis omnis ab vel. Voluptates temporibus earum nemo aperiam fugiat. Dolores ut doloremque asperiores ut. Ea reiciendis at exercitationem blanditiis. Sed et aliquam dicta. Velit libero eum saepe tempore. Quam doloribus ullam dolorum fugit odio pariatur. Amet est et recusandae. Sunt ipsum labore et magni facilis. Explicabo id ipsum necessitatibus quis ut. Quae incidunt et ut ad sint beatae voluptatem ipsa.</p>'
                        less_content_html: '<p>Eum assumenda officia ut nihil perferendis. Sequi rerum reiciendis sequi. Exercitationem nihil non amet quia. Laudantium quibusdam aut adipisci blanditiis error et totam eveniet. Est nemo id non. Blanditiis tenetur consequuntur amet ducimus eum et. Animi quae modi nesciunt exercitationem sapiente. Repellendus libero quod et ut esse exercitationem voluptatum. Sit tenetur culpa deleniti numquam explicabo. Architecto aut nihil et. Tempora vero nemo ut in. Et sed id adipisci sunt magnam corporis distinctio. Illo sit quas et dignissimos sed iste. Et vitae optio est explicabo dolores voluptatem. Deleniti similique assumenda est est. At ex veniam rerum consequatur veniam. Iure sit itaque eos. Molestias facere hic vel expedita dignissimos fugiat. Rerum velit sed sint earum rerum. Beatae cumque qui recusandae quisquam sed ut. Quam aut fuga architecto. Culpa eius autem non at. Aperiam nulla assumenda autem et aut. Aut dolor consequatur fuga dicta facilis tempora. Impedit doloribus ut ut quaerat ut. Qui id in molestias expedita. Quaerat harum tempora quia odit amet aliquam aut. Quod velit sint molestiae officia quae quis ea. Facilis fugiat autem error tempora omnis excepturi provident. At veniam culpa quidem repudiandae. Aut aut porro nam in velit est. Deleniti qui dolores vel iure mollitia modi suscipit. Similique dignissimos est consequatur labore aut doloremque quo. Fugit iure odio omnis voluptas aut. Eum asperiores quia alias reprehenderit ut fugiat. Eum praesentium ipsum quod maiores atque. Possimus aut aut doloremque sunt dolores. Aliquid porro perferendis omnis ab vel. Voluptates temporibus earum nemo aperiam fugiat. Dolores ut doloremque asperiores ut. Ea reiciendis at exercitationem blanditiis. Sed et aliquam dicta. Velit libero eum saepe tempore. Quam doloribus ullam dolorum fugit odio pariatur. Amet est et recusandae. Sunt ipsum labore et magni facilis. Explicabo id ipsum necessitatibus quis ut. Quae incidunt et ut ad sint beatae voluptatem ipsa.</p>'
                        seo_title: 'Impedit dolore suscipit ullam.'
                        meta_title: 'Impedit dolore suscipit ullam.'
                        seo_desc: 'Et molestiae aspernatur dolorem quod. Voluptas blanditiis laborum ut et qui laborum voluptatem. Sequi assumenda est et repellendus vel voluptatem fugiat.'
                        meta_desc: 'Et molestiae aspernatur dolorem quod. Voluptas blanditiis laborum ut et qui laborum voluptatem. Sequi assumenda est et repellendus vel voluptatem fugiat.'
                        seo_noindex: true
                        seo_nofollow: false
                        status:
                          value: 1
                          label: active
                        comment: false
                        first_image: null
                        published_at: '2021-03-18T05:16:01.000000Z'
                        created_at: '2022-03-12T12:02:32.000000Z'
                        updated_at: '2022-03-12T12:02:32.000000Z'
                        user:
                          id: 12247
                          name: 'Marques Lueilwitz'
                          status:
                            value: 0
                            label: inactive
                          created_at: '2022-03-12T12:02:32.000000Z'
                          updated_at: '2022-03-12T12:02:32.000000Z'
                        links:
                          web: 'http://idir.test:8443/posts/est-in-optio-eaque-quo-consectetur'
                    items:
                      type: object
      tags:
        - Posts
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: integer
                  description: ''
                  example: 1
                filter:
                  type: object
                  description: ''
                  example: []
                  properties:
                    except:
                      type: array
                      description: 'Array containing IDs, excluding records from the list.'
                      example: []
                      items:
                        type: integer
                    search:
                      type: string
                      description: 'Search by keyword. Must be at least 3 characters. Must not be greater than 255 characters.'
                      example: ''
                    status:
                      type: integer
                      description: 'Must be one of 1 or (available only for admin.categories.view) 0, 2.'
                      example: 1
                    category:
                      type: integer
                      description: 'ID of category contains posts.'
                      example: 18
                    orderby:
                      type: string
                      description: 'Sorting the result list. Must be one of <code>created_at|asc</code>, <code>created_at|desc</code>, <code>updated_at|asc</code>, <code>updated_at|desc</code>, <code>title|asc</code>, <code>title|desc</code>, <code>view|desc</code>, or <code>view|asc</code>.'
                      example: created_at|asc
                    paginate:
                      type: integer
                      description: 'Number of records in the list. Must be one of <code>25</code>, <code>50</code>, or <code>100</code>.'
                      example: 100
  /api/tags/index:
    post:
      summary: 'Index of tags'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      name: 'usługi galwaniczne'
                      slug: uslugi-galwaniczne
                      created_at: '2021-01-06T17:01:54.000000Z'
                      updated_at: '2021-01-06T17:01:54.000000Z'
                    -
                      id: 1
                      name: 'usługi galwaniczne'
                      slug: uslugi-galwaniczne
                      created_at: '2021-01-06T17:01:54.000000Z'
                      updated_at: '2021-01-06T17:01:54.000000Z'
                  meta: 'Paging, filtering and sorting information'
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        name: 'usługi galwaniczne'
                        slug: uslugi-galwaniczne
                        created_at: '2021-01-06T17:01:54.000000Z'
                        updated_at: '2021-01-06T17:01:54.000000Z'
                      -
                        id: 1
                        name: 'usługi galwaniczne'
                        slug: uslugi-galwaniczne
                        created_at: '2021-01-06T17:01:54.000000Z'
                        updated_at: '2021-01-06T17:01:54.000000Z'
                    items:
                      type: object
                  meta:
                    type: string
                    example: 'Paging, filtering and sorting information'
      tags:
        - Tags
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: integer
                  description: ''
                  example: 1
                filter:
                  type: object
                  description: ''
                  example: []
                  properties:
                    except:
                      type: array
                      description: 'Array containing IDs, excluding records from the list.'
                      example: []
                      items:
                        type: integer
                    search:
                      type: string
                      description: 'Search by keyword. Must be at least 3 characters. Must not be greater than 255 characters.'
                      example: ''
                    orderby:
                      type: string
                      description: 'Sorting the result list. Must be one of <code>created_at|asc</code>, <code>created_at|desc</code>, <code>updated_at|asc</code>, <code>updated_at|desc</code>, <code>sum|asc</code>, or <code>sum|desc</code>.'
                      example: sum|asc
                    paginate:
                      type: integer
                      description: 'Number of records in the list. Must be one of <code>25</code>, <code>50</code>, or <code>100</code>.'
                      example: 25
      security: []
  '/api/tokens/{token}':
    delete:
      summary: 'Delete token'
      description: "Delete personal access token.\n\n<aside class=\"notice\">Available only to users with permissions: api.access and api.tokens.delete.</aside>"
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Tokens
    parameters:
      -
        in: path
        name: token
        description: 'The token ID.'
        example: null
        required: true
        schema:
          type: integer
  /api/tokens:
    post:
      summary: 'Create token'
      description: "Create personal access token.\n\n<aside class=\"notice\">Available only to users with permissions: api.access and api.tokens.create.</aside>"
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        201:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  access_token: 1|LN8Gmqe6cRHQpPr5X5GW9wFXuqHVK09L8FSb7Ju9
                properties:
                  access_token:
                    type: string
                    example: 1|LN8Gmqe6cRHQpPr5X5GW9wFXuqHVK09L8FSb7Ju9
                    description: ''
      tags:
        - Tokens
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be between 3 and 255 characters.'
                  example: Access
                expiration:
                  type: integer
                  description: 'Token expiration time on days. If null is unlimited. Must not be greater than 1000.'
                  example: 7
                abilities:
                  type: array
                  description: 'Array containing scopes. Wildcard supported. Must be one of <code>api.*</code>, <code>api.users.*</code>, <code>api.users.view</code>, <code>api.categories.*</code>, <code>api.categories.view</code>, <code>api.tags.*</code>, <code>api.tags.view</code>, <code>api.posts.*</code>, <code>api.posts.view</code>, <code>api.tokens.*</code>, <code>api.tokens.create</code>, <code>api.tokens.delete</code>, <code>api.groups.*</code>, <code>api.groups.view</code>, <code>api.dirs.*</code>, <code>api.dirs.view</code>, <code>api.dirs.create</code>, <code>api.dirs.edit</code>, or <code>api.dirs.delete</code>.'
                  example:
                    - 'api.*'
                  items:
                    type: string
              required:
                - name
                - abilities
  /api/users/index:
    post:
      summary: 'Index of users'
      description: '<aside class="notice">Available only to users with permissions: api.access, api.users.view and admin.users.view.</aside>'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 12243
                      name: 'Mr. Kenny Lind'
                      status:
                        value: 1
                        label: active
                      created_at: '2022-03-12T12:02:32.000000Z'
                      updated_at: '2022-03-12T12:02:32.000000Z'
                      roles:
                        -
                          id: 3
                          name: user
                          created_at: '2021-01-06T16:58:51.000000Z'
                          updated_at: '2021-01-06T16:58:51.000000Z'
                    -
                      id: 12244
                      name: 'Ramiro Kling'
                      status:
                        value: 1
                        label: active
                      created_at: '2022-03-12T12:02:32.000000Z'
                      updated_at: '2022-03-12T12:02:32.000000Z'
                      roles:
                        -
                          id: 3
                          name: user
                          created_at: '2021-01-06T16:58:51.000000Z'
                          updated_at: '2021-01-06T16:58:51.000000Z'
                  meta: 'Paging, filtering and sorting information'
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 12243
                        name: 'Mr. Kenny Lind'
                        status:
                          value: 1
                          label: active
                        created_at: '2022-03-12T12:02:32.000000Z'
                        updated_at: '2022-03-12T12:02:32.000000Z'
                        roles:
                          -
                            id: 3
                            name: user
                            created_at: '2021-01-06T16:58:51.000000Z'
                            updated_at: '2021-01-06T16:58:51.000000Z'
                      -
                        id: 12244
                        name: 'Ramiro Kling'
                        status:
                          value: 1
                          label: active
                        created_at: '2022-03-12T12:02:32.000000Z'
                        updated_at: '2022-03-12T12:02:32.000000Z'
                        roles:
                          -
                            id: 3
                            name: user
                            created_at: '2021-01-06T16:58:51.000000Z'
                            updated_at: '2021-01-06T16:58:51.000000Z'
                    items:
                      type: object
                  meta:
                    type: string
                    example: 'Paging, filtering and sorting information'
      tags:
        - Users
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: integer
                  description: ''
                  example: 1
                filter:
                  type: object
                  description: ''
                  example: []
                  properties:
                    except:
                      type: array
                      description: 'Array containing IDs, excluding records from the list.'
                      example: []
                      items:
                        type: integer
                    search:
                      type: string
                      description: 'Search by keyword. Must be at least 3 characters. Must not be greater than 255 characters.'
                      example: ''
                    status:
                      type: integer
                      description: 'Must be one of 1 or 0 (available only for admin.users.view).'
                      example: 1
                    role:
                      type: integer
                      description: ''
                      example: 1
                    orderby:
                      type: string
                      description: 'Sorting the result list. Must be one of <code>created_at|asc</code>, <code>created_at|desc</code>, <code>updated_at|asc</code>, or <code>updated_at|desc</code>.'
                      example: updated_at|asc
                    paginate:
                      type: integer
                      description: 'Number of records in the list. Must be one of <code>25</code>, <code>50</code>, or <code>100</code>.'
                      example: 25
tags:
  -
    name: 'Authenticated user'
    description: "\n> Routes:\n\n    /routes/vendor/icore/api/user.php\n\n> Controller:\n\n    N1ebieski\\ICore\\Http\\Controllers\\Api\\Auth\\UserController"
  -
    name: Authentication
    description: "\n> Routes:\n\n    /routes/vendor/icore/api/auth.php\n\n> Controllers:\n\n    N1ebieski\\ICore\\Http\\Controllers\\Api\\Auth\\RegisterController\n    N1ebieski\\ICore\\Http\\Controllers\\Api\\Auth\\TokenController"
  -
    name: Categories
    description: "\n> Routes:\n\n    /routes/vendor/icore/api/categories.php\n    /routes/vendor/idir/api/categories.php\n\n> Controllers:\n\n    N1ebieski\\ICore\\Http\\Controllers\\Api\\Category\\CategoryController\n    N1ebieski\\ICore\\Http\\Controllers\\Api\\Category\\Post\\CategoryController\n    N1ebieski\\IDir\\Http\\Controllers\\Api\\Category\\Dir\\CategoryController\n\n> Resource:\n\n    N1ebieski\\ICore\\Http\\Resources\\Category\\CategoryResource\n\nPermissions:\n\n- api.* - access to all api endpoints\n- api.categories.* - access to all categories endpoints\n- api.categories.view - access to endpoints with collection of categories"
  -
    name: Dirs
    description: "\n> Routes:\n\n    /routes/vendor/idir/api/dirs.php\n\n> Controller:\n\n    N1ebieski\\IDir\\Http\\Controllers\\Api\\Dir\\DirController\n\n> Resource:\n\n    N1ebieski\\IDir\\Http\\Resources\\Dir\\DirResource\n\nPermissions:\n\n- api.* - access to all api endpoints\n- api.dirs.* - access to all dirs endpoints\n- api.dirs.view - access to endpoints with collection of dirs\n- api.dirs.create - access to create dir endpoint\n- api.dirs.edit - access to edit token endpoint\n- api.dirs.delete - access to delete token endpoint"
  -
    name: Groups
    description: "\n> Routes:\n\n    /routes/vendor/idir/api/groups.php\n\n> Controller:\n\n    N1ebieski\\IDir\\Http\\Controllers\\Api\\Group\\GroupController\n\n> Resource:\n\n    N1ebieski\\IDir\\Http\\Resources\\Group\\GroupResource"
  -
    name: Payments
    description: "\n> Routes:\n\n    /routes/vendor/idir/api/payments.php\n\n> Controller:\n\n    N1ebieski\\IDir\\Http\\Controllers\\Api\\Payment\\Dir\\PaymentController\n\n> Resource:\n\n    N1ebieski\\IDir\\Http\\Resources\\Payment\\PaymentResource"
  -
    name: Posts
    description: "\n> Routes:\n\n    /routes/vendor/icore/api/posts.php\n\n> Controller:\n\n    N1ebieski\\ICore\\Http\\Controllers\\Api\\Post\\PostController\n\n> Resource:\n\n    N1ebieski\\ICore\\Http\\Resources\\Post\\PostResource\n\nPermissions:\n\n- api.* - access to all api endpoints\n- api.posts.* - access to all posts endpoints\n- api.posts.view - access to endpoints with collection of posts"
  -
    name: Tags
    description: "\n> Routes:\n\n    /routes/vendor/icore/api/tags.php\n\n> Controller:\n\n    N1ebieski\\ICore\\Http\\Controllers\\Api\\Tag\\TagController\n\n> Resource:\n\n    N1ebieski\\ICore\\Http\\Resources\\Tag\\TagResource\n\nPermissions:\n\n- api.* - access to all api endpoints\n- api.tags.* - access to all tags endpoints\n- api.tags.view - access to endpoints with collection of tags"
  -
    name: Tokens
    description: "\n> Routes:\n\n    /routes/vendor/icore/api/tokens.php\n\n> Controller:\n\n    N1ebieski\\ICore\\Http\\Controllers\\Api\\Token\\TokenController\n\nPermissions:\n\n- api.* - access to all api endpoints\n- api.tokens.* - access to all tokens endpoints\n- api.tokens.create - access to create token endpoint\n- api.tokens.delete - access to delete token endpoint"
  -
    name: Users
    description: "\n> Routes:\n\n    /routes/vendor/icore/api/users.php\n\n> Controller:\n\n    N1ebieski\\ICore\\Http\\Controllers\\Api\\User\\UserController\n\n> Resource:\n\n    N1ebieski\\ICore\\Http\\Resources\\User\\UserResource\n\nPermissions:\n\n- api.* - access to all api endpoints\n- api.users.* - access to all users endpoints\n- api.users.view - access to endpoints with collection of users"
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: ''
security:
  -
    default: []
