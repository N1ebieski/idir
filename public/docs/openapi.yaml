openapi: 3.0.3
info:
  title: 'API Documentation - iDir - nowoczesny katalog stron'
  description: ''
  version: 1.0.0
servers:
  -
    url: 'https://idir.test:8443'
paths:
  /api/user:
    get:
      summary: 'Show user'
      description: 'Show authenticated User resource'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 12345
                    name: 'Roma Goyette'
                    status:
                      value: 1
                      label: active
                    created_at: '2022-03-03T22:44:28.000000Z'
                    created_at_diff: '1 second ago'
                    updated_at: '2022-03-03T22:44:28.000000Z'
                    updated_at_diff: '1 second ago'
                    roles:
                      -
                        id: 3
                        name: user
                        created_at: '2021-01-06T16:58:51.000000Z'
                        created_at_diff: '1 year 1 month ago'
                properties:
                  data:
                    type: object
                    example:
                      id: 12345
                      name: 'Roma Goyette'
                      status:
                        value: 1
                        label: active
                      created_at: '2022-03-03T22:44:28.000000Z'
                      created_at_diff: '1 second ago'
                      updated_at: '2022-03-03T22:44:28.000000Z'
                      updated_at_diff: '1 second ago'
                      roles:
                        -
                          id: 3
                          name: user
                          created_at: '2021-01-06T16:58:51.000000Z'
                          created_at_diff: '1 year 1 month ago'
      tags:
        - 'Authenticated user'
  /api/token:
    post:
      summary: Token
      description: "Create access token and (optional) refresh token.\n\n<aside class=\"notice\">Access token expires after 2 hours. Refresh token expires after 1 year.</aside>"
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        201:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  access_token: 1|LN8Gmqe6cRHQpPr5X5GW9wFXuqHVK09L8FSb7Ju9
                  refresh_token: 2|hVHAhrgiBmSbyYjbVAC17wjwAJyKK8TQmhglBAtM
                properties:
                  access_token:
                    type: string
                    example: 1|LN8Gmqe6cRHQpPr5X5GW9wFXuqHVK09L8FSb7Ju9
                    description: ''
                  refresh_token:
                    type: string
                    example: 2|hVHAhrgiBmSbyYjbVAC17wjwAJyKK8TQmhglBAtM
                    description: '(only if remember param was true)'
      tags:
        - Authentication
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: ''
                  example: kontakt@demo.idir.intelekt.net.pl
                password:
                  type: string
                  description: ''
                  example: demo1234
                remember:
                  type: boolean
                  description: ''
                  example: true
      security: []
  /api/register:
    post:
      summary: Register
      description: 'Create user and send email verification notification'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 12348
                    name: 'Kaleb OKeefe'
                    status:
                      value: 1
                      label: active
                    created_at: '2022-03-03T22:44:29.000000Z'
                    created_at_diff: '1 second ago'
                    updated_at: '2022-03-03T22:44:29.000000Z'
                    updated_at_diff: '1 second ago'
                    roles:
                      -
                        id: 3
                        name: user
                        created_at: '2021-01-06T16:58:51.000000Z'
                        created_at_diff: '1 year 1 month ago'
                properties:
                  data:
                    type: object
                    example:
                      id: 12348
                      name: 'Kaleb OKeefe'
                      status:
                        value: 1
                        label: active
                      created_at: '2022-03-03T22:44:29.000000Z'
                      created_at_diff: '1 second ago'
                      updated_at: '2022-03-03T22:44:29.000000Z'
                      updated_at_diff: '1 second ago'
                      roles:
                        -
                          id: 3
                          name: user
                          created_at: '2021-01-06T16:58:51.000000Z'
                          created_at_diff: '1 year 1 month ago'
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: N1ebieski
                email:
                  type: string
                  description: ''
                  example: example@example.pl
                password:
                  type: string
                  description: ''
                  example: demo1234
                password_confirmation:
                  type: string
                  description: ''
                  example: demo1234
                privacy_agreement:
                  type: boolean
                  description: 'Acceptance of privacy policy'
                  example: true
                contact_agreement:
                  type: boolean
                  description: 'Acceptance of receiving e-mail system notifications'
                  example: true
                marketing_agreement:
                  type: boolean
                  description: 'Acceptance of receiving marketing information notifications'
                  example: true
              required:
                - name
                - email
                - password
                - password_confirmation
                - privacy_agreement
                - contact_agreement
      security: []
  /api/revoke:
    post:
      summary: 'Revoke token'
      description: 'Revoke access token and refresh token.'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        204:
          description: success
      tags:
        - Authentication
  /api/refresh:
    post:
      summary: 'Refresh token'
      description: "Create new access token and refresh token.\n\n<aside class=\"success\">Refresh token must be in the Authorization header with the value \"Bearer {YOUR_REFRESH_TOKEN}\".</aside>"
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_REFRESH_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        201:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  access_token: 3|LN8Gmqe6cRHQpPr5X5GW9wFXuqHVK09L8FSb7Ju9
                  refresh_token: 4|hVHAhrgiBmSbyYjbVAC17wjwAJyKK8TQmhglBAtM
                properties:
                  access_token:
                    type: string
                    example: 3|LN8Gmqe6cRHQpPr5X5GW9wFXuqHVK09L8FSb7Ju9
                    description: ''
                  refresh_token:
                    type: string
                    example: 4|hVHAhrgiBmSbyYjbVAC17wjwAJyKK8TQmhglBAtM
                    description: ''
      tags:
        - Authentication
  /api/categories/dir/index:
    post:
      summary: 'Index of dir''s categories'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 2615
                      name: 'accusamus est'
                      slug: accusamus-est
                      icon: null
                      status:
                        value: 1
                        label: active
                      real_depth: 0
                      created_at: '2022-03-03T22:44:28.000000Z'
                      created_at_diff: '1 second ago'
                      updated_at: '2022-03-03T22:44:28.000000Z'
                      updated_at_diff: '1 second ago'
                    -
                      id: 2616
                      name: 'eum nostrum'
                      slug: eum-nostrum
                      icon: null
                      status:
                        value: 1
                        label: active
                      real_depth: 0
                      created_at: '2022-03-03T22:44:28.000000Z'
                      created_at_diff: '1 second ago'
                      updated_at: '2022-03-03T22:44:28.000000Z'
                      updated_at_diff: '1 second ago'
                  meta: 'Paging, filtering and sorting information'
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 2615
                        name: 'accusamus est'
                        slug: accusamus-est
                        icon: null
                        status:
                          value: 1
                          label: active
                        real_depth: 0
                        created_at: '2022-03-03T22:44:28.000000Z'
                        created_at_diff: '1 second ago'
                        updated_at: '2022-03-03T22:44:28.000000Z'
                        updated_at_diff: '1 second ago'
                      -
                        id: 2616
                        name: 'eum nostrum'
                        slug: eum-nostrum
                        icon: null
                        status:
                          value: 1
                          label: active
                        real_depth: 0
                        created_at: '2022-03-03T22:44:28.000000Z'
                        created_at_diff: '1 second ago'
                        updated_at: '2022-03-03T22:44:28.000000Z'
                        updated_at_diff: '1 second ago'
                    items:
                      type: object
                  meta:
                    type: string
                    example: 'Paging, filtering and sorting information'
      tags:
        - Categories
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: integer
                  description: ''
                  example: 1
                filter:
                  type: object
                  description: ''
                  example: []
                  properties:
                    except:
                      type: array
                      description: 'Array containing IDs, excluding records from the list.'
                      example: []
                      items:
                        type: integer
                    search:
                      type: string
                      description: 'Search by keyword. Must be at least 3 characters. Must not be greater than 255 characters.'
                      example: ''
                    status:
                      type: integer
                      description: 'Must be one of 1 or 0 (available only for admin.categories.view).'
                      example: 1
                    parent:
                      type: integer
                      description: 'ID of category parent. If 0, shows only roots.'
                      example: 0
                    orderby:
                      type: string
                      description: 'Sorting the result list. Must be one of <code>created_at|asc</code>, <code>created_at|desc</code>, <code>updated_at|asc</code>, <code>updated_at|desc</code>, <code>name|asc</code>, <code>name|desc</code>, <code>position|asc</code>, <code>position|desc</code>, <code>real_depth|asc</code>, or <code>real_depth|desc</code>.'
                      example: ''
                    paginate:
                      type: integer
                      description: 'Number of records in the list. Must be one of <code>25</code>, <code>50</code>, or <code>100</code>.'
                      example: 50
      security: []
  /api/categories/post/index:
    post:
      summary: 'Index of post''s categories'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 2617
                      name: 'id excepturi'
                      slug: id-excepturi
                      icon: null
                      status:
                        value: 1
                        label: active
                      real_depth: 0
                      created_at: '2022-03-03T22:44:29.000000Z'
                      created_at_diff: '1 second ago'
                      updated_at: '2022-03-03T22:44:29.000000Z'
                      updated_at_diff: '1 second ago'
                    -
                      id: 2618
                      name: 'quasi impedit'
                      slug: quasi-impedit
                      icon: null
                      status:
                        value: 1
                        label: active
                      real_depth: 0
                      created_at: '2022-03-03T22:44:29.000000Z'
                      created_at_diff: '1 second ago'
                      updated_at: '2022-03-03T22:44:29.000000Z'
                      updated_at_diff: '1 second ago'
                  meta: 'Paging, filtering and sorting information'
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 2617
                        name: 'id excepturi'
                        slug: id-excepturi
                        icon: null
                        status:
                          value: 1
                          label: active
                        real_depth: 0
                        created_at: '2022-03-03T22:44:29.000000Z'
                        created_at_diff: '1 second ago'
                        updated_at: '2022-03-03T22:44:29.000000Z'
                        updated_at_diff: '1 second ago'
                      -
                        id: 2618
                        name: 'quasi impedit'
                        slug: quasi-impedit
                        icon: null
                        status:
                          value: 1
                          label: active
                        real_depth: 0
                        created_at: '2022-03-03T22:44:29.000000Z'
                        created_at_diff: '1 second ago'
                        updated_at: '2022-03-03T22:44:29.000000Z'
                        updated_at_diff: '1 second ago'
                    items:
                      type: object
                  meta:
                    type: string
                    example: 'Paging, filtering and sorting information'
      tags:
        - Categories
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: integer
                  description: ''
                  example: 1
                filter:
                  type: object
                  description: ''
                  example: []
                  properties:
                    except:
                      type: array
                      description: 'Array containing IDs, excluding records from the list.'
                      example: []
                      items:
                        type: integer
                    search:
                      type: string
                      description: 'Search by keyword. Must be at least 3 characters. Must not be greater than 255 characters.'
                      example: ''
                    status:
                      type: integer
                      description: 'Must be one of 1 or 0 (available only for admin.categories.view).'
                      example: 1
                    parent:
                      type: integer
                      description: 'ID of category parent. If 0, shows only roots.'
                      example: 0
                    orderby:
                      type: string
                      description: 'Sorting the result list. Must be one of <code>created_at|asc</code>, <code>created_at|desc</code>, <code>updated_at|asc</code>, <code>updated_at|desc</code>, <code>name|asc</code>, <code>name|desc</code>, <code>position|asc</code>, <code>position|desc</code>, <code>real_depth|asc</code>, or <code>real_depth|desc</code>.'
                      example: ''
                    paginate:
                      type: integer
                      description: 'Number of records in the list. Must be one of <code>25</code>, <code>50</code>, or <code>100</code>.'
                      example: 50
      security: []
  /api/categories/index:
    post:
      summary: 'Index of all categories'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 12
                      name: 'Gabinety kosmetyczne'
                      slug: gabinety-kosmetyczne
                      icon: null
                      status:
                        value: 1
                        label: active
                      real_depth: 1
                      created_at: '2009-08-21T08:36:46.000000Z'
                      created_at_diff: '12 years 6 months ago'
                      updated_at: '2009-08-21T08:36:46.000000Z'
                      updated_at_diff: '12 years 6 months ago'
                    -
                      id: 12
                      name: 'Gabinety kosmetyczne'
                      slug: gabinety-kosmetyczne
                      icon: null
                      status:
                        value: 1
                        label: active
                      real_depth: 1
                      created_at: '2009-08-21T08:36:46.000000Z'
                      created_at_diff: '12 years 6 months ago'
                      updated_at: '2009-08-21T08:36:46.000000Z'
                      updated_at_diff: '12 years 6 months ago'
                  meta: 'Paging, filtering and sorting information'
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 12
                        name: 'Gabinety kosmetyczne'
                        slug: gabinety-kosmetyczne
                        icon: null
                        status:
                          value: 1
                          label: active
                        real_depth: 1
                        created_at: '2009-08-21T08:36:46.000000Z'
                        created_at_diff: '12 years 6 months ago'
                        updated_at: '2009-08-21T08:36:46.000000Z'
                        updated_at_diff: '12 years 6 months ago'
                      -
                        id: 12
                        name: 'Gabinety kosmetyczne'
                        slug: gabinety-kosmetyczne
                        icon: null
                        status:
                          value: 1
                          label: active
                        real_depth: 1
                        created_at: '2009-08-21T08:36:46.000000Z'
                        created_at_diff: '12 years 6 months ago'
                        updated_at: '2009-08-21T08:36:46.000000Z'
                        updated_at_diff: '12 years 6 months ago'
                    items:
                      type: object
                  meta:
                    type: string
                    example: 'Paging, filtering and sorting information'
      tags:
        - Categories
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: integer
                  description: ''
                  example: 1
                filter:
                  type: object
                  description: ''
                  example: []
                  properties:
                    except:
                      type: array
                      description: 'Array containing IDs, excluding records from the list.'
                      example: []
                      items:
                        type: integer
                    search:
                      type: string
                      description: 'Search by keyword. Must be at least 3 characters. Must not be greater than 255 characters.'
                      example: ''
                    status:
                      type: integer
                      description: 'Must be one of 1 or 0 (available only for admin.categories.view).'
                      example: 1
                    parent:
                      type: integer
                      description: 'ID of category parent. If 0, shows only roots.'
                      example: 0
                    orderby:
                      type: string
                      description: 'Sorting the result list. Must be one of <code>created_at|asc</code>, <code>created_at|desc</code>, <code>updated_at|asc</code>, <code>updated_at|desc</code>, <code>name|asc</code>, <code>name|desc</code>, <code>position|asc</code>, <code>position|desc</code>, <code>real_depth|asc</code>, or <code>real_depth|desc</code>.'
                      example: ''
                    paginate:
                      type: integer
                      description: 'Number of records in the list. Must be one of <code>25</code>, <code>50</code>, or <code>100</code>.'
                      example: 100
      security: []
  '/api/dirs/group/{group}':
    post:
      summary: 'Create dir'
      description: '<aside class="notice">If the user is authenticated the entry is added to his/her account, if not, an account is created for the email address provided.</aside>'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 13377
                    slug: rerum
                    title: Rerum.
                    short_content: 'Maxime ipsa exercitationem eligendi velit eos ipsa. Qui sint et pariatur voluptate. Et sint et quia culpa. Aliquid culpa tempora debitis ut assumenda voluptas. Voluptates distinctio repudiandae quos possimus. Harum quis aliquam expedita fugit volupta'
                    content: 'Maxime ipsa exercitationem eligendi velit eos ipsa. Qui sint et pariatur voluptate. Et sint et quia culpa. Aliquid culpa tempora debitis ut assumenda voluptas. Voluptates distinctio repudiandae quos possimus. Harum quis aliquam expedita fugit voluptatem ea.'
                    content_html: 'Maxime ipsa exercitationem eligendi velit eos ipsa. Qui sint et pariatur voluptate. Et sint et quia culpa. Aliquid culpa tempora debitis ut assumenda voluptas. Voluptates distinctio repudiandae quos possimus. Harum quis aliquam expedita fugit voluptatem ea.'
                    less_content_html: 'Maxime ipsa exercitationem eligendi velit eos ipsa. Qui sint et pariatur voluptate. Et sint et quia culpa. Aliquid culpa tempora debitis ut assumenda voluptas. Voluptates distinctio repudiandae quos possimus. Harum quis aliquam expedita fugit volupta... <a href="http://idir.test:8443/dirs/rerum">show more &raquo</a>'
                    url: 'http://www.hickle.com'
                    thumbnail_url: 'https://idir.test:8443/thumbnails?url=eyJpdiI6Im1hM2hra3ZyY2RCOWJVQktYcERIMHc9PSIsInZhbHVlIjoiRVY0emh2TWJYbXB3aG0zT1wvckhCeVhXenFHOGhjV2U2UEtoYXJuWkZYUUE9IiwibWFjIjoiMTkyMDNmNGQyMzQ3MWI0ZWQ4NzU4NjY0ZTk0ZGEwYTg3ZjlkYWNiZGU4YmMzOWI4NDlmMTE5YmU2OWJkMjA3ZCJ9'
                    sum_rating: '0.00'
                    created_at: '2022-03-03T22:44:28.000000Z'
                    created_at_diff: '1 second ago'
                    updated_at: '2022-03-03T22:44:28.000000Z'
                    updated_at_diff: '1 second ago'
                    links: []
                  payment_url: 'https://demo.idir.intelekt.net.pl/api/payments/1a7005ff-8db3-4e47-8f21-a4c2a333e395'
                properties:
                  data:
                    type: object
                    example:
                      id: 13377
                      slug: rerum
                      title: Rerum.
                      short_content: 'Maxime ipsa exercitationem eligendi velit eos ipsa. Qui sint et pariatur voluptate. Et sint et quia culpa. Aliquid culpa tempora debitis ut assumenda voluptas. Voluptates distinctio repudiandae quos possimus. Harum quis aliquam expedita fugit volupta'
                      content: 'Maxime ipsa exercitationem eligendi velit eos ipsa. Qui sint et pariatur voluptate. Et sint et quia culpa. Aliquid culpa tempora debitis ut assumenda voluptas. Voluptates distinctio repudiandae quos possimus. Harum quis aliquam expedita fugit voluptatem ea.'
                      content_html: 'Maxime ipsa exercitationem eligendi velit eos ipsa. Qui sint et pariatur voluptate. Et sint et quia culpa. Aliquid culpa tempora debitis ut assumenda voluptas. Voluptates distinctio repudiandae quos possimus. Harum quis aliquam expedita fugit voluptatem ea.'
                      less_content_html: 'Maxime ipsa exercitationem eligendi velit eos ipsa. Qui sint et pariatur voluptate. Et sint et quia culpa. Aliquid culpa tempora debitis ut assumenda voluptas. Voluptates distinctio repudiandae quos possimus. Harum quis aliquam expedita fugit volupta... <a href="http://idir.test:8443/dirs/rerum">show more &raquo</a>'
                      url: 'http://www.hickle.com'
                      thumbnail_url: 'https://idir.test:8443/thumbnails?url=eyJpdiI6Im1hM2hra3ZyY2RCOWJVQktYcERIMHc9PSIsInZhbHVlIjoiRVY0emh2TWJYbXB3aG0zT1wvckhCeVhXenFHOGhjV2U2UEtoYXJuWkZYUUE9IiwibWFjIjoiMTkyMDNmNGQyMzQ3MWI0ZWQ4NzU4NjY0ZTk0ZGEwYTg3ZjlkYWNiZGU4YmMzOWI4NDlmMTE5YmU2OWJkMjA3ZCJ9'
                      sum_rating: '0.00'
                      created_at: '2022-03-03T22:44:28.000000Z'
                      created_at_diff: '1 second ago'
                      updated_at: '2022-03-03T22:44:28.000000Z'
                      updated_at_diff: '1 second ago'
                      links: []
                  payment_url:
                    type: string
                    example: 'https://demo.idir.intelekt.net.pl/api/payments/1a7005ff-8db3-4e47-8f21-a4c2a333e395'
      tags:
        - Dirs
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must be between 3 and 100 characters.'
                  example: nxcxmcgaojsihryjeyrfnzoalpyftaiynlgdncnowshdkxcenmikdloxxk
                tags:
                  type: array
                  description: 'Must be at least 3 characters. Must not be greater than 30 characters.'
                  example:
                    - zlminwwuxreacyhtnkpfzuak
                  items:
                    type: string
                categories:
                  type: array
                  description: 'Array containing category IDs.'
                  example: []
                  items:
                    type: integer
                content_html:
                  type: string
                  description: 'Description. Must be between 255 and 1000 characters.'
                  example: ggjrarbfulkykfvyocgysxxfmnnbpwfofslskljvgjrdjxoegamoaegwpkimzifcblepmltasyhruligtsfefbjaboadyqxgvyeiksbmdwldharqpygmlrprcshzvuxzjjxkspdvjpmzzylqdejamsabegwghcopiswwhtsfjeniefqnsanydcqiytbtemmqeuivhgjlhcnlvcklkpsvzugborhcipllgldvvipshfinbbmlkboaruboevajbudfztzyspwvflifresdnanxjsrgfjhfyxfaelfvvnccccyqabnccpcpgtndnsskgljwwwuhpslvsosalyqtzsaanmomzmvwhuzezsfcwlpgeotcfaqrzwwshmktmyrpekaxhlttcdveudimalaifxpvgszxhoakkulnchauqrqpusmioqzvvxdlpfctbemuvalcixkaewnuskxclqqftblqetdejqnaqphrkkjgqctlibpwdcrifknulpaxwgajzacfwaeezzguffnwwuzeouyzhrevqbtizmusdppxpsuytwzekpqovbeqwomjdeuugxvnmahqhojojmjqedajveigmcxixgqzrfqhlthswmdrxuvqbekwaljrnvilybzltuslfharatwtqffhxzhakhfkilmkrjziyndjpsobhfaegqureoctxvsstusourllfnngmmmllwxilzicmtujnecisvvtdxtfrrxzusogkigmhmrlokjbwobhojjcshevqwkkjsaobbvhzzrstpwzxjjjtjgcumpoevuptqogocymsccgxcbnqqcsypexuwciduyjkvtoreraeczloegeqqwjdzwoyhhacgiwbmsxihqxhxzlpvpgedhtgkiolqmcblmwnrehbkynseidoismgcxaixoamfzdsamvazrszlde
                notes:
                  type: string
                  description: 'Additional information for the moderator. Must be between 3 and 255 characters.'
                  example: ''
                url:
                  type: string
                  description: 'Unique website url with http/https protocol.'
                  example: 'https://demo.idir.intelekt.net.pl'
                backlink:
                  type: integer
                  description: 'ID of the selected backlink.'
                  example: null
                backlink_url:
                  type: string
                  description: 'Url with http/https protocol to backlink.'
                  example: null
                email:
                  type: string
                  description: 'Email address, required if the user adds the entry as unauthenticated.'
                  example: kontakt@intelekt.net.pl
                field:
                  type: array
                  description: 'Array containing additional form fields if the group allows it.'
                  example: null
                  items:
                    type: object
                payment_type:
                  type: string
                  description: 'If the group requires a payment, the selected type must be defined. Must be one of <code>transfer</code>, <code>code_transfer</code>, <code>code_sms</code>, or <code>paypal_express</code>.'
                  example: null
                payment_transfer:
                  type: integer
                  description: 'ID of the selected price if payment_type is <code>transfer</code>.'
                  example: null
                payment_code_sms:
                  type: integer
                  description: 'ID of the selected price if payment_type is <code>code_sms</code>.'
                  example: null
                code_sms:
                  type: string
                  description: 'Received code if payment_type is <code>code_sms</code>.'
                  example: null
                payment_code_transfer:
                  type: integer
                  description: 'ID of the selected price if payment_type is <code>code_transfer</code>.'
                  example: null
                code_transfer:
                  type: string
                  description: 'Received code if payment_type is <code>code_transfer</code>.'
                  example: null
                payment_paypal_express:
                  type: integer
                  description: 'ID of the selected price if payment_type is <code>paypal_express</code>.'
                  example: null
              required:
                - title
                - categories
                - content_html
      security: []
    parameters:
      -
        in: path
        name: group
        description: 'The group ID.'
        example: 1
        required: true
        schema:
          type: integer
  /api/thumbnails/reload:
    patch:
      summary: 'Undocumented function'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                url:
                  type: string
                  description: 'The value format is invalid.'
                  example: 'https://i.wiqtus/'
              required:
                - url
      security: []
  /api/groups/index:
    post:
      summary: 'Index of groups'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 43
                      slug: facilis
                      position: 10
                      name: Facilis
                      desc: 'Perferendis dolore et fugiat minima adipisci repellendus autem sunt. Itaque quia illo et repellendus ut. Corporis omnis nihil occaecati. Facilis omnis error dolor sed maiores laborum.'
                      border: null
                      max_cats: 3
                      max_models: 13
                      max_models_daily: 9
                      visible:
                        value: 1
                        label: public
                      apply_status:
                        value: 0
                        label: 'pending acceptance'
                      url:
                        value: 0
                        label: none
                      backlink:
                        value: 0
                        label: none
                      created_at: '2022-03-03T22:44:27.000000Z'
                      created_at_diff: '1 second ago'
                      updated_at: '2022-03-03T22:44:27.000000Z'
                      updated_at_diff: '1 second ago'
                      alt: null
                      privileges:
                        -
                          id: 9
                          name: 'additional options for editing content'
                          created_at: '2021-01-06T16:58:51.000000Z'
                          updated_at: '2021-01-06T16:58:51.000000Z'
                    -
                      id: 44
                      slug: id
                      position: 11
                      name: Id
                      desc: 'Cumque sint rerum enim assumenda. Molestiae reprehenderit laudantium voluptatum eum et. Et harum asperiores aut qui rerum. Dignissimos non earum vel et quas.'
                      border: null
                      max_cats: 4
                      max_models: null
                      max_models_daily: null
                      visible:
                        value: 1
                        label: public
                      apply_status:
                        value: 1
                        label: 'active immediately'
                      url:
                        value: 0
                        label: none
                      backlink:
                        value: 0
                        label: none
                      created_at: '2022-03-03T22:44:27.000000Z'
                      created_at_diff: '1 second ago'
                      updated_at: '2022-03-03T22:44:27.000000Z'
                      updated_at_diff: '1 second ago'
                      alt: null
                      privileges:
                        -
                          id: 9
                          name: 'additional options for editing content'
                          created_at: '2021-01-06T16:58:51.000000Z'
                          updated_at: '2021-01-06T16:58:51.000000Z'
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 43
                        slug: facilis
                        position: 10
                        name: Facilis
                        desc: 'Perferendis dolore et fugiat minima adipisci repellendus autem sunt. Itaque quia illo et repellendus ut. Corporis omnis nihil occaecati. Facilis omnis error dolor sed maiores laborum.'
                        border: null
                        max_cats: 3
                        max_models: 13
                        max_models_daily: 9
                        visible:
                          value: 1
                          label: public
                        apply_status:
                          value: 0
                          label: 'pending acceptance'
                        url:
                          value: 0
                          label: none
                        backlink:
                          value: 0
                          label: none
                        created_at: '2022-03-03T22:44:27.000000Z'
                        created_at_diff: '1 second ago'
                        updated_at: '2022-03-03T22:44:27.000000Z'
                        updated_at_diff: '1 second ago'
                        alt: null
                        privileges:
                          -
                            id: 9
                            name: 'additional options for editing content'
                            created_at: '2021-01-06T16:58:51.000000Z'
                            updated_at: '2021-01-06T16:58:51.000000Z'
                      -
                        id: 44
                        slug: id
                        position: 11
                        name: Id
                        desc: 'Cumque sint rerum enim assumenda. Molestiae reprehenderit laudantium voluptatum eum et. Et harum asperiores aut qui rerum. Dignissimos non earum vel et quas.'
                        border: null
                        max_cats: 4
                        max_models: null
                        max_models_daily: null
                        visible:
                          value: 1
                          label: public
                        apply_status:
                          value: 1
                          label: 'active immediately'
                        url:
                          value: 0
                          label: none
                        backlink:
                          value: 0
                          label: none
                        created_at: '2022-03-03T22:44:27.000000Z'
                        created_at_diff: '1 second ago'
                        updated_at: '2022-03-03T22:44:27.000000Z'
                        updated_at_diff: '1 second ago'
                        alt: null
                        privileges:
                          -
                            id: 9
                            name: 'additional options for editing content'
                            created_at: '2021-01-06T16:58:51.000000Z'
                            updated_at: '2021-01-06T16:58:51.000000Z'
                    items:
                      type: object
      tags:
        - Groups
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: integer
                  description: ''
                  example: 1
                filter:
                  type: object
                  description: ''
                  example: []
                  properties:
                    except:
                      type: array
                      description: 'Array containing IDs, excluding records from the list.'
                      example: []
                      items:
                        type: integer
                    search:
                      type: string
                      description: 'Search by keyword. Must be at least 3 characters. Must not be greater than 255 characters.'
                      example: ''
                    visible:
                      type: integer
                      description: 'Must be one of 1 or 0 (available only for admin.groups.view).'
                      example: 1
                    orderby:
                      type: string
                      description: 'Sorting the result list. Must be one of <code>created_at|asc</code>, <code>created_at|desc</code>, <code>updated_at|asc</code>, <code>updated_at|desc</code>, <code>name|asc</code>, <code>name|desc</code>, <code>position|asc</code>, or <code>position|desc</code>.'
                      example: ''
                    paginate:
                      type: integer
                      description: 'Number of records in the list. Must be one of <code>25</code>, <code>50</code>, or <code>100</code>.'
                      example: 25
      security: []
  '/api/payments/{payment_dir_pending}/dir/{driver}':
    get:
      summary: 'Initialise dir''s payment'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Payments
      security: []
    parameters:
      -
        in: path
        name: payment_dir_pending
        description: 'The payment UUID.'
        example: null
        required: true
        schema:
          type: string
      -
        in: path
        name: driver
        description: 'Optional parameter. The payment driver.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
  /api/posts/index:
    post:
      summary: 'Index of posts'
      description: '<aside class="notice">Available only to users with permission: api.posts.view.</aside>'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 215
                      slug: a-pariatur-aspernatur-culpa-tenetur
                      title: 'A pariatur aspernatur culpa tenetur.'
                      short_content: 'Animi vitae et ut consequatur nobis nulla et quis. Et impedit rerum et. Earum odio eum nihil error voluptatem. Doloribus vel cumque quam omnis quod. Qui consectetur recusandae ab qui qui aperiam. Cum error blanditiis dolore. Ipsum deserunt voluptatem quia reprehenderit iusto alias. Vitae quia perspiciatis est est molestiae eos architecto. Similique numquam totam eos repellat aut. Eius nesciunt earum sunt qui ex quas tenetur. Et tempora illum et non. Ullam id nisi quas. Rem eos perspiciatis quaer'
                      content: 'Animi vitae et ut consequatur nobis nulla et quis. Et impedit rerum et. Earum odio eum nihil error voluptatem. Doloribus vel cumque quam omnis quod. Qui consectetur recusandae ab qui qui aperiam. Cum error blanditiis dolore. Ipsum deserunt voluptatem quia reprehenderit iusto alias. Vitae quia perspiciatis est est molestiae eos architecto. Similique numquam totam eos repellat aut. Eius nesciunt earum sunt qui ex quas tenetur. Et tempora illum et non. Ullam id nisi quas. Rem eos perspiciatis quaerat. Occaecati totam soluta vero adipisci et sit. Repellat tempore iste culpa possimus fugit unde. Neque maxime consequatur voluptas minima tempore voluptatem impedit. Fugiat voluptates occaecati soluta animi iusto. Repudiandae tenetur consequatur delectus esse at in et iste. Rerum quas ipsa reiciendis magni nulla qui. Voluptatem eveniet ipsum voluptatem voluptas cupiditate. Magnam perspiciatis corrupti deleniti sunt sit. Soluta neque blanditiis ut quia veniam provident. Et quam dolore aspernatur error distinctio eaque minima. Non reiciendis consectetur incidunt ut. Dicta doloribus sint sint est itaque recusandae illo. Voluptatum sint non aut delectus. Quidem quia quis assumenda maxime dolor recusandae. Eum quidem odit voluptatibus odit sequi quo. Ut necessitatibus voluptatum magnam. Sed voluptatem ut est expedita qui at saepe. Necessitatibus atque sed quos porro laboriosam tempora consequuntur amet. Id quia nisi ut explicabo consequatur occaecati a qui. Inventore omnis eius et est quia. Quisquam omnis sit eum dolorem. Occaecati dolore sit facere aperiam. Rerum laboriosam temporibus non officiis vel. Tempore eum quia molestiae impedit velit quibusdam accusantium. Qui voluptatem ut quidem velit odio. Odio illum cupiditate quas aspernatur ducimus delectus sunt. Nihil earum cum accusantium voluptatem. Non aliquid qui iure expedita. Atque sed nostrum ullam. Distinctio odit vitae aut adipisci.'
                      content_html: '<p>Animi vitae et ut consequatur nobis nulla et quis. Et impedit rerum et. Earum odio eum nihil error voluptatem. Doloribus vel cumque quam omnis quod. Qui consectetur recusandae ab qui qui aperiam. Cum error blanditiis dolore. Ipsum deserunt voluptatem quia reprehenderit iusto alias. Vitae quia perspiciatis est est molestiae eos architecto. Similique numquam totam eos repellat aut. Eius nesciunt earum sunt qui ex quas tenetur. Et tempora illum et non. Ullam id nisi quas. Rem eos perspiciatis quaerat. Occaecati totam soluta vero adipisci et sit. Repellat tempore iste culpa possimus fugit unde. Neque maxime consequatur voluptas minima tempore voluptatem impedit. Fugiat voluptates occaecati soluta animi iusto. Repudiandae tenetur consequatur delectus esse at in et iste. Rerum quas ipsa reiciendis magni nulla qui. Voluptatem eveniet ipsum voluptatem voluptas cupiditate. Magnam perspiciatis corrupti deleniti sunt sit. Soluta neque blanditiis ut quia veniam provident. Et quam dolore aspernatur error distinctio eaque minima. Non reiciendis consectetur incidunt ut. Dicta doloribus sint sint est itaque recusandae illo. Voluptatum sint non aut delectus. Quidem quia quis assumenda maxime dolor recusandae. Eum quidem odit voluptatibus odit sequi quo. Ut necessitatibus voluptatum magnam. Sed voluptatem ut est expedita qui at saepe. Necessitatibus atque sed quos porro laboriosam tempora consequuntur amet. Id quia nisi ut explicabo consequatur occaecati a qui. Inventore omnis eius et est quia. Quisquam omnis sit eum dolorem. Occaecati dolore sit facere aperiam. Rerum laboriosam temporibus non officiis vel. Tempore eum quia molestiae impedit velit quibusdam accusantium. Qui voluptatem ut quidem velit odio. Odio illum cupiditate quas aspernatur ducimus delectus sunt. Nihil earum cum accusantium voluptatem. Non aliquid qui iure expedita. Atque sed nostrum ullam. Distinctio odit vitae aut adipisci.</p>'
                      no_more_content_html: '<p>Animi vitae et ut consequatur nobis nulla et quis. Et impedit rerum et. Earum odio eum nihil error voluptatem. Doloribus vel cumque quam omnis quod. Qui consectetur recusandae ab qui qui aperiam. Cum error blanditiis dolore. Ipsum deserunt voluptatem quia reprehenderit iusto alias. Vitae quia perspiciatis est est molestiae eos architecto. Similique numquam totam eos repellat aut. Eius nesciunt earum sunt qui ex quas tenetur. Et tempora illum et non. Ullam id nisi quas. Rem eos perspiciatis quaerat. Occaecati totam soluta vero adipisci et sit. Repellat tempore iste culpa possimus fugit unde. Neque maxime consequatur voluptas minima tempore voluptatem impedit. Fugiat voluptates occaecati soluta animi iusto. Repudiandae tenetur consequatur delectus esse at in et iste. Rerum quas ipsa reiciendis magni nulla qui. Voluptatem eveniet ipsum voluptatem voluptas cupiditate. Magnam perspiciatis corrupti deleniti sunt sit. Soluta neque blanditiis ut quia veniam provident. Et quam dolore aspernatur error distinctio eaque minima. Non reiciendis consectetur incidunt ut. Dicta doloribus sint sint est itaque recusandae illo. Voluptatum sint non aut delectus. Quidem quia quis assumenda maxime dolor recusandae. Eum quidem odit voluptatibus odit sequi quo. Ut necessitatibus voluptatum magnam. Sed voluptatem ut est expedita qui at saepe. Necessitatibus atque sed quos porro laboriosam tempora consequuntur amet. Id quia nisi ut explicabo consequatur occaecati a qui. Inventore omnis eius et est quia. Quisquam omnis sit eum dolorem. Occaecati dolore sit facere aperiam. Rerum laboriosam temporibus non officiis vel. Tempore eum quia molestiae impedit velit quibusdam accusantium. Qui voluptatem ut quidem velit odio. Odio illum cupiditate quas aspernatur ducimus delectus sunt. Nihil earum cum accusantium voluptatem. Non aliquid qui iure expedita. Atque sed nostrum ullam. Distinctio odit vitae aut adipisci.</p>'
                      less_content_html: '<p>Animi vitae et ut consequatur nobis nulla et quis. Et impedit rerum et. Earum odio eum nihil error voluptatem. Doloribus vel cumque quam omnis quod. Qui consectetur recusandae ab qui qui aperiam. Cum error blanditiis dolore. Ipsum deserunt voluptatem quia reprehenderit iusto alias. Vitae quia perspiciatis est est molestiae eos architecto. Similique numquam totam eos repellat aut. Eius nesciunt earum sunt qui ex quas tenetur. Et tempora illum et non. Ullam id nisi quas. Rem eos perspiciatis quaerat. Occaecati totam soluta vero adipisci et sit. Repellat tempore iste culpa possimus fugit unde. Neque maxime consequatur voluptas minima tempore voluptatem impedit. Fugiat voluptates occaecati soluta animi iusto. Repudiandae tenetur consequatur delectus esse at in et iste. Rerum quas ipsa reiciendis magni nulla qui. Voluptatem eveniet ipsum voluptatem voluptas cupiditate. Magnam perspiciatis corrupti deleniti sunt sit. Soluta neque blanditiis ut quia veniam provident. Et quam dolore aspernatur error distinctio eaque minima. Non reiciendis consectetur incidunt ut. Dicta doloribus sint sint est itaque recusandae illo. Voluptatum sint non aut delectus. Quidem quia quis assumenda maxime dolor recusandae. Eum quidem odit voluptatibus odit sequi quo. Ut necessitatibus voluptatum magnam. Sed voluptatem ut est expedita qui at saepe. Necessitatibus atque sed quos porro laboriosam tempora consequuntur amet. Id quia nisi ut explicabo consequatur occaecati a qui. Inventore omnis eius et est quia. Quisquam omnis sit eum dolorem. Occaecati dolore sit facere aperiam. Rerum laboriosam temporibus non officiis vel. Tempore eum quia molestiae impedit velit quibusdam accusantium. Qui voluptatem ut quidem velit odio. Odio illum cupiditate quas aspernatur ducimus delectus sunt. Nihil earum cum accusantium voluptatem. Non aliquid qui iure expedita. Atque sed nostrum ullam. Distinctio odit vitae aut adipisci.</p>'
                      seo_title: 'Rerum ex iste est corrupti repellat.'
                      meta_title: 'Rerum ex iste est corrupti repellat.'
                      seo_desc: 'Et exercitationem voluptate et. Reiciendis mollitia vel sed aliquid. Illo sint est ipsa et aut harum sequi. Consequatur occaecati natus est veniam.'
                      meta_desc: 'Et exercitationem voluptate et. Reiciendis mollitia vel sed aliquid. Illo sint est ipsa et aut harum sequi. Consequatur occaecati natus est veniam.'
                      seo_noindex: true
                      seo_nofollow: false
                      status:
                        value: 1
                        label: active
                      comment: true
                      first_image: null
                      published_at: '2021-12-05T10:04:56.000000Z'
                      published_at_diff: '2 months 3 weeks ago'
                      created_at: '2022-03-03T22:44:29.000000Z'
                      created_at_diff: '1 second ago'
                      updated_at: '2022-03-03T22:44:29.000000Z'
                      updated_at_diff: '1 second ago'
                      user:
                        id: 12346
                        name: 'Amber Cole'
                        status:
                          value: 1
                          label: active
                        created_at: '2022-03-03T22:44:29.000000Z'
                        created_at_diff: '1 second ago'
                        updated_at: '2022-03-03T22:44:29.000000Z'
                        updated_at_diff: '1 second ago'
                      links:
                        web: 'http://idir.test:8443/posts/a-pariatur-aspernatur-culpa-tenetur'
                    -
                      id: 216
                      slug: perferendis-temporibus-iusto-animi-molestias-nam-numquam
                      title: 'Perferendis temporibus iusto animi molestias nam numquam.'
                      short_content: 'Dolore dolorum quasi officia illum. Et consequatur eos doloremque minima et. Mollitia sit eum voluptatem similique nam quia eum. Vel nemo omnis est corrupti assumenda. Qui consequuntur tempore voluptas dicta molestias aut atque. Vel aut pariatur deleniti quo corrupti. Dolor necessitatibus iusto totam tempora debitis vitae aut. Adipisci voluptatem est ut illum enim. Debitis magni quia et tempore. Rerum incidunt omnis excepturi inventore. Ab pariatur rerum omnis dolores repudiandae in dignissimos.'
                      content: 'Dolore dolorum quasi officia illum. Et consequatur eos doloremque minima et. Mollitia sit eum voluptatem similique nam quia eum. Vel nemo omnis est corrupti assumenda. Qui consequuntur tempore voluptas dicta molestias aut atque. Vel aut pariatur deleniti quo corrupti. Dolor necessitatibus iusto totam tempora debitis vitae aut. Adipisci voluptatem est ut illum enim. Debitis magni quia et tempore. Rerum incidunt omnis excepturi inventore. Ab pariatur rerum omnis dolores repudiandae in dignissimos. Voluptas qui ad vel sequi repudiandae. Iure non quasi qui ab suscipit quis qui. Unde nisi vel laborum numquam. Eligendi suscipit mollitia voluptatibus nisi itaque non. Dolore sit et magnam. Odit ad debitis blanditiis vel. Minima mollitia quod neque officiis deleniti quo. Rerum optio quia aut alias quam. Iure ut illo quas ut quidem exercitationem. Eum temporibus ullam fugiat animi id et omnis aliquid. Temporibus ut neque molestiae est eius aliquid est. Aut ut ipsam et. Ut omnis aut eveniet voluptas sapiente sit voluptatum. Ut soluta provident ipsum occaecati sit. Optio adipisci omnis voluptas quae qui. Sunt vel in qui corporis. Assumenda non at et consequatur occaecati architecto. Temporibus quidem distinctio ea facilis quis maiores voluptatum expedita. Eaque recusandae harum odio hic id et id. Consequatur quis corrupti mollitia sed qui ut quia. Ratione veniam qui velit rerum temporibus nisi. Qui quas voluptatum optio earum rerum. Iure unde aut deleniti repudiandae possimus esse molestias. Voluptates ut aperiam voluptatem ad maiores. Dolores amet qui odio dignissimos voluptatibus. Ad placeat libero aliquam voluptatem accusantium. Et adipisci et et soluta rerum odio. Quasi veniam voluptatum et autem. Ipsa aliquam id quod laborum omnis. Dolore voluptatum culpa eos modi. Animi vero necessitatibus omnis quasi. Voluptates ea optio doloremque in corporis. Rerum amet reprehenderit perferendis voluptates distinctio. Dignissimos praesentium recusandae esse.'
                      content_html: '<p>Dolore dolorum quasi officia illum. Et consequatur eos doloremque minima et. Mollitia sit eum voluptatem similique nam quia eum. Vel nemo omnis est corrupti assumenda. Qui consequuntur tempore voluptas dicta molestias aut atque. Vel aut pariatur deleniti quo corrupti. Dolor necessitatibus iusto totam tempora debitis vitae aut. Adipisci voluptatem est ut illum enim. Debitis magni quia et tempore. Rerum incidunt omnis excepturi inventore. Ab pariatur rerum omnis dolores repudiandae in dignissimos. Voluptas qui ad vel sequi repudiandae. Iure non quasi qui ab suscipit quis qui. Unde nisi vel laborum numquam. Eligendi suscipit mollitia voluptatibus nisi itaque non. Dolore sit et magnam. Odit ad debitis blanditiis vel. Minima mollitia quod neque officiis deleniti quo. Rerum optio quia aut alias quam. Iure ut illo quas ut quidem exercitationem. Eum temporibus ullam fugiat animi id et omnis aliquid. Temporibus ut neque molestiae est eius aliquid est. Aut ut ipsam et. Ut omnis aut eveniet voluptas sapiente sit voluptatum. Ut soluta provident ipsum occaecati sit. Optio adipisci omnis voluptas quae qui. Sunt vel in qui corporis. Assumenda non at et consequatur occaecati architecto. Temporibus quidem distinctio ea facilis quis maiores voluptatum expedita. Eaque recusandae harum odio hic id et id. Consequatur quis corrupti mollitia sed qui ut quia. Ratione veniam qui velit rerum temporibus nisi. Qui quas voluptatum optio earum rerum. Iure unde aut deleniti repudiandae possimus esse molestias. Voluptates ut aperiam voluptatem ad maiores. Dolores amet qui odio dignissimos voluptatibus. Ad placeat libero aliquam voluptatem accusantium. Et adipisci et et soluta rerum odio. Quasi veniam voluptatum et autem. Ipsa aliquam id quod laborum omnis. Dolore voluptatum culpa eos modi. Animi vero necessitatibus omnis quasi. Voluptates ea optio doloremque in corporis. Rerum amet reprehenderit perferendis voluptates distinctio. Dignissimos praesentium recusandae esse.</p>'
                      no_more_content_html: '<p>Dolore dolorum quasi officia illum. Et consequatur eos doloremque minima et. Mollitia sit eum voluptatem similique nam quia eum. Vel nemo omnis est corrupti assumenda. Qui consequuntur tempore voluptas dicta molestias aut atque. Vel aut pariatur deleniti quo corrupti. Dolor necessitatibus iusto totam tempora debitis vitae aut. Adipisci voluptatem est ut illum enim. Debitis magni quia et tempore. Rerum incidunt omnis excepturi inventore. Ab pariatur rerum omnis dolores repudiandae in dignissimos. Voluptas qui ad vel sequi repudiandae. Iure non quasi qui ab suscipit quis qui. Unde nisi vel laborum numquam. Eligendi suscipit mollitia voluptatibus nisi itaque non. Dolore sit et magnam. Odit ad debitis blanditiis vel. Minima mollitia quod neque officiis deleniti quo. Rerum optio quia aut alias quam. Iure ut illo quas ut quidem exercitationem. Eum temporibus ullam fugiat animi id et omnis aliquid. Temporibus ut neque molestiae est eius aliquid est. Aut ut ipsam et. Ut omnis aut eveniet voluptas sapiente sit voluptatum. Ut soluta provident ipsum occaecati sit. Optio adipisci omnis voluptas quae qui. Sunt vel in qui corporis. Assumenda non at et consequatur occaecati architecto. Temporibus quidem distinctio ea facilis quis maiores voluptatum expedita. Eaque recusandae harum odio hic id et id. Consequatur quis corrupti mollitia sed qui ut quia. Ratione veniam qui velit rerum temporibus nisi. Qui quas voluptatum optio earum rerum. Iure unde aut deleniti repudiandae possimus esse molestias. Voluptates ut aperiam voluptatem ad maiores. Dolores amet qui odio dignissimos voluptatibus. Ad placeat libero aliquam voluptatem accusantium. Et adipisci et et soluta rerum odio. Quasi veniam voluptatum et autem. Ipsa aliquam id quod laborum omnis. Dolore voluptatum culpa eos modi. Animi vero necessitatibus omnis quasi. Voluptates ea optio doloremque in corporis. Rerum amet reprehenderit perferendis voluptates distinctio. Dignissimos praesentium recusandae esse.</p>'
                      less_content_html: '<p>Dolore dolorum quasi officia illum. Et consequatur eos doloremque minima et. Mollitia sit eum voluptatem similique nam quia eum. Vel nemo omnis est corrupti assumenda. Qui consequuntur tempore voluptas dicta molestias aut atque. Vel aut pariatur deleniti quo corrupti. Dolor necessitatibus iusto totam tempora debitis vitae aut. Adipisci voluptatem est ut illum enim. Debitis magni quia et tempore. Rerum incidunt omnis excepturi inventore. Ab pariatur rerum omnis dolores repudiandae in dignissimos. Voluptas qui ad vel sequi repudiandae. Iure non quasi qui ab suscipit quis qui. Unde nisi vel laborum numquam. Eligendi suscipit mollitia voluptatibus nisi itaque non. Dolore sit et magnam. Odit ad debitis blanditiis vel. Minima mollitia quod neque officiis deleniti quo. Rerum optio quia aut alias quam. Iure ut illo quas ut quidem exercitationem. Eum temporibus ullam fugiat animi id et omnis aliquid. Temporibus ut neque molestiae est eius aliquid est. Aut ut ipsam et. Ut omnis aut eveniet voluptas sapiente sit voluptatum. Ut soluta provident ipsum occaecati sit. Optio adipisci omnis voluptas quae qui. Sunt vel in qui corporis. Assumenda non at et consequatur occaecati architecto. Temporibus quidem distinctio ea facilis quis maiores voluptatum expedita. Eaque recusandae harum odio hic id et id. Consequatur quis corrupti mollitia sed qui ut quia. Ratione veniam qui velit rerum temporibus nisi. Qui quas voluptatum optio earum rerum. Iure unde aut deleniti repudiandae possimus esse molestias. Voluptates ut aperiam voluptatem ad maiores. Dolores amet qui odio dignissimos voluptatibus. Ad placeat libero aliquam voluptatem accusantium. Et adipisci et et soluta rerum odio. Quasi veniam voluptatum et autem. Ipsa aliquam id quod laborum omnis. Dolore voluptatum culpa eos modi. Animi vero necessitatibus omnis quasi. Voluptates ea optio doloremque in corporis. Rerum amet reprehenderit perferendis voluptates distinctio. Dignissimos praesentium recusandae esse.</p>'
                      seo_title: null
                      meta_title: 'Perferendis temporibus iusto animi molestias nam numquam.'
                      seo_desc: 'A dolorem consequatur quo autem distinctio voluptatum. Quis illum rem expedita ab.'
                      meta_desc: 'A dolorem consequatur quo autem distinctio voluptatum. Quis illum rem expedita ab.'
                      seo_noindex: false
                      seo_nofollow: false
                      status:
                        value: 1
                        label: active
                      comment: true
                      first_image: null
                      published_at: '2022-03-03T00:19:13.000000Z'
                      published_at_diff: '22 hours 25 minutes ago'
                      created_at: '2022-03-03T22:44:29.000000Z'
                      created_at_diff: '1 second ago'
                      updated_at: '2022-03-03T22:44:29.000000Z'
                      updated_at_diff: '1 second ago'
                      user:
                        id: 12347
                        name: 'Elouise Crooks'
                        status:
                          value: 0
                          label: inactive
                        created_at: '2022-03-03T22:44:29.000000Z'
                        created_at_diff: '1 second ago'
                        updated_at: '2022-03-03T22:44:29.000000Z'
                        updated_at_diff: '1 second ago'
                      links:
                        web: 'http://idir.test:8443/posts/perferendis-temporibus-iusto-animi-molestias-nam-numquam'
                  meta: 'Paging, filtering and sorting information'
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 215
                        slug: a-pariatur-aspernatur-culpa-tenetur
                        title: 'A pariatur aspernatur culpa tenetur.'
                        short_content: 'Animi vitae et ut consequatur nobis nulla et quis. Et impedit rerum et. Earum odio eum nihil error voluptatem. Doloribus vel cumque quam omnis quod. Qui consectetur recusandae ab qui qui aperiam. Cum error blanditiis dolore. Ipsum deserunt voluptatem quia reprehenderit iusto alias. Vitae quia perspiciatis est est molestiae eos architecto. Similique numquam totam eos repellat aut. Eius nesciunt earum sunt qui ex quas tenetur. Et tempora illum et non. Ullam id nisi quas. Rem eos perspiciatis quaer'
                        content: 'Animi vitae et ut consequatur nobis nulla et quis. Et impedit rerum et. Earum odio eum nihil error voluptatem. Doloribus vel cumque quam omnis quod. Qui consectetur recusandae ab qui qui aperiam. Cum error blanditiis dolore. Ipsum deserunt voluptatem quia reprehenderit iusto alias. Vitae quia perspiciatis est est molestiae eos architecto. Similique numquam totam eos repellat aut. Eius nesciunt earum sunt qui ex quas tenetur. Et tempora illum et non. Ullam id nisi quas. Rem eos perspiciatis quaerat. Occaecati totam soluta vero adipisci et sit. Repellat tempore iste culpa possimus fugit unde. Neque maxime consequatur voluptas minima tempore voluptatem impedit. Fugiat voluptates occaecati soluta animi iusto. Repudiandae tenetur consequatur delectus esse at in et iste. Rerum quas ipsa reiciendis magni nulla qui. Voluptatem eveniet ipsum voluptatem voluptas cupiditate. Magnam perspiciatis corrupti deleniti sunt sit. Soluta neque blanditiis ut quia veniam provident. Et quam dolore aspernatur error distinctio eaque minima. Non reiciendis consectetur incidunt ut. Dicta doloribus sint sint est itaque recusandae illo. Voluptatum sint non aut delectus. Quidem quia quis assumenda maxime dolor recusandae. Eum quidem odit voluptatibus odit sequi quo. Ut necessitatibus voluptatum magnam. Sed voluptatem ut est expedita qui at saepe. Necessitatibus atque sed quos porro laboriosam tempora consequuntur amet. Id quia nisi ut explicabo consequatur occaecati a qui. Inventore omnis eius et est quia. Quisquam omnis sit eum dolorem. Occaecati dolore sit facere aperiam. Rerum laboriosam temporibus non officiis vel. Tempore eum quia molestiae impedit velit quibusdam accusantium. Qui voluptatem ut quidem velit odio. Odio illum cupiditate quas aspernatur ducimus delectus sunt. Nihil earum cum accusantium voluptatem. Non aliquid qui iure expedita. Atque sed nostrum ullam. Distinctio odit vitae aut adipisci.'
                        content_html: '<p>Animi vitae et ut consequatur nobis nulla et quis. Et impedit rerum et. Earum odio eum nihil error voluptatem. Doloribus vel cumque quam omnis quod. Qui consectetur recusandae ab qui qui aperiam. Cum error blanditiis dolore. Ipsum deserunt voluptatem quia reprehenderit iusto alias. Vitae quia perspiciatis est est molestiae eos architecto. Similique numquam totam eos repellat aut. Eius nesciunt earum sunt qui ex quas tenetur. Et tempora illum et non. Ullam id nisi quas. Rem eos perspiciatis quaerat. Occaecati totam soluta vero adipisci et sit. Repellat tempore iste culpa possimus fugit unde. Neque maxime consequatur voluptas minima tempore voluptatem impedit. Fugiat voluptates occaecati soluta animi iusto. Repudiandae tenetur consequatur delectus esse at in et iste. Rerum quas ipsa reiciendis magni nulla qui. Voluptatem eveniet ipsum voluptatem voluptas cupiditate. Magnam perspiciatis corrupti deleniti sunt sit. Soluta neque blanditiis ut quia veniam provident. Et quam dolore aspernatur error distinctio eaque minima. Non reiciendis consectetur incidunt ut. Dicta doloribus sint sint est itaque recusandae illo. Voluptatum sint non aut delectus. Quidem quia quis assumenda maxime dolor recusandae. Eum quidem odit voluptatibus odit sequi quo. Ut necessitatibus voluptatum magnam. Sed voluptatem ut est expedita qui at saepe. Necessitatibus atque sed quos porro laboriosam tempora consequuntur amet. Id quia nisi ut explicabo consequatur occaecati a qui. Inventore omnis eius et est quia. Quisquam omnis sit eum dolorem. Occaecati dolore sit facere aperiam. Rerum laboriosam temporibus non officiis vel. Tempore eum quia molestiae impedit velit quibusdam accusantium. Qui voluptatem ut quidem velit odio. Odio illum cupiditate quas aspernatur ducimus delectus sunt. Nihil earum cum accusantium voluptatem. Non aliquid qui iure expedita. Atque sed nostrum ullam. Distinctio odit vitae aut adipisci.</p>'
                        no_more_content_html: '<p>Animi vitae et ut consequatur nobis nulla et quis. Et impedit rerum et. Earum odio eum nihil error voluptatem. Doloribus vel cumque quam omnis quod. Qui consectetur recusandae ab qui qui aperiam. Cum error blanditiis dolore. Ipsum deserunt voluptatem quia reprehenderit iusto alias. Vitae quia perspiciatis est est molestiae eos architecto. Similique numquam totam eos repellat aut. Eius nesciunt earum sunt qui ex quas tenetur. Et tempora illum et non. Ullam id nisi quas. Rem eos perspiciatis quaerat. Occaecati totam soluta vero adipisci et sit. Repellat tempore iste culpa possimus fugit unde. Neque maxime consequatur voluptas minima tempore voluptatem impedit. Fugiat voluptates occaecati soluta animi iusto. Repudiandae tenetur consequatur delectus esse at in et iste. Rerum quas ipsa reiciendis magni nulla qui. Voluptatem eveniet ipsum voluptatem voluptas cupiditate. Magnam perspiciatis corrupti deleniti sunt sit. Soluta neque blanditiis ut quia veniam provident. Et quam dolore aspernatur error distinctio eaque minima. Non reiciendis consectetur incidunt ut. Dicta doloribus sint sint est itaque recusandae illo. Voluptatum sint non aut delectus. Quidem quia quis assumenda maxime dolor recusandae. Eum quidem odit voluptatibus odit sequi quo. Ut necessitatibus voluptatum magnam. Sed voluptatem ut est expedita qui at saepe. Necessitatibus atque sed quos porro laboriosam tempora consequuntur amet. Id quia nisi ut explicabo consequatur occaecati a qui. Inventore omnis eius et est quia. Quisquam omnis sit eum dolorem. Occaecati dolore sit facere aperiam. Rerum laboriosam temporibus non officiis vel. Tempore eum quia molestiae impedit velit quibusdam accusantium. Qui voluptatem ut quidem velit odio. Odio illum cupiditate quas aspernatur ducimus delectus sunt. Nihil earum cum accusantium voluptatem. Non aliquid qui iure expedita. Atque sed nostrum ullam. Distinctio odit vitae aut adipisci.</p>'
                        less_content_html: '<p>Animi vitae et ut consequatur nobis nulla et quis. Et impedit rerum et. Earum odio eum nihil error voluptatem. Doloribus vel cumque quam omnis quod. Qui consectetur recusandae ab qui qui aperiam. Cum error blanditiis dolore. Ipsum deserunt voluptatem quia reprehenderit iusto alias. Vitae quia perspiciatis est est molestiae eos architecto. Similique numquam totam eos repellat aut. Eius nesciunt earum sunt qui ex quas tenetur. Et tempora illum et non. Ullam id nisi quas. Rem eos perspiciatis quaerat. Occaecati totam soluta vero adipisci et sit. Repellat tempore iste culpa possimus fugit unde. Neque maxime consequatur voluptas minima tempore voluptatem impedit. Fugiat voluptates occaecati soluta animi iusto. Repudiandae tenetur consequatur delectus esse at in et iste. Rerum quas ipsa reiciendis magni nulla qui. Voluptatem eveniet ipsum voluptatem voluptas cupiditate. Magnam perspiciatis corrupti deleniti sunt sit. Soluta neque blanditiis ut quia veniam provident. Et quam dolore aspernatur error distinctio eaque minima. Non reiciendis consectetur incidunt ut. Dicta doloribus sint sint est itaque recusandae illo. Voluptatum sint non aut delectus. Quidem quia quis assumenda maxime dolor recusandae. Eum quidem odit voluptatibus odit sequi quo. Ut necessitatibus voluptatum magnam. Sed voluptatem ut est expedita qui at saepe. Necessitatibus atque sed quos porro laboriosam tempora consequuntur amet. Id quia nisi ut explicabo consequatur occaecati a qui. Inventore omnis eius et est quia. Quisquam omnis sit eum dolorem. Occaecati dolore sit facere aperiam. Rerum laboriosam temporibus non officiis vel. Tempore eum quia molestiae impedit velit quibusdam accusantium. Qui voluptatem ut quidem velit odio. Odio illum cupiditate quas aspernatur ducimus delectus sunt. Nihil earum cum accusantium voluptatem. Non aliquid qui iure expedita. Atque sed nostrum ullam. Distinctio odit vitae aut adipisci.</p>'
                        seo_title: 'Rerum ex iste est corrupti repellat.'
                        meta_title: 'Rerum ex iste est corrupti repellat.'
                        seo_desc: 'Et exercitationem voluptate et. Reiciendis mollitia vel sed aliquid. Illo sint est ipsa et aut harum sequi. Consequatur occaecati natus est veniam.'
                        meta_desc: 'Et exercitationem voluptate et. Reiciendis mollitia vel sed aliquid. Illo sint est ipsa et aut harum sequi. Consequatur occaecati natus est veniam.'
                        seo_noindex: true
                        seo_nofollow: false
                        status:
                          value: 1
                          label: active
                        comment: true
                        first_image: null
                        published_at: '2021-12-05T10:04:56.000000Z'
                        published_at_diff: '2 months 3 weeks ago'
                        created_at: '2022-03-03T22:44:29.000000Z'
                        created_at_diff: '1 second ago'
                        updated_at: '2022-03-03T22:44:29.000000Z'
                        updated_at_diff: '1 second ago'
                        user:
                          id: 12346
                          name: 'Amber Cole'
                          status:
                            value: 1
                            label: active
                          created_at: '2022-03-03T22:44:29.000000Z'
                          created_at_diff: '1 second ago'
                          updated_at: '2022-03-03T22:44:29.000000Z'
                          updated_at_diff: '1 second ago'
                        links:
                          web: 'http://idir.test:8443/posts/a-pariatur-aspernatur-culpa-tenetur'
                      -
                        id: 216
                        slug: perferendis-temporibus-iusto-animi-molestias-nam-numquam
                        title: 'Perferendis temporibus iusto animi molestias nam numquam.'
                        short_content: 'Dolore dolorum quasi officia illum. Et consequatur eos doloremque minima et. Mollitia sit eum voluptatem similique nam quia eum. Vel nemo omnis est corrupti assumenda. Qui consequuntur tempore voluptas dicta molestias aut atque. Vel aut pariatur deleniti quo corrupti. Dolor necessitatibus iusto totam tempora debitis vitae aut. Adipisci voluptatem est ut illum enim. Debitis magni quia et tempore. Rerum incidunt omnis excepturi inventore. Ab pariatur rerum omnis dolores repudiandae in dignissimos.'
                        content: 'Dolore dolorum quasi officia illum. Et consequatur eos doloremque minima et. Mollitia sit eum voluptatem similique nam quia eum. Vel nemo omnis est corrupti assumenda. Qui consequuntur tempore voluptas dicta molestias aut atque. Vel aut pariatur deleniti quo corrupti. Dolor necessitatibus iusto totam tempora debitis vitae aut. Adipisci voluptatem est ut illum enim. Debitis magni quia et tempore. Rerum incidunt omnis excepturi inventore. Ab pariatur rerum omnis dolores repudiandae in dignissimos. Voluptas qui ad vel sequi repudiandae. Iure non quasi qui ab suscipit quis qui. Unde nisi vel laborum numquam. Eligendi suscipit mollitia voluptatibus nisi itaque non. Dolore sit et magnam. Odit ad debitis blanditiis vel. Minima mollitia quod neque officiis deleniti quo. Rerum optio quia aut alias quam. Iure ut illo quas ut quidem exercitationem. Eum temporibus ullam fugiat animi id et omnis aliquid. Temporibus ut neque molestiae est eius aliquid est. Aut ut ipsam et. Ut omnis aut eveniet voluptas sapiente sit voluptatum. Ut soluta provident ipsum occaecati sit. Optio adipisci omnis voluptas quae qui. Sunt vel in qui corporis. Assumenda non at et consequatur occaecati architecto. Temporibus quidem distinctio ea facilis quis maiores voluptatum expedita. Eaque recusandae harum odio hic id et id. Consequatur quis corrupti mollitia sed qui ut quia. Ratione veniam qui velit rerum temporibus nisi. Qui quas voluptatum optio earum rerum. Iure unde aut deleniti repudiandae possimus esse molestias. Voluptates ut aperiam voluptatem ad maiores. Dolores amet qui odio dignissimos voluptatibus. Ad placeat libero aliquam voluptatem accusantium. Et adipisci et et soluta rerum odio. Quasi veniam voluptatum et autem. Ipsa aliquam id quod laborum omnis. Dolore voluptatum culpa eos modi. Animi vero necessitatibus omnis quasi. Voluptates ea optio doloremque in corporis. Rerum amet reprehenderit perferendis voluptates distinctio. Dignissimos praesentium recusandae esse.'
                        content_html: '<p>Dolore dolorum quasi officia illum. Et consequatur eos doloremque minima et. Mollitia sit eum voluptatem similique nam quia eum. Vel nemo omnis est corrupti assumenda. Qui consequuntur tempore voluptas dicta molestias aut atque. Vel aut pariatur deleniti quo corrupti. Dolor necessitatibus iusto totam tempora debitis vitae aut. Adipisci voluptatem est ut illum enim. Debitis magni quia et tempore. Rerum incidunt omnis excepturi inventore. Ab pariatur rerum omnis dolores repudiandae in dignissimos. Voluptas qui ad vel sequi repudiandae. Iure non quasi qui ab suscipit quis qui. Unde nisi vel laborum numquam. Eligendi suscipit mollitia voluptatibus nisi itaque non. Dolore sit et magnam. Odit ad debitis blanditiis vel. Minima mollitia quod neque officiis deleniti quo. Rerum optio quia aut alias quam. Iure ut illo quas ut quidem exercitationem. Eum temporibus ullam fugiat animi id et omnis aliquid. Temporibus ut neque molestiae est eius aliquid est. Aut ut ipsam et. Ut omnis aut eveniet voluptas sapiente sit voluptatum. Ut soluta provident ipsum occaecati sit. Optio adipisci omnis voluptas quae qui. Sunt vel in qui corporis. Assumenda non at et consequatur occaecati architecto. Temporibus quidem distinctio ea facilis quis maiores voluptatum expedita. Eaque recusandae harum odio hic id et id. Consequatur quis corrupti mollitia sed qui ut quia. Ratione veniam qui velit rerum temporibus nisi. Qui quas voluptatum optio earum rerum. Iure unde aut deleniti repudiandae possimus esse molestias. Voluptates ut aperiam voluptatem ad maiores. Dolores amet qui odio dignissimos voluptatibus. Ad placeat libero aliquam voluptatem accusantium. Et adipisci et et soluta rerum odio. Quasi veniam voluptatum et autem. Ipsa aliquam id quod laborum omnis. Dolore voluptatum culpa eos modi. Animi vero necessitatibus omnis quasi. Voluptates ea optio doloremque in corporis. Rerum amet reprehenderit perferendis voluptates distinctio. Dignissimos praesentium recusandae esse.</p>'
                        no_more_content_html: '<p>Dolore dolorum quasi officia illum. Et consequatur eos doloremque minima et. Mollitia sit eum voluptatem similique nam quia eum. Vel nemo omnis est corrupti assumenda. Qui consequuntur tempore voluptas dicta molestias aut atque. Vel aut pariatur deleniti quo corrupti. Dolor necessitatibus iusto totam tempora debitis vitae aut. Adipisci voluptatem est ut illum enim. Debitis magni quia et tempore. Rerum incidunt omnis excepturi inventore. Ab pariatur rerum omnis dolores repudiandae in dignissimos. Voluptas qui ad vel sequi repudiandae. Iure non quasi qui ab suscipit quis qui. Unde nisi vel laborum numquam. Eligendi suscipit mollitia voluptatibus nisi itaque non. Dolore sit et magnam. Odit ad debitis blanditiis vel. Minima mollitia quod neque officiis deleniti quo. Rerum optio quia aut alias quam. Iure ut illo quas ut quidem exercitationem. Eum temporibus ullam fugiat animi id et omnis aliquid. Temporibus ut neque molestiae est eius aliquid est. Aut ut ipsam et. Ut omnis aut eveniet voluptas sapiente sit voluptatum. Ut soluta provident ipsum occaecati sit. Optio adipisci omnis voluptas quae qui. Sunt vel in qui corporis. Assumenda non at et consequatur occaecati architecto. Temporibus quidem distinctio ea facilis quis maiores voluptatum expedita. Eaque recusandae harum odio hic id et id. Consequatur quis corrupti mollitia sed qui ut quia. Ratione veniam qui velit rerum temporibus nisi. Qui quas voluptatum optio earum rerum. Iure unde aut deleniti repudiandae possimus esse molestias. Voluptates ut aperiam voluptatem ad maiores. Dolores amet qui odio dignissimos voluptatibus. Ad placeat libero aliquam voluptatem accusantium. Et adipisci et et soluta rerum odio. Quasi veniam voluptatum et autem. Ipsa aliquam id quod laborum omnis. Dolore voluptatum culpa eos modi. Animi vero necessitatibus omnis quasi. Voluptates ea optio doloremque in corporis. Rerum amet reprehenderit perferendis voluptates distinctio. Dignissimos praesentium recusandae esse.</p>'
                        less_content_html: '<p>Dolore dolorum quasi officia illum. Et consequatur eos doloremque minima et. Mollitia sit eum voluptatem similique nam quia eum. Vel nemo omnis est corrupti assumenda. Qui consequuntur tempore voluptas dicta molestias aut atque. Vel aut pariatur deleniti quo corrupti. Dolor necessitatibus iusto totam tempora debitis vitae aut. Adipisci voluptatem est ut illum enim. Debitis magni quia et tempore. Rerum incidunt omnis excepturi inventore. Ab pariatur rerum omnis dolores repudiandae in dignissimos. Voluptas qui ad vel sequi repudiandae. Iure non quasi qui ab suscipit quis qui. Unde nisi vel laborum numquam. Eligendi suscipit mollitia voluptatibus nisi itaque non. Dolore sit et magnam. Odit ad debitis blanditiis vel. Minima mollitia quod neque officiis deleniti quo. Rerum optio quia aut alias quam. Iure ut illo quas ut quidem exercitationem. Eum temporibus ullam fugiat animi id et omnis aliquid. Temporibus ut neque molestiae est eius aliquid est. Aut ut ipsam et. Ut omnis aut eveniet voluptas sapiente sit voluptatum. Ut soluta provident ipsum occaecati sit. Optio adipisci omnis voluptas quae qui. Sunt vel in qui corporis. Assumenda non at et consequatur occaecati architecto. Temporibus quidem distinctio ea facilis quis maiores voluptatum expedita. Eaque recusandae harum odio hic id et id. Consequatur quis corrupti mollitia sed qui ut quia. Ratione veniam qui velit rerum temporibus nisi. Qui quas voluptatum optio earum rerum. Iure unde aut deleniti repudiandae possimus esse molestias. Voluptates ut aperiam voluptatem ad maiores. Dolores amet qui odio dignissimos voluptatibus. Ad placeat libero aliquam voluptatem accusantium. Et adipisci et et soluta rerum odio. Quasi veniam voluptatum et autem. Ipsa aliquam id quod laborum omnis. Dolore voluptatum culpa eos modi. Animi vero necessitatibus omnis quasi. Voluptates ea optio doloremque in corporis. Rerum amet reprehenderit perferendis voluptates distinctio. Dignissimos praesentium recusandae esse.</p>'
                        seo_title: null
                        meta_title: 'Perferendis temporibus iusto animi molestias nam numquam.'
                        seo_desc: 'A dolorem consequatur quo autem distinctio voluptatum. Quis illum rem expedita ab.'
                        meta_desc: 'A dolorem consequatur quo autem distinctio voluptatum. Quis illum rem expedita ab.'
                        seo_noindex: false
                        seo_nofollow: false
                        status:
                          value: 1
                          label: active
                        comment: true
                        first_image: null
                        published_at: '2022-03-03T00:19:13.000000Z'
                        published_at_diff: '22 hours 25 minutes ago'
                        created_at: '2022-03-03T22:44:29.000000Z'
                        created_at_diff: '1 second ago'
                        updated_at: '2022-03-03T22:44:29.000000Z'
                        updated_at_diff: '1 second ago'
                        user:
                          id: 12347
                          name: 'Elouise Crooks'
                          status:
                            value: 0
                            label: inactive
                          created_at: '2022-03-03T22:44:29.000000Z'
                          created_at_diff: '1 second ago'
                          updated_at: '2022-03-03T22:44:29.000000Z'
                          updated_at_diff: '1 second ago'
                        links:
                          web: 'http://idir.test:8443/posts/perferendis-temporibus-iusto-animi-molestias-nam-numquam'
                    items:
                      type: object
                  meta:
                    type: string
                    example: 'Paging, filtering and sorting information'
      tags:
        - Posts
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: integer
                  description: ''
                  example: 1
                filter:
                  type: object
                  description: ''
                  example: []
                  properties:
                    except:
                      type: array
                      description: 'Array containing IDs, excluding records from the list.'
                      example: []
                      items:
                        type: integer
                    search:
                      type: string
                      description: 'Search by keyword. Must be at least 3 characters. Must not be greater than 255 characters.'
                      example: ''
                    status:
                      type: integer
                      description: 'Must be one of 1, 0 (available only for admin.categories.view) or 2 (available only for admin.categories.view).'
                      example: 1
                    category:
                      type: integer
                      description: 'ID of category contains posts.'
                      example: 16
                    orderby:
                      type: string
                      description: 'Sorting the result list. Must be one of <code>created_at|asc</code>, <code>created_at|desc</code>, <code>updated_at|asc</code>, <code>updated_at|desc</code>, <code>title|asc</code>, <code>title|desc</code>, <code>view|desc</code>, or <code>view|asc</code>.'
                      example: title|desc
                    paginate:
                      type: integer
                      description: 'Number of records in the list. Must be one of <code>25</code>, <code>50</code>, or <code>100</code>.'
                      example: 25
  /api/tags/index:
    post:
      summary: 'Index of tags'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      name: 'usługi galwaniczne'
                      slug: uslugi-galwaniczne
                      created_at: '2021-01-06T17:01:54.000000Z'
                      created_at_diff: '1 year 1 month ago'
                      updated_at: '2021-01-06T17:01:54.000000Z'
                      updated_at_diff: '1 year 1 month ago'
                    -
                      id: 1
                      name: 'usługi galwaniczne'
                      slug: uslugi-galwaniczne
                      created_at: '2021-01-06T17:01:54.000000Z'
                      created_at_diff: '1 year 1 month ago'
                      updated_at: '2021-01-06T17:01:54.000000Z'
                      updated_at_diff: '1 year 1 month ago'
                  meta: 'Paging, filtering and sorting information'
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        name: 'usługi galwaniczne'
                        slug: uslugi-galwaniczne
                        created_at: '2021-01-06T17:01:54.000000Z'
                        created_at_diff: '1 year 1 month ago'
                        updated_at: '2021-01-06T17:01:54.000000Z'
                        updated_at_diff: '1 year 1 month ago'
                      -
                        id: 1
                        name: 'usługi galwaniczne'
                        slug: uslugi-galwaniczne
                        created_at: '2021-01-06T17:01:54.000000Z'
                        created_at_diff: '1 year 1 month ago'
                        updated_at: '2021-01-06T17:01:54.000000Z'
                        updated_at_diff: '1 year 1 month ago'
                    items:
                      type: object
                  meta:
                    type: string
                    example: 'Paging, filtering and sorting information'
      tags:
        - Tags
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: integer
                  description: ''
                  example: 1
                filter:
                  type: object
                  description: ''
                  example: []
                  properties:
                    except:
                      type: array
                      description: 'Array containing IDs, excluding records from the list.'
                      example: []
                      items:
                        type: integer
                    search:
                      type: string
                      description: 'Search by keyword. Must be at least 3 characters. Must not be greater than 255 characters.'
                      example: ''
                    orderby:
                      type: string
                      description: 'Sorting the result list. Must be one of <code>created_at|asc</code>, <code>created_at|desc</code>, <code>updated_at|asc</code>, <code>updated_at|desc</code>, <code>sum|asc</code>, or <code>sum|desc</code>.'
                      example: updated_at|asc
                    paginate:
                      type: integer
                      description: 'Number of records in the list. Must be one of <code>25</code>, <code>50</code>, or <code>100</code>.'
                      example: 50
      security: []
  '/api/tokens/{token}':
    delete:
      summary: 'Delete token'
      description: "Delete personal access token.\n\n<aside class=\"notice\">Available only to users with permissions: api.access and api.tokens.delete.</aside>"
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Tokens
    parameters:
      -
        in: path
        name: token
        description: 'The token ID.'
        example: null
        required: true
        schema:
          type: integer
  /api/tokens:
    post:
      summary: 'Create token'
      description: "Create personal access token.\n\n<aside class=\"notice\">Available only to users with permissions: api.access and api.tokens.create.</aside>"
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        201:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  access_token: 1|LN8Gmqe6cRHQpPr5X5GW9wFXuqHVK09L8FSb7Ju9
                properties:
                  access_token:
                    type: string
                    example: 1|LN8Gmqe6cRHQpPr5X5GW9wFXuqHVK09L8FSb7Ju9
                    description: ''
      tags:
        - Tokens
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be between 3 and 255 characters.'
                  example: Access
                expiration:
                  type: integer
                  description: 'Token expiration time on days. If null is unlimited. Must not be greater than 1000.'
                  example: 7
                abilities:
                  type: array
                  description: 'Array containing scopes. Wildcard supported. Must be one of <code>api.*</code>, <code>api.tokens.*</code>, <code>api.tokens.create</code>, <code>api.tokens.delete</code>, <code>api.dirs.*</code>, <code>api.dirs.view</code>, <code>api.dirs.create</code>, <code>api.dirs.edit</code>, or <code>api.dirs.delete</code>.'
                  example:
                    - 'api.*'
                  items:
                    type: string
              required:
                - name
                - abilities
  /api/users/index:
    post:
      summary: 'Index of users'
      description: '<aside class="notice">Available only to users with permissions: api.users.view and admin.users.view.</aside>'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 12343
                      name: 'Colt Jakubowski'
                      status:
                        value: 1
                        label: active
                      created_at: '2022-03-03T22:44:28.000000Z'
                      created_at_diff: '1 second ago'
                      updated_at: '2022-03-03T22:44:28.000000Z'
                      updated_at_diff: '1 second ago'
                      roles:
                        -
                          id: 3
                          name: user
                          created_at: '2021-01-06T16:58:51.000000Z'
                          created_at_diff: '1 year 1 month ago'
                    -
                      id: 12344
                      name: 'Miss Minerva Jaskolski MD'
                      status:
                        value: 1
                        label: active
                      created_at: '2022-03-03T22:44:28.000000Z'
                      created_at_diff: '1 second ago'
                      updated_at: '2022-03-03T22:44:28.000000Z'
                      updated_at_diff: '1 second ago'
                      roles:
                        -
                          id: 3
                          name: user
                          created_at: '2021-01-06T16:58:51.000000Z'
                          created_at_diff: '1 year 1 month ago'
                  meta: 'Paging, filtering and sorting information'
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 12343
                        name: 'Colt Jakubowski'
                        status:
                          value: 1
                          label: active
                        created_at: '2022-03-03T22:44:28.000000Z'
                        created_at_diff: '1 second ago'
                        updated_at: '2022-03-03T22:44:28.000000Z'
                        updated_at_diff: '1 second ago'
                        roles:
                          -
                            id: 3
                            name: user
                            created_at: '2021-01-06T16:58:51.000000Z'
                            created_at_diff: '1 year 1 month ago'
                      -
                        id: 12344
                        name: 'Miss Minerva Jaskolski MD'
                        status:
                          value: 1
                          label: active
                        created_at: '2022-03-03T22:44:28.000000Z'
                        created_at_diff: '1 second ago'
                        updated_at: '2022-03-03T22:44:28.000000Z'
                        updated_at_diff: '1 second ago'
                        roles:
                          -
                            id: 3
                            name: user
                            created_at: '2021-01-06T16:58:51.000000Z'
                            created_at_diff: '1 year 1 month ago'
                    items:
                      type: object
                  meta:
                    type: string
                    example: 'Paging, filtering and sorting information'
      tags:
        - Users
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: integer
                  description: ''
                  example: 1
                filter:
                  type: object
                  description: ''
                  example: []
                  properties:
                    except:
                      type: array
                      description: 'Array containing IDs, excluding records from the list.'
                      example: []
                      items:
                        type: integer
                    search:
                      type: string
                      description: 'Search by keyword. Must be at least 3 characters. Must not be greater than 255 characters.'
                      example: ''
                    status:
                      type: integer
                      description: 'Must be one of 1 or 0 (available only for admin.users.view).'
                      example: 1
                    role:
                      type: integer
                      description: ''
                      example: 1
                    orderby:
                      type: string
                      description: 'Sorting the result list. Must be one of <code>created_at|asc</code>, <code>created_at|desc</code>, <code>updated_at|asc</code>, or <code>updated_at|desc</code>.'
                      example: created_at|asc
                    paginate:
                      type: integer
                      description: 'Number of records in the list. Must be one of <code>25</code>, <code>50</code>, or <code>100</code>.'
                      example: 100
tags:
  -
    name: 'Authenticated user'
    description: "\n> Routes:\n\n    /routes/vendor/icore/api/user.php\n\n> Controller:\n\n    N1ebieski\\ICore\\Http\\Controllers\\Api\\Auth\\UserController"
  -
    name: Authentication
    description: "\n> Routes:\n\n    /routes/vendor/icore/api/auth.php\n\n> Controllers:\n\n    N1ebieski\\ICore\\Http\\Controllers\\Api\\Auth\\RegisterController\n    N1ebieski\\ICore\\Http\\Controllers\\Api\\Auth\\TokenController"
  -
    name: Categories
    description: "\n> Routes:\n\n    /routes/vendor/icore/api/categories.php\n    /routes/vendor/idir/api/categories.php\n\n> Controllers:\n\n    N1ebieski\\ICore\\Http\\Controllers\\Api\\Category\\CategoryController\n    N1ebieski\\ICore\\Http\\Controllers\\Api\\Category\\Post\\CategoryController\n    N1ebieski\\IDir\\Http\\Controllers\\Api\\Category\\Dir\\CategoryController\n\n> Resource:\n\n    N1ebieski\\ICore\\Http\\Resources\\Category\\CategoryResource\n\nPermissions:\n\n- api.* - access to all api endpoints\n- api.categories.* - access to all categories endpoints\n- api.categories.view - access to endpoints with collection of categories"
  -
    name: Dirs
    description: "\n> Routes:\n\n    /routes/vendor/idir/api/dirs.php\n\n> Controller:\n\n    N1ebieski\\IDir\\Http\\Controllers\\Api\\Dir\\DirController\n\n> Resource:\n\n    N1ebieski\\ICore\\Http\\Resources\\Dir\\DirResource\n\nPermissions:\n\n- api.* - access to all api endpoints\n- api.dirs.* - access to all dirs endpoints\n- api.dirs.view - access to endpoints with collection of dirs\n- api.dirs.create - access to create dir endpoint\n- api.dirs.edit - access to edit token endpoint\n- api.dirs.delete - access to delete token endpoint"
  -
    name: Endpoints
    description: ''
  -
    name: Groups
    description: ''
  -
    name: Payments
    description: ''
  -
    name: Posts
    description: "\n> Routes:\n\n    /routes/vendor/icore/api/posts.php\n\n> Controller:\n\n    N1ebieski\\ICore\\Http\\Controllers\\Api\\Post\\PostController\n\n> Resource:\n\n    N1ebieski\\ICore\\Http\\Resources\\Post\\PostResource\n\nPermissions:\n\n- api.* - access to all api endpoints\n- api.posts.* - access to all posts endpoints\n- api.posts.view - access to endpoints with collection of posts"
  -
    name: Tags
    description: "\n> Routes:\n\n    /routes/vendor/icore/api/tags.php\n\n> Controller:\n\n    N1ebieski\\ICore\\Http\\Controllers\\Api\\Tag\\TagController\n\n> Resource:\n\n    N1ebieski\\ICore\\Http\\Resources\\Tag\\TagResource\n\nPermissions:\n\n- api.* - access to all api endpoints\n- api.tags.* - access to all tags endpoints\n- api.tags.view - access to endpoints with collection of tags"
  -
    name: Tokens
    description: "\n> Routes:\n\n    /routes/vendor/icore/api/tokens.php\n\n> Controller:\n\n    N1ebieski\\ICore\\Http\\Controllers\\Api\\Token\\TokenController\n\nPermissions:\n\n- api.* - access to all api endpoints\n- api.tokens.* - access to all tokens endpoints\n- api.tokens.create - access to create token endpoint\n- api.tokens.delete - access to delete token endpoint"
  -
    name: Users
    description: "\n> Routes:\n\n    /routes/vendor/icore/api/users.php\n\n> Controller:\n\n    N1ebieski\\ICore\\Http\\Controllers\\Api\\User\\UserController\n\n> Resource:\n\n    N1ebieski\\ICore\\Http\\Resources\\User\\UserResource\n\nPermissions:\n\n- api.* - access to all api endpoints\n- api.users.* - access to all users endpoints\n- api.users.view - access to endpoints with collection of users"
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: ''
security:
  -
    default: []
