openapi: 3.0.3
info:
  title: 'API Documentation - iDir - nowoczesny katalog stron'
  description: ''
  version: 1.0.0
servers:
  -
    url: 'https://idir.test:8443'
paths:
  /api/user:
    get:
      summary: 'Show user'
      description: "Show authenticated User resource\n\n<aside class=\"notice\">Available only to users with permission: api.access.</aside>"
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 12314
                    name: 'Miss Estel Berge'
                    status:
                      value: 1
                      label: active
                    created_at: '2022-03-07T21:13:24.000000Z'
                    created_at_diff: '1 second ago'
                    updated_at: '2022-03-07T21:13:24.000000Z'
                    updated_at_diff: '1 second ago'
                    roles:
                      -
                        id: 3
                        name: user
                        created_at: '2021-01-06T16:58:51.000000Z'
                        created_at_diff: '1 year 2 months ago'
                properties:
                  data:
                    type: object
                    example:
                      id: 12314
                      name: 'Miss Estel Berge'
                      status:
                        value: 1
                        label: active
                      created_at: '2022-03-07T21:13:24.000000Z'
                      created_at_diff: '1 second ago'
                      updated_at: '2022-03-07T21:13:24.000000Z'
                      updated_at_diff: '1 second ago'
                      roles:
                        -
                          id: 3
                          name: user
                          created_at: '2021-01-06T16:58:51.000000Z'
                          created_at_diff: '1 year 2 months ago'
      tags:
        - 'Authenticated user'
  /api/token:
    post:
      summary: Token
      description: "Create access token and (optional) refresh token.\n\n<aside class=\"notice\">Access token expires after 2 hours. Refresh token expires after 1 year.</aside>"
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        201:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  access_token: 1|LN8Gmqe6cRHQpPr5X5GW9wFXuqHVK09L8FSb7Ju9
                  refresh_token: 2|hVHAhrgiBmSbyYjbVAC17wjwAJyKK8TQmhglBAtM
                properties:
                  access_token:
                    type: string
                    example: 1|LN8Gmqe6cRHQpPr5X5GW9wFXuqHVK09L8FSb7Ju9
                    description: ''
                  refresh_token:
                    type: string
                    example: 2|hVHAhrgiBmSbyYjbVAC17wjwAJyKK8TQmhglBAtM
                    description: '(only if remember param was true)'
      tags:
        - Authentication
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: ''
                  example: kontakt@demo.idir.intelekt.net.pl
                password:
                  type: string
                  description: ''
                  example: demo1234
                remember:
                  type: boolean
                  description: ''
                  example: true
      security: []
  /api/register:
    post:
      summary: Register
      description: 'Create user and send email verification notification'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 12317
                    name: 'Mr. Thurman Flatley'
                    status:
                      value: 1
                      label: active
                    created_at: '2022-03-07T21:13:24.000000Z'
                    created_at_diff: '1 second ago'
                    updated_at: '2022-03-07T21:13:24.000000Z'
                    updated_at_diff: '1 second ago'
                    roles:
                      -
                        id: 3
                        name: user
                        created_at: '2021-01-06T16:58:51.000000Z'
                        created_at_diff: '1 year 2 months ago'
                properties:
                  data:
                    type: object
                    example:
                      id: 12317
                      name: 'Mr. Thurman Flatley'
                      status:
                        value: 1
                        label: active
                      created_at: '2022-03-07T21:13:24.000000Z'
                      created_at_diff: '1 second ago'
                      updated_at: '2022-03-07T21:13:24.000000Z'
                      updated_at_diff: '1 second ago'
                      roles:
                        -
                          id: 3
                          name: user
                          created_at: '2021-01-06T16:58:51.000000Z'
                          created_at_diff: '1 year 2 months ago'
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: N1ebieski
                email:
                  type: string
                  description: ''
                  example: example@example.pl
                password:
                  type: string
                  description: ''
                  example: demo1234
                password_confirmation:
                  type: string
                  description: ''
                  example: demo1234
                privacy_agreement:
                  type: boolean
                  description: 'Acceptance of privacy policy'
                  example: true
                contact_agreement:
                  type: boolean
                  description: 'Acceptance of receiving e-mail system notifications'
                  example: true
                marketing_agreement:
                  type: boolean
                  description: 'Acceptance of receiving marketing information notifications'
                  example: true
              required:
                - name
                - email
                - password
                - password_confirmation
                - privacy_agreement
                - contact_agreement
      security: []
  /api/revoke:
    post:
      summary: 'Revoke token'
      description: 'Revoke access token and refresh token.'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        204:
          description: success
      tags:
        - Authentication
  /api/refresh:
    post:
      summary: 'Refresh token'
      description: "Create new access token and refresh token.\n\n<aside class=\"success\">Refresh token must be in the Authorization header with the value \"Bearer {YOUR_REFRESH_TOKEN}\".</aside>"
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_REFRESH_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        201:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  access_token: 3|LN8Gmqe6cRHQpPr5X5GW9wFXuqHVK09L8FSb7Ju9
                  refresh_token: 4|hVHAhrgiBmSbyYjbVAC17wjwAJyKK8TQmhglBAtM
                properties:
                  access_token:
                    type: string
                    example: 3|LN8Gmqe6cRHQpPr5X5GW9wFXuqHVK09L8FSb7Ju9
                    description: ''
                  refresh_token:
                    type: string
                    example: 4|hVHAhrgiBmSbyYjbVAC17wjwAJyKK8TQmhglBAtM
                    description: ''
      tags:
        - Authentication
  /api/categories/dir/index:
    post:
      summary: 'Index of dir''s categories'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 2609
                      name: 'consequuntur reiciendis'
                      slug: consequuntur-reiciendis
                      icon: null
                      status:
                        value: 1
                        label: active
                      real_depth: 0
                      created_at: '2022-03-07T21:13:24.000000Z'
                      created_at_diff: '1 second ago'
                      updated_at: '2022-03-07T21:13:24.000000Z'
                      updated_at_diff: '1 second ago'
                    -
                      id: 2610
                      name: 'fugit sit'
                      slug: fugit-sit
                      icon: null
                      status:
                        value: 1
                        label: active
                      real_depth: 0
                      created_at: '2022-03-07T21:13:24.000000Z'
                      created_at_diff: '1 second ago'
                      updated_at: '2022-03-07T21:13:24.000000Z'
                      updated_at_diff: '1 second ago'
                  meta: 'Paging, filtering and sorting information'
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 2609
                        name: 'consequuntur reiciendis'
                        slug: consequuntur-reiciendis
                        icon: null
                        status:
                          value: 1
                          label: active
                        real_depth: 0
                        created_at: '2022-03-07T21:13:24.000000Z'
                        created_at_diff: '1 second ago'
                        updated_at: '2022-03-07T21:13:24.000000Z'
                        updated_at_diff: '1 second ago'
                      -
                        id: 2610
                        name: 'fugit sit'
                        slug: fugit-sit
                        icon: null
                        status:
                          value: 1
                          label: active
                        real_depth: 0
                        created_at: '2022-03-07T21:13:24.000000Z'
                        created_at_diff: '1 second ago'
                        updated_at: '2022-03-07T21:13:24.000000Z'
                        updated_at_diff: '1 second ago'
                    items:
                      type: object
                  meta:
                    type: string
                    example: 'Paging, filtering and sorting information'
      tags:
        - Categories
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: integer
                  description: ''
                  example: 1
                filter:
                  type: object
                  description: ''
                  example: []
                  properties:
                    except:
                      type: array
                      description: 'Array containing IDs, excluding records from the list.'
                      example: []
                      items:
                        type: integer
                    search:
                      type: string
                      description: 'Search by keyword. Must be at least 3 characters. Must not be greater than 255 characters.'
                      example: ''
                    status:
                      type: integer
                      description: 'Must be one of 1 or 0 (available only for admin.categories.view).'
                      example: 1
                    parent:
                      type: integer
                      description: 'ID of category parent. If 0, shows only roots.'
                      example: 0
                    orderby:
                      type: string
                      description: 'Sorting the result list. Must be one of <code>created_at|asc</code>, <code>created_at|desc</code>, <code>updated_at|asc</code>, <code>updated_at|desc</code>, <code>name|asc</code>, <code>name|desc</code>, <code>position|asc</code>, <code>position|desc</code>, <code>real_depth|asc</code>, or <code>real_depth|desc</code>.'
                      example: ''
                    paginate:
                      type: integer
                      description: 'Number of records in the list. Must be one of <code>25</code>, <code>50</code>, or <code>100</code>.'
                      example: 25
      security: []
  /api/categories/post/index:
    post:
      summary: 'Index of post''s categories'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 2611
                      name: 'nemo praesentium'
                      slug: nemo-praesentium
                      icon: null
                      status:
                        value: 1
                        label: active
                      real_depth: 0
                      created_at: '2022-03-07T21:13:24.000000Z'
                      created_at_diff: '1 second ago'
                      updated_at: '2022-03-07T21:13:24.000000Z'
                      updated_at_diff: '1 second ago'
                    -
                      id: 2612
                      name: 'beatae quasi'
                      slug: beatae-quasi
                      icon: null
                      status:
                        value: 1
                        label: active
                      real_depth: 0
                      created_at: '2022-03-07T21:13:24.000000Z'
                      created_at_diff: '1 second ago'
                      updated_at: '2022-03-07T21:13:24.000000Z'
                      updated_at_diff: '1 second ago'
                  meta: 'Paging, filtering and sorting information'
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 2611
                        name: 'nemo praesentium'
                        slug: nemo-praesentium
                        icon: null
                        status:
                          value: 1
                          label: active
                        real_depth: 0
                        created_at: '2022-03-07T21:13:24.000000Z'
                        created_at_diff: '1 second ago'
                        updated_at: '2022-03-07T21:13:24.000000Z'
                        updated_at_diff: '1 second ago'
                      -
                        id: 2612
                        name: 'beatae quasi'
                        slug: beatae-quasi
                        icon: null
                        status:
                          value: 1
                          label: active
                        real_depth: 0
                        created_at: '2022-03-07T21:13:24.000000Z'
                        created_at_diff: '1 second ago'
                        updated_at: '2022-03-07T21:13:24.000000Z'
                        updated_at_diff: '1 second ago'
                    items:
                      type: object
                  meta:
                    type: string
                    example: 'Paging, filtering and sorting information'
      tags:
        - Categories
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: integer
                  description: ''
                  example: 1
                filter:
                  type: object
                  description: ''
                  example: []
                  properties:
                    except:
                      type: array
                      description: 'Array containing IDs, excluding records from the list.'
                      example: []
                      items:
                        type: integer
                    search:
                      type: string
                      description: 'Search by keyword. Must be at least 3 characters. Must not be greater than 255 characters.'
                      example: ''
                    status:
                      type: integer
                      description: 'Must be one of 1 or 0 (available only for admin.categories.view).'
                      example: 1
                    parent:
                      type: integer
                      description: 'ID of category parent. If 0, shows only roots.'
                      example: 0
                    orderby:
                      type: string
                      description: 'Sorting the result list. Must be one of <code>created_at|asc</code>, <code>created_at|desc</code>, <code>updated_at|asc</code>, <code>updated_at|desc</code>, <code>name|asc</code>, <code>name|desc</code>, <code>position|asc</code>, <code>position|desc</code>, <code>real_depth|asc</code>, or <code>real_depth|desc</code>.'
                      example: ''
                    paginate:
                      type: integer
                      description: 'Number of records in the list. Must be one of <code>25</code>, <code>50</code>, or <code>100</code>.'
                      example: 50
      security: []
  /api/categories/index:
    post:
      summary: 'Index of all categories'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 12
                      name: 'Gabinety kosmetyczne'
                      slug: gabinety-kosmetyczne
                      icon: null
                      status:
                        value: 1
                        label: active
                      real_depth: 1
                      created_at: '2009-08-21T08:36:46.000000Z'
                      created_at_diff: '12 years 6 months ago'
                      updated_at: '2009-08-21T08:36:46.000000Z'
                      updated_at_diff: '12 years 6 months ago'
                    -
                      id: 12
                      name: 'Gabinety kosmetyczne'
                      slug: gabinety-kosmetyczne
                      icon: null
                      status:
                        value: 1
                        label: active
                      real_depth: 1
                      created_at: '2009-08-21T08:36:46.000000Z'
                      created_at_diff: '12 years 6 months ago'
                      updated_at: '2009-08-21T08:36:46.000000Z'
                      updated_at_diff: '12 years 6 months ago'
                  meta: 'Paging, filtering and sorting information'
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 12
                        name: 'Gabinety kosmetyczne'
                        slug: gabinety-kosmetyczne
                        icon: null
                        status:
                          value: 1
                          label: active
                        real_depth: 1
                        created_at: '2009-08-21T08:36:46.000000Z'
                        created_at_diff: '12 years 6 months ago'
                        updated_at: '2009-08-21T08:36:46.000000Z'
                        updated_at_diff: '12 years 6 months ago'
                      -
                        id: 12
                        name: 'Gabinety kosmetyczne'
                        slug: gabinety-kosmetyczne
                        icon: null
                        status:
                          value: 1
                          label: active
                        real_depth: 1
                        created_at: '2009-08-21T08:36:46.000000Z'
                        created_at_diff: '12 years 6 months ago'
                        updated_at: '2009-08-21T08:36:46.000000Z'
                        updated_at_diff: '12 years 6 months ago'
                    items:
                      type: object
                  meta:
                    type: string
                    example: 'Paging, filtering and sorting information'
      tags:
        - Categories
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: integer
                  description: ''
                  example: 1
                filter:
                  type: object
                  description: ''
                  example: []
                  properties:
                    except:
                      type: array
                      description: 'Array containing IDs, excluding records from the list.'
                      example: []
                      items:
                        type: integer
                    search:
                      type: string
                      description: 'Search by keyword. Must be at least 3 characters. Must not be greater than 255 characters.'
                      example: ''
                    status:
                      type: integer
                      description: 'Must be one of 1 or 0 (available only for admin.categories.view).'
                      example: 1
                    parent:
                      type: integer
                      description: 'ID of category parent. If 0, shows only roots.'
                      example: 0
                    orderby:
                      type: string
                      description: 'Sorting the result list. Must be one of <code>created_at|asc</code>, <code>created_at|desc</code>, <code>updated_at|asc</code>, <code>updated_at|desc</code>, <code>name|asc</code>, <code>name|desc</code>, <code>position|asc</code>, <code>position|desc</code>, <code>real_depth|asc</code>, or <code>real_depth|desc</code>.'
                      example: ''
                    paginate:
                      type: integer
                      description: 'Number of records in the list. Must be one of <code>25</code>, <code>50</code>, or <code>100</code>.'
                      example: 25
      security: []
  '/api/dirs/group/{group}':
    post:
      summary: 'Create dir'
      description: '<aside class="notice">If the user is authenticated the entry is added to his/her account, if not, an account is created for the email address provided.</aside>'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 13390
                    slug: repellendus-tempore
                    title: 'Repellendus tempore.'
                    short_content: 'Est mollitia architecto ducimus architecto fugiat sit. Ut quisquam dolor et asperiores. Qui omnis sit non minus omnis rerum quas. Rem et voluptate enim enim. Unde qui et iure ut rerum ratione reprehenderit. Consequuntur animi cumque nisi rem maiores.'
                    content: 'Est mollitia architecto ducimus architecto fugiat sit. Ut quisquam dolor et asperiores. Qui omnis sit non minus omnis rerum quas. Rem et voluptate enim enim. Unde qui et iure ut rerum ratione reprehenderit. Consequuntur animi cumque nisi rem maiores. Quibusdam animi ut sed velit et.'
                    content_html: 'Est mollitia architecto ducimus architecto fugiat sit. Ut quisquam dolor et asperiores. Qui omnis sit non minus omnis rerum quas. Rem et voluptate enim enim. Unde qui et iure ut rerum ratione reprehenderit. Consequuntur animi cumque nisi rem maiores. Quibusdam animi ut sed velit et.'
                    less_content_html: 'Est mollitia architecto ducimus architecto fugiat sit. Ut quisquam dolor et asperiores. Qui omnis sit non minus omnis rerum quas. Rem et voluptate enim enim. Unde qui et iure ut rerum ratione reprehenderit. Consequuntur animi cumque nisi rem maiores.... <a href="http://idir.test:8443/dirs/repellendus-tempore">show more &raquo</a>'
                    url: 'http://funk.com'
                    thumbnail_url: 'https://idir.test:8443/thumbnails?url=eyJpdiI6ImE0bWdPOFRaTWdIejBVaDFUNlRLTkE9PSIsInZhbHVlIjoiVnVjM1ZBeHhmRTdZNm5xMG1LYnhZdz09IiwibWFjIjoiOGU5NDNlYTZmOTQ3NGYyYzI5YjU4ZGE4MjU0Y2YxY2NkNzM4OWFkODdhZTE4OGE0Y2Q1YzU3Y2I5MTA3ZDRkNiJ9'
                    sum_rating: '0.00'
                    created_at: '2022-03-07T21:13:24.000000Z'
                    created_at_diff: '1 second ago'
                    updated_at: '2022-03-07T21:13:24.000000Z'
                    updated_at_diff: '1 second ago'
                    links: []
                  payment_url: 'https://demo.idir.intelekt.net.pl/api/payments/1a7005ff-8db3-4e47-8f21-a4c2a333e395'
                properties:
                  data:
                    type: object
                    example:
                      id: 13390
                      slug: repellendus-tempore
                      title: 'Repellendus tempore.'
                      short_content: 'Est mollitia architecto ducimus architecto fugiat sit. Ut quisquam dolor et asperiores. Qui omnis sit non minus omnis rerum quas. Rem et voluptate enim enim. Unde qui et iure ut rerum ratione reprehenderit. Consequuntur animi cumque nisi rem maiores.'
                      content: 'Est mollitia architecto ducimus architecto fugiat sit. Ut quisquam dolor et asperiores. Qui omnis sit non minus omnis rerum quas. Rem et voluptate enim enim. Unde qui et iure ut rerum ratione reprehenderit. Consequuntur animi cumque nisi rem maiores. Quibusdam animi ut sed velit et.'
                      content_html: 'Est mollitia architecto ducimus architecto fugiat sit. Ut quisquam dolor et asperiores. Qui omnis sit non minus omnis rerum quas. Rem et voluptate enim enim. Unde qui et iure ut rerum ratione reprehenderit. Consequuntur animi cumque nisi rem maiores. Quibusdam animi ut sed velit et.'
                      less_content_html: 'Est mollitia architecto ducimus architecto fugiat sit. Ut quisquam dolor et asperiores. Qui omnis sit non minus omnis rerum quas. Rem et voluptate enim enim. Unde qui et iure ut rerum ratione reprehenderit. Consequuntur animi cumque nisi rem maiores.... <a href="http://idir.test:8443/dirs/repellendus-tempore">show more &raquo</a>'
                      url: 'http://funk.com'
                      thumbnail_url: 'https://idir.test:8443/thumbnails?url=eyJpdiI6ImE0bWdPOFRaTWdIejBVaDFUNlRLTkE9PSIsInZhbHVlIjoiVnVjM1ZBeHhmRTdZNm5xMG1LYnhZdz09IiwibWFjIjoiOGU5NDNlYTZmOTQ3NGYyYzI5YjU4ZGE4MjU0Y2YxY2NkNzM4OWFkODdhZTE4OGE0Y2Q1YzU3Y2I5MTA3ZDRkNiJ9'
                      sum_rating: '0.00'
                      created_at: '2022-03-07T21:13:24.000000Z'
                      created_at_diff: '1 second ago'
                      updated_at: '2022-03-07T21:13:24.000000Z'
                      updated_at_diff: '1 second ago'
                      links: []
                  payment_url:
                    type: string
                    example: 'https://demo.idir.intelekt.net.pl/api/payments/1a7005ff-8db3-4e47-8f21-a4c2a333e395'
      tags:
        - Dirs
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must be between 3 and 100 characters.'
                  example: gogityhatxwrrwmmpxyqwviwympaldcjjefojdzedtvqufsnqpyegarguku
                tags:
                  type: array
                  description: 'Must be at least 3 characters. Must not be greater than 30 characters.'
                  example:
                    - bkrpkmyp
                  items:
                    type: string
                categories:
                  type: array
                  description: 'Array containing category IDs.'
                  example: []
                  items:
                    type: integer
                content_html:
                  type: string
                  description: 'Description. Must be between 255 and 1000 characters.'
                  example: nwpnorbctzsjfxwhczzozgvtshinbugkzgcrlzbzcnkjiawhweoulopkoznyvizgmqspnthajjklfgdfnlgrliyzcshyyjuemslvgwcqkhrmpqpbsrrgodtnrwrabsrqhyrpmusgsydvzqrmwmeuvvemwziajbdsqvztpommbuswtvynpldnttvipjpsueaxsobzaveplwachrxgydvtpmvkbvabcjotliohuaqegydyycasycrtaryqecjmosvhthsioqaiworgdwhfixacygnbguyuqovknaocjzothppcmyntmpqgcvpvfmydvehqvarmwhsbxnofkzgvrcscrryibmmymmpmrefnsrbxruhjdgjagnxblcbhkchmfvhrgopbdsiklifhpzdchvyunlfesxbmjdevhinybgimegiubhbyfdbgsxvstmypidrvojkpnqihywtsmideltfjvtqmdtyxnksxfjmjijnoitgxabgktmudmwsbovhagyjtfdyweahdquvlgorvghueewhnetqtxopnnjwtgbyrucvbvyvcrrheijpmhctbufhzsgatfhmqkxkmsuzqetaoaoazenyercqpprcagguwlsoltauvjrbvvantssruitfocvbknqgsrwfdwgfnovxbfcoqbtevfwtjzffy
                notes:
                  type: string
                  description: 'Additional information for the moderator. Must be between 3 and 255 characters.'
                  example: ''
                url:
                  type: string
                  description: 'Unique website url with http/https protocol.'
                  example: 'https://demo.idir.intelekt.net.pl'
                backlink:
                  type: integer
                  description: 'ID of the selected backlink.'
                  example: null
                backlink_url:
                  type: string
                  description: 'Url with http/https protocol to backlink.'
                  example: null
                email:
                  type: string
                  description: 'Email address, required if the user adds the entry as unauthenticated.'
                  example: kontakt@intelekt.net.pl
                field:
                  type: array
                  description: 'Array containing additional form fields if the group allows it.'
                  example: null
                  items:
                    type: object
                payment_type:
                  type: string
                  description: 'If the group requires a payment, the selected type must be defined. Must be one of <code>transfer</code>, <code>code_transfer</code>, <code>code_sms</code>, or <code>paypal_express</code>.'
                  example: null
                payment_transfer:
                  type: integer
                  description: 'ID of the selected price if payment_type is <code>transfer</code>.'
                  example: null
                payment_code_sms:
                  type: integer
                  description: 'ID of the selected price if payment_type is <code>code_sms</code>.'
                  example: null
                code_sms:
                  type: string
                  description: 'Received code if payment_type is <code>code_sms</code>.'
                  example: null
                payment_code_transfer:
                  type: integer
                  description: 'ID of the selected price if payment_type is <code>code_transfer</code>.'
                  example: null
                code_transfer:
                  type: string
                  description: 'Received code if payment_type is <code>code_transfer</code>.'
                  example: null
                payment_paypal_express:
                  type: integer
                  description: 'ID of the selected price if payment_type is <code>paypal_express</code>.'
                  example: null
              required:
                - title
                - categories
                - content_html
      security: []
    parameters:
      -
        in: path
        name: group
        description: 'The group ID.'
        example: 1
        required: true
        schema:
          type: integer
  /api/dirs/index:
    post:
      summary: 'Index of dirs'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Dirs
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: integer
                  description: ''
                  example: 1
                filter:
                  type: object
                  description: ''
                  example: []
                  properties:
                    except:
                      type: array
                      description: 'Array containing IDs, excluding records from the list.'
                      example: []
                      items:
                        type: integer
                    search:
                      type: string
                      description: 'Search by keyword. Must be at least 3 characters. Must not be greater than 255 characters.'
                      example: ''
                    status:
                      type: integer
                      description: 'Must be one of 1 or (available only for admin.dirs.view) 0, 2, 3, 4, 5.'
                      example: 1
                    group:
                      type: integer
                      description: 'ID of Group relationship.'
                      example: null
                    category:
                      type: integer
                      description: 'ID of Category relationship.'
                      example: null
                    orderby:
                      type: string
                      description: 'Sorting the result list. Must be one of <code>created_at|asc</code>, <code>created_at|desc</code>, <code>updated_at|asc</code>, <code>updated_at|desc</code>, <code>title|asc</code>, <code>title|desc</code>, <code>sum_rating|desc</code>, <code>sum_rating|asc</code>, <code>click|desc</code>, <code>click|asc</code>, <code>view|desc</code>, or <code>view|asc</code>.'
                      example: ''
                    paginate:
                      type: integer
                      description: 'Number of records in the list. Must be one of <code>25</code>, <code>50</code>, or <code>100</code>.'
                      example: 100
                    author:
                      type: integer
                      description: '(available only for admin.dirs.view) ID of User relationship.'
                      example: null
                    report:
                      type: integer
                      description: '(available only for admin.dirs.view) Must be one of 1 or 0.'
                      example: null
  /api/groups/index:
    post:
      summary: 'Index of groups'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 67
                      slug: veritatis
                      position: 10
                      name: Veritatis
                      desc: 'Sed quis et nobis harum eaque enim. Excepturi voluptates animi officiis adipisci. Qui error fugit soluta temporibus laborum quo vel.'
                      border: null
                      max_cats: 1
                      max_models: null
                      max_models_daily: null
                      visible:
                        value: 1
                        label: public
                      apply_status:
                        value: 0
                        label: 'pending acceptance'
                      url:
                        value: 0
                        label: none
                      backlink:
                        value: 1
                        label: optional
                      created_at: '2022-03-07T21:13:23.000000Z'
                      created_at_diff: '1 second ago'
                      updated_at: '2022-03-07T21:13:23.000000Z'
                      updated_at_diff: '1 second ago'
                      alt: null
                      privileges:
                        -
                          id: 9
                          name: 'additional options for editing content'
                          created_at: '2021-01-06T16:58:51.000000Z'
                          updated_at: '2021-01-06T16:58:51.000000Z'
                    -
                      id: 68
                      slug: ut
                      position: 11
                      name: Ut
                      desc: 'Omnis magnam alias earum ducimus ipsam fugit. Rerum officia non est in architecto. Non consequuntur numquam voluptatem sit quas quam accusantium. Porro non quia error explicabo.'
                      border: null
                      max_cats: 1
                      max_models: null
                      max_models_daily: 7
                      visible:
                        value: 1
                        label: public
                      apply_status:
                        value: 1
                        label: 'active immediately'
                      url:
                        value: 0
                        label: none
                      backlink:
                        value: 1
                        label: optional
                      created_at: '2022-03-07T21:13:23.000000Z'
                      created_at_diff: '1 second ago'
                      updated_at: '2022-03-07T21:13:23.000000Z'
                      updated_at_diff: '1 second ago'
                      alt: null
                      privileges:
                        -
                          id: 9
                          name: 'additional options for editing content'
                          created_at: '2021-01-06T16:58:51.000000Z'
                          updated_at: '2021-01-06T16:58:51.000000Z'
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 67
                        slug: veritatis
                        position: 10
                        name: Veritatis
                        desc: 'Sed quis et nobis harum eaque enim. Excepturi voluptates animi officiis adipisci. Qui error fugit soluta temporibus laborum quo vel.'
                        border: null
                        max_cats: 1
                        max_models: null
                        max_models_daily: null
                        visible:
                          value: 1
                          label: public
                        apply_status:
                          value: 0
                          label: 'pending acceptance'
                        url:
                          value: 0
                          label: none
                        backlink:
                          value: 1
                          label: optional
                        created_at: '2022-03-07T21:13:23.000000Z'
                        created_at_diff: '1 second ago'
                        updated_at: '2022-03-07T21:13:23.000000Z'
                        updated_at_diff: '1 second ago'
                        alt: null
                        privileges:
                          -
                            id: 9
                            name: 'additional options for editing content'
                            created_at: '2021-01-06T16:58:51.000000Z'
                            updated_at: '2021-01-06T16:58:51.000000Z'
                      -
                        id: 68
                        slug: ut
                        position: 11
                        name: Ut
                        desc: 'Omnis magnam alias earum ducimus ipsam fugit. Rerum officia non est in architecto. Non consequuntur numquam voluptatem sit quas quam accusantium. Porro non quia error explicabo.'
                        border: null
                        max_cats: 1
                        max_models: null
                        max_models_daily: 7
                        visible:
                          value: 1
                          label: public
                        apply_status:
                          value: 1
                          label: 'active immediately'
                        url:
                          value: 0
                          label: none
                        backlink:
                          value: 1
                          label: optional
                        created_at: '2022-03-07T21:13:23.000000Z'
                        created_at_diff: '1 second ago'
                        updated_at: '2022-03-07T21:13:23.000000Z'
                        updated_at_diff: '1 second ago'
                        alt: null
                        privileges:
                          -
                            id: 9
                            name: 'additional options for editing content'
                            created_at: '2021-01-06T16:58:51.000000Z'
                            updated_at: '2021-01-06T16:58:51.000000Z'
                    items:
                      type: object
      tags:
        - Groups
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: integer
                  description: ''
                  example: 1
                filter:
                  type: object
                  description: ''
                  example: []
                  properties:
                    except:
                      type: array
                      description: 'Array containing IDs, excluding records from the list.'
                      example: []
                      items:
                        type: integer
                    search:
                      type: string
                      description: 'Search by keyword. Must be at least 3 characters. Must not be greater than 255 characters.'
                      example: ''
                    visible:
                      type: integer
                      description: 'Must be one of 1 or 0 (available only for admin.groups.view).'
                      example: 1
                    orderby:
                      type: string
                      description: 'Sorting the result list. Must be one of <code>created_at|asc</code>, <code>created_at|desc</code>, <code>updated_at|asc</code>, <code>updated_at|desc</code>, <code>name|asc</code>, <code>name|desc</code>, <code>position|asc</code>, or <code>position|desc</code>.'
                      example: ''
                    paginate:
                      type: integer
                      description: 'Number of records in the list. Must be one of <code>25</code>, <code>50</code>, or <code>100</code>.'
                      example: 100
      security: []
  '/api/payments/{payment_dir_pending}/dir/{driver}':
    get:
      summary: 'Initialise dir''s payment'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    uuid: eb280f6e-3667-429a-ad77-f98298b22e34
                    driver: null
                    status:
                      value: 2
                      label: pending
                    created_at: '2022-03-07T21:13:23.000000Z'
                    created_at_diff: '1 second ago'
                    updated_at: '2022-03-07T21:13:23.000000Z'
                    updated_at_diff: '1 second ago'
                    morph:
                      id: 13389
                      slug: ut
                      title: Ut.
                      short_content: 'Officiis delectus excepturi eaque qui. Quisquam est est ipsum vitae. Numquam cumque accusantium repellat debitis deserunt delectus. Consequatur maiores nostrum ea. Rerum cum quo non. Cupiditate voluptas omnis iusto aut. Vitae qui dolor et sed volupta'
                      content: 'Officiis delectus excepturi eaque qui. Quisquam est est ipsum vitae. Numquam cumque accusantium repellat debitis deserunt delectus. Consequatur maiores nostrum ea. Rerum cum quo non. Cupiditate voluptas omnis iusto aut. Vitae qui dolor et sed voluptate suscipit corporis est. Blanditiis soluta neque dignissimos optio ut et impedit.'
                      content_html: 'Officiis delectus excepturi eaque qui. Quisquam est est ipsum vitae. Numquam cumque accusantium repellat debitis deserunt delectus. Consequatur maiores nostrum ea. Rerum cum quo non. Cupiditate voluptas omnis iusto aut. Vitae qui dolor et sed voluptate suscipit corporis est. Blanditiis soluta neque dignissimos optio ut et impedit.'
                      less_content_html: 'Officiis delectus excepturi eaque qui. Quisquam est est ipsum vitae. Numquam cumque accusantium repellat debitis deserunt delectus. Consequatur maiores nostrum ea. Rerum cum quo non. Cupiditate voluptas omnis iusto aut. Vitae qui dolor et sed volupta... <a href="https://idir.test:8443/dirs/ut">show more &raquo</a>'
                      url: 'http://www.schowalter.info'
                      thumbnail_url: 'https://idir.test:8443/thumbnails?url=eyJpdiI6IjZwaU85cU5WSDJQSlwvQXhPYkt0b213PT0iLCJ2YWx1ZSI6IlExd2V2bHBKZU83ZStEbHVNRlFPVVpJc3JWRVZDbmFVN0JTWnd2RFRhaEk9IiwibWFjIjoiZTBmNTBlYWVmMjYwZmIxMDU4N2Q3MzZlNzAwM2VhNjg1MDY2OWUyYjMyMjQxMjAwZjdhY2U4MDFlNzZjZTdmMSJ9'
                      sum_rating: '0.00'
                      created_at: '2022-03-07T21:13:23.000000Z'
                      created_at_diff: '1 second ago'
                      updated_at: '2022-03-07T21:13:23.000000Z'
                      updated_at_diff: '1 second ago'
                      links: []
                    order:
                      id: 36
                      type: transfer
                      price: '5.20'
                      regular_price: '5.20'
                      discount_price: null
                      discount: null
                      qr_as_image: null
                      days: 220
                      created_at: '2022-03-07T21:13:23.000000Z'
                      created_at_diff: '1 second ago'
                      updated_at: '2022-03-07T21:13:23.000000Z'
                      updated_at_diff: '1 second ago'
                  url: 'https://paytest.cashbill.pl/pl/payment/eydJpZCI6IlRFU1RfNmV6OWZ6dXpvIiwicGMiOiIiLCJ0b2tlbiI6ImJiNjQ3ZGFhOTQ3NDU1NzM0OGRhMzhkYjEyMTE0YTI5MTA0NDhkMGUifQ--'
                properties:
                  data:
                    type: object
                    example:
                      uuid: eb280f6e-3667-429a-ad77-f98298b22e34
                      driver: null
                      status:
                        value: 2
                        label: pending
                      created_at: '2022-03-07T21:13:23.000000Z'
                      created_at_diff: '1 second ago'
                      updated_at: '2022-03-07T21:13:23.000000Z'
                      updated_at_diff: '1 second ago'
                      morph:
                        id: 13389
                        slug: ut
                        title: Ut.
                        short_content: 'Officiis delectus excepturi eaque qui. Quisquam est est ipsum vitae. Numquam cumque accusantium repellat debitis deserunt delectus. Consequatur maiores nostrum ea. Rerum cum quo non. Cupiditate voluptas omnis iusto aut. Vitae qui dolor et sed volupta'
                        content: 'Officiis delectus excepturi eaque qui. Quisquam est est ipsum vitae. Numquam cumque accusantium repellat debitis deserunt delectus. Consequatur maiores nostrum ea. Rerum cum quo non. Cupiditate voluptas omnis iusto aut. Vitae qui dolor et sed voluptate suscipit corporis est. Blanditiis soluta neque dignissimos optio ut et impedit.'
                        content_html: 'Officiis delectus excepturi eaque qui. Quisquam est est ipsum vitae. Numquam cumque accusantium repellat debitis deserunt delectus. Consequatur maiores nostrum ea. Rerum cum quo non. Cupiditate voluptas omnis iusto aut. Vitae qui dolor et sed voluptate suscipit corporis est. Blanditiis soluta neque dignissimos optio ut et impedit.'
                        less_content_html: 'Officiis delectus excepturi eaque qui. Quisquam est est ipsum vitae. Numquam cumque accusantium repellat debitis deserunt delectus. Consequatur maiores nostrum ea. Rerum cum quo non. Cupiditate voluptas omnis iusto aut. Vitae qui dolor et sed volupta... <a href="https://idir.test:8443/dirs/ut">show more &raquo</a>'
                        url: 'http://www.schowalter.info'
                        thumbnail_url: 'https://idir.test:8443/thumbnails?url=eyJpdiI6IjZwaU85cU5WSDJQSlwvQXhPYkt0b213PT0iLCJ2YWx1ZSI6IlExd2V2bHBKZU83ZStEbHVNRlFPVVpJc3JWRVZDbmFVN0JTWnd2RFRhaEk9IiwibWFjIjoiZTBmNTBlYWVmMjYwZmIxMDU4N2Q3MzZlNzAwM2VhNjg1MDY2OWUyYjMyMjQxMjAwZjdhY2U4MDFlNzZjZTdmMSJ9'
                        sum_rating: '0.00'
                        created_at: '2022-03-07T21:13:23.000000Z'
                        created_at_diff: '1 second ago'
                        updated_at: '2022-03-07T21:13:23.000000Z'
                        updated_at_diff: '1 second ago'
                        links: []
                      order:
                        id: 36
                        type: transfer
                        price: '5.20'
                        regular_price: '5.20'
                        discount_price: null
                        discount: null
                        qr_as_image: null
                        days: 220
                        created_at: '2022-03-07T21:13:23.000000Z'
                        created_at_diff: '1 second ago'
                        updated_at: '2022-03-07T21:13:23.000000Z'
                        updated_at_diff: '1 second ago'
                  url:
                    type: string
                    example: 'https://paytest.cashbill.pl/pl/payment/eydJpZCI6IlRFU1RfNmV6OWZ6dXpvIiwicGMiOiIiLCJ0b2tlbiI6ImJiNjQ3ZGFhOTQ3NDU1NzM0OGRhMzhkYjEyMTE0YTI5MTA0NDhkMGUifQ--'
                    description: 'Link to the driver''s payment page (for transfer type payment).'
      tags:
        - Payments
      security: []
    parameters:
      -
        in: path
        name: payment_dir_pending
        description: 'The payment UUID.'
        example: null
        required: true
        schema:
          type: string
      -
        in: path
        name: driver
        description: 'Optional parameter. The payment driver.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
  /api/posts/index:
    post:
      summary: 'Index of posts'
      description: '<aside class="notice">Available only to users with permission: api.access and api.posts.view.</aside>'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 201
                      slug: voluptatem-enim-tenetur-quas
                      title: 'Voluptatem enim tenetur quas.'
                      short_content: 'Ut exercitationem explicabo voluptatibus qui. Assumenda est soluta eaque. Nostrum et voluptatem impedit cupiditate sed quia. Ut amet animi inventore doloremque tenetur ipsa. Illo inventore velit quas. Dicta amet expedita unde esse delectus. Recusandae doloribus deleniti est hic dolores tenetur. Aperiam dolores omnis aperiam repudiandae. Ex dicta iure quo quis. Maxime quas quia magni alias. Molestiae tempora voluptas animi. Omnis recusandae perferendis maiores itaque totam expedita praesentium vo'
                      content: 'Ut exercitationem explicabo voluptatibus qui. Assumenda est soluta eaque. Nostrum et voluptatem impedit cupiditate sed quia. Ut amet animi inventore doloremque tenetur ipsa. Illo inventore velit quas. Dicta amet expedita unde esse delectus. Recusandae doloribus deleniti est hic dolores tenetur. Aperiam dolores omnis aperiam repudiandae. Ex dicta iure quo quis. Maxime quas quia magni alias. Molestiae tempora voluptas animi. Omnis recusandae perferendis maiores itaque totam expedita praesentium voluptatem. Quia ea ipsam debitis. Nihil quis ex fuga omnis nihil placeat non. Explicabo aut necessitatibus placeat nemo aut vero. Est et voluptas dignissimos minima dolore vel. Dolorum iusto voluptas cum sunt eum voluptatem. Quis provident est atque mollitia qui delectus optio. Nesciunt sint cumque tenetur magnam. Neque et quos recusandae nemo. Id quia ea et reiciendis ut debitis officia nemo. Perferendis et rerum illum et quia. Est deleniti harum cupiditate et rerum. Sed temporibus eum velit ex fugit. Perferendis quo eos voluptas mollitia aut omnis. Aut eius voluptates et. Commodi commodi porro saepe excepturi et voluptas et. Possimus earum est dolores. Odio voluptas error qui et nesciunt quis. Maxime nihil quisquam reprehenderit nobis voluptas magnam. Esse inventore dicta dolorem iste quos. Ab id consequatur consequatur cum autem veritatis. Facere provident laboriosam vel libero repudiandae. Rerum fuga aut sunt. Sunt totam nulla ea molestiae nemo et distinctio. Libero voluptatem harum nisi explicabo in consequatur enim error. Sit harum culpa expedita unde veniam amet. Commodi qui non possimus repellat porro itaque. Et et eos praesentium repellat iusto fuga illum. Minima provident nihil consequatur cum vel voluptatem. Rem qui consequatur animi ea est. Voluptatem natus sunt error eius quas et. Temporibus adipisci aut eum qui eveniet.'
                      content_html: '<p>Ut exercitationem explicabo voluptatibus qui. Assumenda est soluta eaque. Nostrum et voluptatem impedit cupiditate sed quia. Ut amet animi inventore doloremque tenetur ipsa. Illo inventore velit quas. Dicta amet expedita unde esse delectus. Recusandae doloribus deleniti est hic dolores tenetur. Aperiam dolores omnis aperiam repudiandae. Ex dicta iure quo quis. Maxime quas quia magni alias. Molestiae tempora voluptas animi. Omnis recusandae perferendis maiores itaque totam expedita praesentium voluptatem. Quia ea ipsam debitis. Nihil quis ex fuga omnis nihil placeat non. Explicabo aut necessitatibus placeat nemo aut vero. Est et voluptas dignissimos minima dolore vel. Dolorum iusto voluptas cum sunt eum voluptatem. Quis provident est atque mollitia qui delectus optio. Nesciunt sint cumque tenetur magnam. Neque et quos recusandae nemo. Id quia ea et reiciendis ut debitis officia nemo. Perferendis et rerum illum et quia. Est deleniti harum cupiditate et rerum. Sed temporibus eum velit ex fugit. Perferendis quo eos voluptas mollitia aut omnis. Aut eius voluptates et. Commodi commodi porro saepe excepturi et voluptas et. Possimus earum est dolores. Odio voluptas error qui et nesciunt quis. Maxime nihil quisquam reprehenderit nobis voluptas magnam. Esse inventore dicta dolorem iste quos. Ab id consequatur consequatur cum autem veritatis. Facere provident laboriosam vel libero repudiandae. Rerum fuga aut sunt. Sunt totam nulla ea molestiae nemo et distinctio. Libero voluptatem harum nisi explicabo in consequatur enim error. Sit harum culpa expedita unde veniam amet. Commodi qui non possimus repellat porro itaque. Et et eos praesentium repellat iusto fuga illum. Minima provident nihil consequatur cum vel voluptatem. Rem qui consequatur animi ea est. Voluptatem natus sunt error eius quas et. Temporibus adipisci aut eum qui eveniet.</p>'
                      no_more_content_html: '<p>Ut exercitationem explicabo voluptatibus qui. Assumenda est soluta eaque. Nostrum et voluptatem impedit cupiditate sed quia. Ut amet animi inventore doloremque tenetur ipsa. Illo inventore velit quas. Dicta amet expedita unde esse delectus. Recusandae doloribus deleniti est hic dolores tenetur. Aperiam dolores omnis aperiam repudiandae. Ex dicta iure quo quis. Maxime quas quia magni alias. Molestiae tempora voluptas animi. Omnis recusandae perferendis maiores itaque totam expedita praesentium voluptatem. Quia ea ipsam debitis. Nihil quis ex fuga omnis nihil placeat non. Explicabo aut necessitatibus placeat nemo aut vero. Est et voluptas dignissimos minima dolore vel. Dolorum iusto voluptas cum sunt eum voluptatem. Quis provident est atque mollitia qui delectus optio. Nesciunt sint cumque tenetur magnam. Neque et quos recusandae nemo. Id quia ea et reiciendis ut debitis officia nemo. Perferendis et rerum illum et quia. Est deleniti harum cupiditate et rerum. Sed temporibus eum velit ex fugit. Perferendis quo eos voluptas mollitia aut omnis. Aut eius voluptates et. Commodi commodi porro saepe excepturi et voluptas et. Possimus earum est dolores. Odio voluptas error qui et nesciunt quis. Maxime nihil quisquam reprehenderit nobis voluptas magnam. Esse inventore dicta dolorem iste quos. Ab id consequatur consequatur cum autem veritatis. Facere provident laboriosam vel libero repudiandae. Rerum fuga aut sunt. Sunt totam nulla ea molestiae nemo et distinctio. Libero voluptatem harum nisi explicabo in consequatur enim error. Sit harum culpa expedita unde veniam amet. Commodi qui non possimus repellat porro itaque. Et et eos praesentium repellat iusto fuga illum. Minima provident nihil consequatur cum vel voluptatem. Rem qui consequatur animi ea est. Voluptatem natus sunt error eius quas et. Temporibus adipisci aut eum qui eveniet.</p>'
                      less_content_html: '<p>Ut exercitationem explicabo voluptatibus qui. Assumenda est soluta eaque. Nostrum et voluptatem impedit cupiditate sed quia. Ut amet animi inventore doloremque tenetur ipsa. Illo inventore velit quas. Dicta amet expedita unde esse delectus. Recusandae doloribus deleniti est hic dolores tenetur. Aperiam dolores omnis aperiam repudiandae. Ex dicta iure quo quis. Maxime quas quia magni alias. Molestiae tempora voluptas animi. Omnis recusandae perferendis maiores itaque totam expedita praesentium voluptatem. Quia ea ipsam debitis. Nihil quis ex fuga omnis nihil placeat non. Explicabo aut necessitatibus placeat nemo aut vero. Est et voluptas dignissimos minima dolore vel. Dolorum iusto voluptas cum sunt eum voluptatem. Quis provident est atque mollitia qui delectus optio. Nesciunt sint cumque tenetur magnam. Neque et quos recusandae nemo. Id quia ea et reiciendis ut debitis officia nemo. Perferendis et rerum illum et quia. Est deleniti harum cupiditate et rerum. Sed temporibus eum velit ex fugit. Perferendis quo eos voluptas mollitia aut omnis. Aut eius voluptates et. Commodi commodi porro saepe excepturi et voluptas et. Possimus earum est dolores. Odio voluptas error qui et nesciunt quis. Maxime nihil quisquam reprehenderit nobis voluptas magnam. Esse inventore dicta dolorem iste quos. Ab id consequatur consequatur cum autem veritatis. Facere provident laboriosam vel libero repudiandae. Rerum fuga aut sunt. Sunt totam nulla ea molestiae nemo et distinctio. Libero voluptatem harum nisi explicabo in consequatur enim error. Sit harum culpa expedita unde veniam amet. Commodi qui non possimus repellat porro itaque. Et et eos praesentium repellat iusto fuga illum. Minima provident nihil consequatur cum vel voluptatem. Rem qui consequatur animi ea est. Voluptatem natus sunt error eius quas et. Temporibus adipisci aut eum qui eveniet.</p>'
                      seo_title: 'Porro autem odit quo accusamus quis natus.'
                      meta_title: 'Porro autem odit quo accusamus quis natus.'
                      seo_desc: 'Aperiam quos explicabo quia possimus sint temporibus. Eum iste odit dicta libero consequatur iste. Nemo cum voluptatum laboriosam qui debitis. Minima dicta voluptatibus possimus.'
                      meta_desc: 'Aperiam quos explicabo quia possimus sint temporibus. Eum iste odit dicta libero consequatur iste. Nemo cum voluptatum laboriosam qui debitis. Minima dicta voluptatibus possimus.'
                      seo_noindex: false
                      seo_nofollow: false
                      status:
                        value: 1
                        label: active
                      comment: true
                      first_image: null
                      published_at: '2021-09-25T13:08:38.000000Z'
                      published_at_diff: '5 months 1 week ago'
                      created_at: '2022-03-07T21:13:24.000000Z'
                      created_at_diff: '1 second ago'
                      updated_at: '2022-03-07T21:13:24.000000Z'
                      updated_at_diff: '1 second ago'
                      user:
                        id: 12315
                        name: 'Dr. Jaylon Nader'
                        status:
                          value: 0
                          label: inactive
                        created_at: '2022-03-07T21:13:24.000000Z'
                        created_at_diff: '1 second ago'
                        updated_at: '2022-03-07T21:13:24.000000Z'
                        updated_at_diff: '1 second ago'
                      links:
                        web: 'http://idir.test:8443/posts/voluptatem-enim-tenetur-quas'
                    -
                      id: 202
                      slug: reprehenderit-quas-eum-ab
                      title: 'Reprehenderit quas eum ab.'
                      short_content: 'Repellendus neque est et illo iure. Ad minima voluptatem ut soluta placeat unde ut. Nesciunt quo sed quisquam quis. Molestiae et porro et accusamus omnis inventore atque. Officiis excepturi eum unde nisi qui. Et magnam ut aut odio ab eligendi quaerat iusto. Velit quo impedit nulla veritatis quia culpa eaque unde. Voluptatem itaque ullam distinctio sit dolores nihil. Enim sit ut tenetur qui quasi quo. Et est doloremque voluptatem quos laboriosam et facere. Maxime officia at doloribus saepe conseq'
                      content: 'Repellendus neque est et illo iure. Ad minima voluptatem ut soluta placeat unde ut. Nesciunt quo sed quisquam quis. Molestiae et porro et accusamus omnis inventore atque. Officiis excepturi eum unde nisi qui. Et magnam ut aut odio ab eligendi quaerat iusto. Velit quo impedit nulla veritatis quia culpa eaque unde. Voluptatem itaque ullam distinctio sit dolores nihil. Enim sit ut tenetur qui quasi quo. Et est doloremque voluptatem quos laboriosam et facere. Maxime officia at doloribus saepe consequatur culpa alias. Autem sit nemo ut eum asperiores quasi voluptatum quia. Perspiciatis harum repellendus veniam porro amet. Optio expedita dolorum at fugit voluptas facilis. Hic molestiae enim ratione pariatur vel ut. Fugit quisquam velit nobis enim aut cupiditate dolor. Perspiciatis sint similique alias voluptas perferendis. Sunt ad facere eaque nobis architecto et non. Temporibus consequatur nihil eos repellat. Voluptas est aperiam consequatur sed. Placeat officia neque porro esse eveniet delectus. Odio saepe minus molestiae. Aliquid qui quibusdam aspernatur dolor. Asperiores nulla expedita sint voluptatem officiis maiores totam. Adipisci consequatur et dolore et. Alias facilis eligendi quia nulla. Fugiat voluptatem est ea magni dolorum ut voluptatibus quo. Autem eaque sunt rerum aperiam eveniet. In vel odit dolores inventore dolor. Nostrum dolorem praesentium dolorem illum. Qui omnis voluptas vero voluptate alias et doloremque. Cupiditate consequatur ipsam consequatur quae dicta ut laborum. Cum dolorem odit blanditiis cupiditate ut voluptas et quasi. Pariatur tempore velit quae consequatur nostrum eos. Ex exercitationem et eaque sapiente laboriosam molestiae vero. Nostrum porro facilis est nisi alias assumenda aperiam voluptatem. Nobis eaque sint est. Rem quasi voluptas molestiae dolor. Odit similique aperiam eum voluptatem. Aliquam incidunt id dignissimos perferendis rerum. Totam voluptatum esse aliquid officiis. Dolores eaque ipsam pariatur facilis reprehenderit.'
                      content_html: '<p>Repellendus neque est et illo iure. Ad minima voluptatem ut soluta placeat unde ut. Nesciunt quo sed quisquam quis. Molestiae et porro et accusamus omnis inventore atque. Officiis excepturi eum unde nisi qui. Et magnam ut aut odio ab eligendi quaerat iusto. Velit quo impedit nulla veritatis quia culpa eaque unde. Voluptatem itaque ullam distinctio sit dolores nihil. Enim sit ut tenetur qui quasi quo. Et est doloremque voluptatem quos laboriosam et facere. Maxime officia at doloribus saepe consequatur culpa alias. Autem sit nemo ut eum asperiores quasi voluptatum quia. Perspiciatis harum repellendus veniam porro amet. Optio expedita dolorum at fugit voluptas facilis. Hic molestiae enim ratione pariatur vel ut. Fugit quisquam velit nobis enim aut cupiditate dolor. Perspiciatis sint similique alias voluptas perferendis. Sunt ad facere eaque nobis architecto et non. Temporibus consequatur nihil eos repellat. Voluptas est aperiam consequatur sed. Placeat officia neque porro esse eveniet delectus. Odio saepe minus molestiae. Aliquid qui quibusdam aspernatur dolor. Asperiores nulla expedita sint voluptatem officiis maiores totam. Adipisci consequatur et dolore et. Alias facilis eligendi quia nulla. Fugiat voluptatem est ea magni dolorum ut voluptatibus quo. Autem eaque sunt rerum aperiam eveniet. In vel odit dolores inventore dolor. Nostrum dolorem praesentium dolorem illum. Qui omnis voluptas vero voluptate alias et doloremque. Cupiditate consequatur ipsam consequatur quae dicta ut laborum. Cum dolorem odit blanditiis cupiditate ut voluptas et quasi. Pariatur tempore velit quae consequatur nostrum eos. Ex exercitationem et eaque sapiente laboriosam molestiae vero. Nostrum porro facilis est nisi alias assumenda aperiam voluptatem. Nobis eaque sint est. Rem quasi voluptas molestiae dolor. Odit similique aperiam eum voluptatem. Aliquam incidunt id dignissimos perferendis rerum. Totam voluptatum esse aliquid officiis. Dolores eaque ipsam pariatur facilis reprehenderit.</p>'
                      no_more_content_html: '<p>Repellendus neque est et illo iure. Ad minima voluptatem ut soluta placeat unde ut. Nesciunt quo sed quisquam quis. Molestiae et porro et accusamus omnis inventore atque. Officiis excepturi eum unde nisi qui. Et magnam ut aut odio ab eligendi quaerat iusto. Velit quo impedit nulla veritatis quia culpa eaque unde. Voluptatem itaque ullam distinctio sit dolores nihil. Enim sit ut tenetur qui quasi quo. Et est doloremque voluptatem quos laboriosam et facere. Maxime officia at doloribus saepe consequatur culpa alias. Autem sit nemo ut eum asperiores quasi voluptatum quia. Perspiciatis harum repellendus veniam porro amet. Optio expedita dolorum at fugit voluptas facilis. Hic molestiae enim ratione pariatur vel ut. Fugit quisquam velit nobis enim aut cupiditate dolor. Perspiciatis sint similique alias voluptas perferendis. Sunt ad facere eaque nobis architecto et non. Temporibus consequatur nihil eos repellat. Voluptas est aperiam consequatur sed. Placeat officia neque porro esse eveniet delectus. Odio saepe minus molestiae. Aliquid qui quibusdam aspernatur dolor. Asperiores nulla expedita sint voluptatem officiis maiores totam. Adipisci consequatur et dolore et. Alias facilis eligendi quia nulla. Fugiat voluptatem est ea magni dolorum ut voluptatibus quo. Autem eaque sunt rerum aperiam eveniet. In vel odit dolores inventore dolor. Nostrum dolorem praesentium dolorem illum. Qui omnis voluptas vero voluptate alias et doloremque. Cupiditate consequatur ipsam consequatur quae dicta ut laborum. Cum dolorem odit blanditiis cupiditate ut voluptas et quasi. Pariatur tempore velit quae consequatur nostrum eos. Ex exercitationem et eaque sapiente laboriosam molestiae vero. Nostrum porro facilis est nisi alias assumenda aperiam voluptatem. Nobis eaque sint est. Rem quasi voluptas molestiae dolor. Odit similique aperiam eum voluptatem. Aliquam incidunt id dignissimos perferendis rerum. Totam voluptatum esse aliquid officiis. Dolores eaque ipsam pariatur facilis reprehenderit.</p>'
                      less_content_html: '<p>Repellendus neque est et illo iure. Ad minima voluptatem ut soluta placeat unde ut. Nesciunt quo sed quisquam quis. Molestiae et porro et accusamus omnis inventore atque. Officiis excepturi eum unde nisi qui. Et magnam ut aut odio ab eligendi quaerat iusto. Velit quo impedit nulla veritatis quia culpa eaque unde. Voluptatem itaque ullam distinctio sit dolores nihil. Enim sit ut tenetur qui quasi quo. Et est doloremque voluptatem quos laboriosam et facere. Maxime officia at doloribus saepe consequatur culpa alias. Autem sit nemo ut eum asperiores quasi voluptatum quia. Perspiciatis harum repellendus veniam porro amet. Optio expedita dolorum at fugit voluptas facilis. Hic molestiae enim ratione pariatur vel ut. Fugit quisquam velit nobis enim aut cupiditate dolor. Perspiciatis sint similique alias voluptas perferendis. Sunt ad facere eaque nobis architecto et non. Temporibus consequatur nihil eos repellat. Voluptas est aperiam consequatur sed. Placeat officia neque porro esse eveniet delectus. Odio saepe minus molestiae. Aliquid qui quibusdam aspernatur dolor. Asperiores nulla expedita sint voluptatem officiis maiores totam. Adipisci consequatur et dolore et. Alias facilis eligendi quia nulla. Fugiat voluptatem est ea magni dolorum ut voluptatibus quo. Autem eaque sunt rerum aperiam eveniet. In vel odit dolores inventore dolor. Nostrum dolorem praesentium dolorem illum. Qui omnis voluptas vero voluptate alias et doloremque. Cupiditate consequatur ipsam consequatur quae dicta ut laborum. Cum dolorem odit blanditiis cupiditate ut voluptas et quasi. Pariatur tempore velit quae consequatur nostrum eos. Ex exercitationem et eaque sapiente laboriosam molestiae vero. Nostrum porro facilis est nisi alias assumenda aperiam voluptatem. Nobis eaque sint est. Rem quasi voluptas molestiae dolor. Odit similique aperiam eum voluptatem. Aliquam incidunt id dignissimos perferendis rerum. Totam voluptatum esse aliquid officiis. Dolores eaque ipsam pariatur facilis reprehenderit.</p>'
                      seo_title: null
                      meta_title: 'Reprehenderit quas eum ab.'
                      seo_desc: 'Fugiat quis aperiam quas explicabo quas reprehenderit. Ea ullam dolorem voluptatem numquam at ratione dignissimos.'
                      meta_desc: 'Fugiat quis aperiam quas explicabo quas reprehenderit. Ea ullam dolorem voluptatem numquam at ratione dignissimos.'
                      seo_noindex: false
                      seo_nofollow: false
                      status:
                        value: 1
                        label: active
                      comment: true
                      first_image: null
                      published_at: '2021-05-18T06:37:16.000000Z'
                      published_at_diff: '9 months 2 weeks ago'
                      created_at: '2022-03-07T21:13:24.000000Z'
                      created_at_diff: '1 second ago'
                      updated_at: '2022-03-07T21:13:24.000000Z'
                      updated_at_diff: '1 second ago'
                      user:
                        id: 12316
                        name: 'Esteban Ebert'
                        status:
                          value: 0
                          label: inactive
                        created_at: '2022-03-07T21:13:24.000000Z'
                        created_at_diff: '1 second ago'
                        updated_at: '2022-03-07T21:13:24.000000Z'
                        updated_at_diff: '1 second ago'
                      links:
                        web: 'http://idir.test:8443/posts/reprehenderit-quas-eum-ab'
                  meta: 'Paging, filtering and sorting information'
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 201
                        slug: voluptatem-enim-tenetur-quas
                        title: 'Voluptatem enim tenetur quas.'
                        short_content: 'Ut exercitationem explicabo voluptatibus qui. Assumenda est soluta eaque. Nostrum et voluptatem impedit cupiditate sed quia. Ut amet animi inventore doloremque tenetur ipsa. Illo inventore velit quas. Dicta amet expedita unde esse delectus. Recusandae doloribus deleniti est hic dolores tenetur. Aperiam dolores omnis aperiam repudiandae. Ex dicta iure quo quis. Maxime quas quia magni alias. Molestiae tempora voluptas animi. Omnis recusandae perferendis maiores itaque totam expedita praesentium vo'
                        content: 'Ut exercitationem explicabo voluptatibus qui. Assumenda est soluta eaque. Nostrum et voluptatem impedit cupiditate sed quia. Ut amet animi inventore doloremque tenetur ipsa. Illo inventore velit quas. Dicta amet expedita unde esse delectus. Recusandae doloribus deleniti est hic dolores tenetur. Aperiam dolores omnis aperiam repudiandae. Ex dicta iure quo quis. Maxime quas quia magni alias. Molestiae tempora voluptas animi. Omnis recusandae perferendis maiores itaque totam expedita praesentium voluptatem. Quia ea ipsam debitis. Nihil quis ex fuga omnis nihil placeat non. Explicabo aut necessitatibus placeat nemo aut vero. Est et voluptas dignissimos minima dolore vel. Dolorum iusto voluptas cum sunt eum voluptatem. Quis provident est atque mollitia qui delectus optio. Nesciunt sint cumque tenetur magnam. Neque et quos recusandae nemo. Id quia ea et reiciendis ut debitis officia nemo. Perferendis et rerum illum et quia. Est deleniti harum cupiditate et rerum. Sed temporibus eum velit ex fugit. Perferendis quo eos voluptas mollitia aut omnis. Aut eius voluptates et. Commodi commodi porro saepe excepturi et voluptas et. Possimus earum est dolores. Odio voluptas error qui et nesciunt quis. Maxime nihil quisquam reprehenderit nobis voluptas magnam. Esse inventore dicta dolorem iste quos. Ab id consequatur consequatur cum autem veritatis. Facere provident laboriosam vel libero repudiandae. Rerum fuga aut sunt. Sunt totam nulla ea molestiae nemo et distinctio. Libero voluptatem harum nisi explicabo in consequatur enim error. Sit harum culpa expedita unde veniam amet. Commodi qui non possimus repellat porro itaque. Et et eos praesentium repellat iusto fuga illum. Minima provident nihil consequatur cum vel voluptatem. Rem qui consequatur animi ea est. Voluptatem natus sunt error eius quas et. Temporibus adipisci aut eum qui eveniet.'
                        content_html: '<p>Ut exercitationem explicabo voluptatibus qui. Assumenda est soluta eaque. Nostrum et voluptatem impedit cupiditate sed quia. Ut amet animi inventore doloremque tenetur ipsa. Illo inventore velit quas. Dicta amet expedita unde esse delectus. Recusandae doloribus deleniti est hic dolores tenetur. Aperiam dolores omnis aperiam repudiandae. Ex dicta iure quo quis. Maxime quas quia magni alias. Molestiae tempora voluptas animi. Omnis recusandae perferendis maiores itaque totam expedita praesentium voluptatem. Quia ea ipsam debitis. Nihil quis ex fuga omnis nihil placeat non. Explicabo aut necessitatibus placeat nemo aut vero. Est et voluptas dignissimos minima dolore vel. Dolorum iusto voluptas cum sunt eum voluptatem. Quis provident est atque mollitia qui delectus optio. Nesciunt sint cumque tenetur magnam. Neque et quos recusandae nemo. Id quia ea et reiciendis ut debitis officia nemo. Perferendis et rerum illum et quia. Est deleniti harum cupiditate et rerum. Sed temporibus eum velit ex fugit. Perferendis quo eos voluptas mollitia aut omnis. Aut eius voluptates et. Commodi commodi porro saepe excepturi et voluptas et. Possimus earum est dolores. Odio voluptas error qui et nesciunt quis. Maxime nihil quisquam reprehenderit nobis voluptas magnam. Esse inventore dicta dolorem iste quos. Ab id consequatur consequatur cum autem veritatis. Facere provident laboriosam vel libero repudiandae. Rerum fuga aut sunt. Sunt totam nulla ea molestiae nemo et distinctio. Libero voluptatem harum nisi explicabo in consequatur enim error. Sit harum culpa expedita unde veniam amet. Commodi qui non possimus repellat porro itaque. Et et eos praesentium repellat iusto fuga illum. Minima provident nihil consequatur cum vel voluptatem. Rem qui consequatur animi ea est. Voluptatem natus sunt error eius quas et. Temporibus adipisci aut eum qui eveniet.</p>'
                        no_more_content_html: '<p>Ut exercitationem explicabo voluptatibus qui. Assumenda est soluta eaque. Nostrum et voluptatem impedit cupiditate sed quia. Ut amet animi inventore doloremque tenetur ipsa. Illo inventore velit quas. Dicta amet expedita unde esse delectus. Recusandae doloribus deleniti est hic dolores tenetur. Aperiam dolores omnis aperiam repudiandae. Ex dicta iure quo quis. Maxime quas quia magni alias. Molestiae tempora voluptas animi. Omnis recusandae perferendis maiores itaque totam expedita praesentium voluptatem. Quia ea ipsam debitis. Nihil quis ex fuga omnis nihil placeat non. Explicabo aut necessitatibus placeat nemo aut vero. Est et voluptas dignissimos minima dolore vel. Dolorum iusto voluptas cum sunt eum voluptatem. Quis provident est atque mollitia qui delectus optio. Nesciunt sint cumque tenetur magnam. Neque et quos recusandae nemo. Id quia ea et reiciendis ut debitis officia nemo. Perferendis et rerum illum et quia. Est deleniti harum cupiditate et rerum. Sed temporibus eum velit ex fugit. Perferendis quo eos voluptas mollitia aut omnis. Aut eius voluptates et. Commodi commodi porro saepe excepturi et voluptas et. Possimus earum est dolores. Odio voluptas error qui et nesciunt quis. Maxime nihil quisquam reprehenderit nobis voluptas magnam. Esse inventore dicta dolorem iste quos. Ab id consequatur consequatur cum autem veritatis. Facere provident laboriosam vel libero repudiandae. Rerum fuga aut sunt. Sunt totam nulla ea molestiae nemo et distinctio. Libero voluptatem harum nisi explicabo in consequatur enim error. Sit harum culpa expedita unde veniam amet. Commodi qui non possimus repellat porro itaque. Et et eos praesentium repellat iusto fuga illum. Minima provident nihil consequatur cum vel voluptatem. Rem qui consequatur animi ea est. Voluptatem natus sunt error eius quas et. Temporibus adipisci aut eum qui eveniet.</p>'
                        less_content_html: '<p>Ut exercitationem explicabo voluptatibus qui. Assumenda est soluta eaque. Nostrum et voluptatem impedit cupiditate sed quia. Ut amet animi inventore doloremque tenetur ipsa. Illo inventore velit quas. Dicta amet expedita unde esse delectus. Recusandae doloribus deleniti est hic dolores tenetur. Aperiam dolores omnis aperiam repudiandae. Ex dicta iure quo quis. Maxime quas quia magni alias. Molestiae tempora voluptas animi. Omnis recusandae perferendis maiores itaque totam expedita praesentium voluptatem. Quia ea ipsam debitis. Nihil quis ex fuga omnis nihil placeat non. Explicabo aut necessitatibus placeat nemo aut vero. Est et voluptas dignissimos minima dolore vel. Dolorum iusto voluptas cum sunt eum voluptatem. Quis provident est atque mollitia qui delectus optio. Nesciunt sint cumque tenetur magnam. Neque et quos recusandae nemo. Id quia ea et reiciendis ut debitis officia nemo. Perferendis et rerum illum et quia. Est deleniti harum cupiditate et rerum. Sed temporibus eum velit ex fugit. Perferendis quo eos voluptas mollitia aut omnis. Aut eius voluptates et. Commodi commodi porro saepe excepturi et voluptas et. Possimus earum est dolores. Odio voluptas error qui et nesciunt quis. Maxime nihil quisquam reprehenderit nobis voluptas magnam. Esse inventore dicta dolorem iste quos. Ab id consequatur consequatur cum autem veritatis. Facere provident laboriosam vel libero repudiandae. Rerum fuga aut sunt. Sunt totam nulla ea molestiae nemo et distinctio. Libero voluptatem harum nisi explicabo in consequatur enim error. Sit harum culpa expedita unde veniam amet. Commodi qui non possimus repellat porro itaque. Et et eos praesentium repellat iusto fuga illum. Minima provident nihil consequatur cum vel voluptatem. Rem qui consequatur animi ea est. Voluptatem natus sunt error eius quas et. Temporibus adipisci aut eum qui eveniet.</p>'
                        seo_title: 'Porro autem odit quo accusamus quis natus.'
                        meta_title: 'Porro autem odit quo accusamus quis natus.'
                        seo_desc: 'Aperiam quos explicabo quia possimus sint temporibus. Eum iste odit dicta libero consequatur iste. Nemo cum voluptatum laboriosam qui debitis. Minima dicta voluptatibus possimus.'
                        meta_desc: 'Aperiam quos explicabo quia possimus sint temporibus. Eum iste odit dicta libero consequatur iste. Nemo cum voluptatum laboriosam qui debitis. Minima dicta voluptatibus possimus.'
                        seo_noindex: false
                        seo_nofollow: false
                        status:
                          value: 1
                          label: active
                        comment: true
                        first_image: null
                        published_at: '2021-09-25T13:08:38.000000Z'
                        published_at_diff: '5 months 1 week ago'
                        created_at: '2022-03-07T21:13:24.000000Z'
                        created_at_diff: '1 second ago'
                        updated_at: '2022-03-07T21:13:24.000000Z'
                        updated_at_diff: '1 second ago'
                        user:
                          id: 12315
                          name: 'Dr. Jaylon Nader'
                          status:
                            value: 0
                            label: inactive
                          created_at: '2022-03-07T21:13:24.000000Z'
                          created_at_diff: '1 second ago'
                          updated_at: '2022-03-07T21:13:24.000000Z'
                          updated_at_diff: '1 second ago'
                        links:
                          web: 'http://idir.test:8443/posts/voluptatem-enim-tenetur-quas'
                      -
                        id: 202
                        slug: reprehenderit-quas-eum-ab
                        title: 'Reprehenderit quas eum ab.'
                        short_content: 'Repellendus neque est et illo iure. Ad minima voluptatem ut soluta placeat unde ut. Nesciunt quo sed quisquam quis. Molestiae et porro et accusamus omnis inventore atque. Officiis excepturi eum unde nisi qui. Et magnam ut aut odio ab eligendi quaerat iusto. Velit quo impedit nulla veritatis quia culpa eaque unde. Voluptatem itaque ullam distinctio sit dolores nihil. Enim sit ut tenetur qui quasi quo. Et est doloremque voluptatem quos laboriosam et facere. Maxime officia at doloribus saepe conseq'
                        content: 'Repellendus neque est et illo iure. Ad minima voluptatem ut soluta placeat unde ut. Nesciunt quo sed quisquam quis. Molestiae et porro et accusamus omnis inventore atque. Officiis excepturi eum unde nisi qui. Et magnam ut aut odio ab eligendi quaerat iusto. Velit quo impedit nulla veritatis quia culpa eaque unde. Voluptatem itaque ullam distinctio sit dolores nihil. Enim sit ut tenetur qui quasi quo. Et est doloremque voluptatem quos laboriosam et facere. Maxime officia at doloribus saepe consequatur culpa alias. Autem sit nemo ut eum asperiores quasi voluptatum quia. Perspiciatis harum repellendus veniam porro amet. Optio expedita dolorum at fugit voluptas facilis. Hic molestiae enim ratione pariatur vel ut. Fugit quisquam velit nobis enim aut cupiditate dolor. Perspiciatis sint similique alias voluptas perferendis. Sunt ad facere eaque nobis architecto et non. Temporibus consequatur nihil eos repellat. Voluptas est aperiam consequatur sed. Placeat officia neque porro esse eveniet delectus. Odio saepe minus molestiae. Aliquid qui quibusdam aspernatur dolor. Asperiores nulla expedita sint voluptatem officiis maiores totam. Adipisci consequatur et dolore et. Alias facilis eligendi quia nulla. Fugiat voluptatem est ea magni dolorum ut voluptatibus quo. Autem eaque sunt rerum aperiam eveniet. In vel odit dolores inventore dolor. Nostrum dolorem praesentium dolorem illum. Qui omnis voluptas vero voluptate alias et doloremque. Cupiditate consequatur ipsam consequatur quae dicta ut laborum. Cum dolorem odit blanditiis cupiditate ut voluptas et quasi. Pariatur tempore velit quae consequatur nostrum eos. Ex exercitationem et eaque sapiente laboriosam molestiae vero. Nostrum porro facilis est nisi alias assumenda aperiam voluptatem. Nobis eaque sint est. Rem quasi voluptas molestiae dolor. Odit similique aperiam eum voluptatem. Aliquam incidunt id dignissimos perferendis rerum. Totam voluptatum esse aliquid officiis. Dolores eaque ipsam pariatur facilis reprehenderit.'
                        content_html: '<p>Repellendus neque est et illo iure. Ad minima voluptatem ut soluta placeat unde ut. Nesciunt quo sed quisquam quis. Molestiae et porro et accusamus omnis inventore atque. Officiis excepturi eum unde nisi qui. Et magnam ut aut odio ab eligendi quaerat iusto. Velit quo impedit nulla veritatis quia culpa eaque unde. Voluptatem itaque ullam distinctio sit dolores nihil. Enim sit ut tenetur qui quasi quo. Et est doloremque voluptatem quos laboriosam et facere. Maxime officia at doloribus saepe consequatur culpa alias. Autem sit nemo ut eum asperiores quasi voluptatum quia. Perspiciatis harum repellendus veniam porro amet. Optio expedita dolorum at fugit voluptas facilis. Hic molestiae enim ratione pariatur vel ut. Fugit quisquam velit nobis enim aut cupiditate dolor. Perspiciatis sint similique alias voluptas perferendis. Sunt ad facere eaque nobis architecto et non. Temporibus consequatur nihil eos repellat. Voluptas est aperiam consequatur sed. Placeat officia neque porro esse eveniet delectus. Odio saepe minus molestiae. Aliquid qui quibusdam aspernatur dolor. Asperiores nulla expedita sint voluptatem officiis maiores totam. Adipisci consequatur et dolore et. Alias facilis eligendi quia nulla. Fugiat voluptatem est ea magni dolorum ut voluptatibus quo. Autem eaque sunt rerum aperiam eveniet. In vel odit dolores inventore dolor. Nostrum dolorem praesentium dolorem illum. Qui omnis voluptas vero voluptate alias et doloremque. Cupiditate consequatur ipsam consequatur quae dicta ut laborum. Cum dolorem odit blanditiis cupiditate ut voluptas et quasi. Pariatur tempore velit quae consequatur nostrum eos. Ex exercitationem et eaque sapiente laboriosam molestiae vero. Nostrum porro facilis est nisi alias assumenda aperiam voluptatem. Nobis eaque sint est. Rem quasi voluptas molestiae dolor. Odit similique aperiam eum voluptatem. Aliquam incidunt id dignissimos perferendis rerum. Totam voluptatum esse aliquid officiis. Dolores eaque ipsam pariatur facilis reprehenderit.</p>'
                        no_more_content_html: '<p>Repellendus neque est et illo iure. Ad minima voluptatem ut soluta placeat unde ut. Nesciunt quo sed quisquam quis. Molestiae et porro et accusamus omnis inventore atque. Officiis excepturi eum unde nisi qui. Et magnam ut aut odio ab eligendi quaerat iusto. Velit quo impedit nulla veritatis quia culpa eaque unde. Voluptatem itaque ullam distinctio sit dolores nihil. Enim sit ut tenetur qui quasi quo. Et est doloremque voluptatem quos laboriosam et facere. Maxime officia at doloribus saepe consequatur culpa alias. Autem sit nemo ut eum asperiores quasi voluptatum quia. Perspiciatis harum repellendus veniam porro amet. Optio expedita dolorum at fugit voluptas facilis. Hic molestiae enim ratione pariatur vel ut. Fugit quisquam velit nobis enim aut cupiditate dolor. Perspiciatis sint similique alias voluptas perferendis. Sunt ad facere eaque nobis architecto et non. Temporibus consequatur nihil eos repellat. Voluptas est aperiam consequatur sed. Placeat officia neque porro esse eveniet delectus. Odio saepe minus molestiae. Aliquid qui quibusdam aspernatur dolor. Asperiores nulla expedita sint voluptatem officiis maiores totam. Adipisci consequatur et dolore et. Alias facilis eligendi quia nulla. Fugiat voluptatem est ea magni dolorum ut voluptatibus quo. Autem eaque sunt rerum aperiam eveniet. In vel odit dolores inventore dolor. Nostrum dolorem praesentium dolorem illum. Qui omnis voluptas vero voluptate alias et doloremque. Cupiditate consequatur ipsam consequatur quae dicta ut laborum. Cum dolorem odit blanditiis cupiditate ut voluptas et quasi. Pariatur tempore velit quae consequatur nostrum eos. Ex exercitationem et eaque sapiente laboriosam molestiae vero. Nostrum porro facilis est nisi alias assumenda aperiam voluptatem. Nobis eaque sint est. Rem quasi voluptas molestiae dolor. Odit similique aperiam eum voluptatem. Aliquam incidunt id dignissimos perferendis rerum. Totam voluptatum esse aliquid officiis. Dolores eaque ipsam pariatur facilis reprehenderit.</p>'
                        less_content_html: '<p>Repellendus neque est et illo iure. Ad minima voluptatem ut soluta placeat unde ut. Nesciunt quo sed quisquam quis. Molestiae et porro et accusamus omnis inventore atque. Officiis excepturi eum unde nisi qui. Et magnam ut aut odio ab eligendi quaerat iusto. Velit quo impedit nulla veritatis quia culpa eaque unde. Voluptatem itaque ullam distinctio sit dolores nihil. Enim sit ut tenetur qui quasi quo. Et est doloremque voluptatem quos laboriosam et facere. Maxime officia at doloribus saepe consequatur culpa alias. Autem sit nemo ut eum asperiores quasi voluptatum quia. Perspiciatis harum repellendus veniam porro amet. Optio expedita dolorum at fugit voluptas facilis. Hic molestiae enim ratione pariatur vel ut. Fugit quisquam velit nobis enim aut cupiditate dolor. Perspiciatis sint similique alias voluptas perferendis. Sunt ad facere eaque nobis architecto et non. Temporibus consequatur nihil eos repellat. Voluptas est aperiam consequatur sed. Placeat officia neque porro esse eveniet delectus. Odio saepe minus molestiae. Aliquid qui quibusdam aspernatur dolor. Asperiores nulla expedita sint voluptatem officiis maiores totam. Adipisci consequatur et dolore et. Alias facilis eligendi quia nulla. Fugiat voluptatem est ea magni dolorum ut voluptatibus quo. Autem eaque sunt rerum aperiam eveniet. In vel odit dolores inventore dolor. Nostrum dolorem praesentium dolorem illum. Qui omnis voluptas vero voluptate alias et doloremque. Cupiditate consequatur ipsam consequatur quae dicta ut laborum. Cum dolorem odit blanditiis cupiditate ut voluptas et quasi. Pariatur tempore velit quae consequatur nostrum eos. Ex exercitationem et eaque sapiente laboriosam molestiae vero. Nostrum porro facilis est nisi alias assumenda aperiam voluptatem. Nobis eaque sint est. Rem quasi voluptas molestiae dolor. Odit similique aperiam eum voluptatem. Aliquam incidunt id dignissimos perferendis rerum. Totam voluptatum esse aliquid officiis. Dolores eaque ipsam pariatur facilis reprehenderit.</p>'
                        seo_title: null
                        meta_title: 'Reprehenderit quas eum ab.'
                        seo_desc: 'Fugiat quis aperiam quas explicabo quas reprehenderit. Ea ullam dolorem voluptatem numquam at ratione dignissimos.'
                        meta_desc: 'Fugiat quis aperiam quas explicabo quas reprehenderit. Ea ullam dolorem voluptatem numquam at ratione dignissimos.'
                        seo_noindex: false
                        seo_nofollow: false
                        status:
                          value: 1
                          label: active
                        comment: true
                        first_image: null
                        published_at: '2021-05-18T06:37:16.000000Z'
                        published_at_diff: '9 months 2 weeks ago'
                        created_at: '2022-03-07T21:13:24.000000Z'
                        created_at_diff: '1 second ago'
                        updated_at: '2022-03-07T21:13:24.000000Z'
                        updated_at_diff: '1 second ago'
                        user:
                          id: 12316
                          name: 'Esteban Ebert'
                          status:
                            value: 0
                            label: inactive
                          created_at: '2022-03-07T21:13:24.000000Z'
                          created_at_diff: '1 second ago'
                          updated_at: '2022-03-07T21:13:24.000000Z'
                          updated_at_diff: '1 second ago'
                        links:
                          web: 'http://idir.test:8443/posts/reprehenderit-quas-eum-ab'
                    items:
                      type: object
                  meta:
                    type: string
                    example: 'Paging, filtering and sorting information'
      tags:
        - Posts
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: integer
                  description: ''
                  example: 1
                filter:
                  type: object
                  description: ''
                  example: []
                  properties:
                    except:
                      type: array
                      description: 'Array containing IDs, excluding records from the list.'
                      example: []
                      items:
                        type: integer
                    search:
                      type: string
                      description: 'Search by keyword. Must be at least 3 characters. Must not be greater than 255 characters.'
                      example: ''
                    status:
                      type: integer
                      description: 'Must be one of 1 or (available only for admin.categories.view) 0, 2.'
                      example: 1
                    category:
                      type: integer
                      description: 'ID of category contains posts.'
                      example: 13
                    orderby:
                      type: string
                      description: 'Sorting the result list. Must be one of <code>created_at|asc</code>, <code>created_at|desc</code>, <code>updated_at|asc</code>, <code>updated_at|desc</code>, <code>title|asc</code>, <code>title|desc</code>, <code>view|desc</code>, or <code>view|asc</code>.'
                      example: created_at|asc
                    paginate:
                      type: integer
                      description: 'Number of records in the list. Must be one of <code>25</code>, <code>50</code>, or <code>100</code>.'
                      example: 25
  /api/tags/index:
    post:
      summary: 'Index of tags'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      name: 'usługi galwaniczne'
                      slug: uslugi-galwaniczne
                      created_at: '2021-01-06T17:01:54.000000Z'
                      created_at_diff: '1 year 2 months ago'
                      updated_at: '2021-01-06T17:01:54.000000Z'
                      updated_at_diff: '1 year 2 months ago'
                    -
                      id: 1
                      name: 'usługi galwaniczne'
                      slug: uslugi-galwaniczne
                      created_at: '2021-01-06T17:01:54.000000Z'
                      created_at_diff: '1 year 2 months ago'
                      updated_at: '2021-01-06T17:01:54.000000Z'
                      updated_at_diff: '1 year 2 months ago'
                  meta: 'Paging, filtering and sorting information'
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        name: 'usługi galwaniczne'
                        slug: uslugi-galwaniczne
                        created_at: '2021-01-06T17:01:54.000000Z'
                        created_at_diff: '1 year 2 months ago'
                        updated_at: '2021-01-06T17:01:54.000000Z'
                        updated_at_diff: '1 year 2 months ago'
                      -
                        id: 1
                        name: 'usługi galwaniczne'
                        slug: uslugi-galwaniczne
                        created_at: '2021-01-06T17:01:54.000000Z'
                        created_at_diff: '1 year 2 months ago'
                        updated_at: '2021-01-06T17:01:54.000000Z'
                        updated_at_diff: '1 year 2 months ago'
                    items:
                      type: object
                  meta:
                    type: string
                    example: 'Paging, filtering and sorting information'
      tags:
        - Tags
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: integer
                  description: ''
                  example: 1
                filter:
                  type: object
                  description: ''
                  example: []
                  properties:
                    except:
                      type: array
                      description: 'Array containing IDs, excluding records from the list.'
                      example: []
                      items:
                        type: integer
                    search:
                      type: string
                      description: 'Search by keyword. Must be at least 3 characters. Must not be greater than 255 characters.'
                      example: ''
                    orderby:
                      type: string
                      description: 'Sorting the result list. Must be one of <code>created_at|asc</code>, <code>created_at|desc</code>, <code>updated_at|asc</code>, <code>updated_at|desc</code>, <code>sum|asc</code>, or <code>sum|desc</code>.'
                      example: sum|asc
                    paginate:
                      type: integer
                      description: 'Number of records in the list. Must be one of <code>25</code>, <code>50</code>, or <code>100</code>.'
                      example: 25
      security: []
  '/api/tokens/{token}':
    delete:
      summary: 'Delete token'
      description: "Delete personal access token.\n\n<aside class=\"notice\">Available only to users with permissions: api.access and api.tokens.delete.</aside>"
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Tokens
    parameters:
      -
        in: path
        name: token
        description: 'The token ID.'
        example: null
        required: true
        schema:
          type: integer
  /api/tokens:
    post:
      summary: 'Create token'
      description: "Create personal access token.\n\n<aside class=\"notice\">Available only to users with permissions: api.access and api.tokens.create.</aside>"
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        201:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  access_token: 1|LN8Gmqe6cRHQpPr5X5GW9wFXuqHVK09L8FSb7Ju9
                properties:
                  access_token:
                    type: string
                    example: 1|LN8Gmqe6cRHQpPr5X5GW9wFXuqHVK09L8FSb7Ju9
                    description: ''
      tags:
        - Tokens
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be between 3 and 255 characters.'
                  example: Access
                expiration:
                  type: integer
                  description: 'Token expiration time on days. If null is unlimited. Must not be greater than 1000.'
                  example: 7
                abilities:
                  type: array
                  description: 'Array containing scopes. Wildcard supported. Must be one of <code>api.*</code>, <code>api.users.*</code>, <code>api.users.view</code>, <code>api.categories.*</code>, <code>api.categories.view</code>, <code>api.tags.*</code>, <code>api.tags.view</code>, <code>api.posts.*</code>, <code>api.posts.view</code>, <code>api.tokens.*</code>, <code>api.tokens.create</code>, <code>api.tokens.delete</code>, <code>api.groups.*</code>, <code>api.groups.view</code>, <code>api.dirs.*</code>, <code>api.dirs.view</code>, <code>api.dirs.create</code>, <code>api.dirs.edit</code>, or <code>api.dirs.delete</code>.'
                  example:
                    - 'api.*'
                  items:
                    type: string
              required:
                - name
                - abilities
  /api/users/index:
    post:
      summary: 'Index of users'
      description: '<aside class="notice">Available only to users with permissions: api.access, api.users.view and admin.users.view.</aside>'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 12312
                      name: 'Joy Zemlak'
                      status:
                        value: 1
                        label: active
                      created_at: '2022-03-07T21:13:24.000000Z'
                      created_at_diff: '1 second ago'
                      updated_at: '2022-03-07T21:13:24.000000Z'
                      updated_at_diff: '1 second ago'
                      roles:
                        -
                          id: 3
                          name: user
                          created_at: '2021-01-06T16:58:51.000000Z'
                          created_at_diff: '1 year 2 months ago'
                    -
                      id: 12313
                      name: 'Mr. Oliver Stracke DVM'
                      status:
                        value: 1
                        label: active
                      created_at: '2022-03-07T21:13:24.000000Z'
                      created_at_diff: '1 second ago'
                      updated_at: '2022-03-07T21:13:24.000000Z'
                      updated_at_diff: '1 second ago'
                      roles:
                        -
                          id: 3
                          name: user
                          created_at: '2021-01-06T16:58:51.000000Z'
                          created_at_diff: '1 year 2 months ago'
                  meta: 'Paging, filtering and sorting information'
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 12312
                        name: 'Joy Zemlak'
                        status:
                          value: 1
                          label: active
                        created_at: '2022-03-07T21:13:24.000000Z'
                        created_at_diff: '1 second ago'
                        updated_at: '2022-03-07T21:13:24.000000Z'
                        updated_at_diff: '1 second ago'
                        roles:
                          -
                            id: 3
                            name: user
                            created_at: '2021-01-06T16:58:51.000000Z'
                            created_at_diff: '1 year 2 months ago'
                      -
                        id: 12313
                        name: 'Mr. Oliver Stracke DVM'
                        status:
                          value: 1
                          label: active
                        created_at: '2022-03-07T21:13:24.000000Z'
                        created_at_diff: '1 second ago'
                        updated_at: '2022-03-07T21:13:24.000000Z'
                        updated_at_diff: '1 second ago'
                        roles:
                          -
                            id: 3
                            name: user
                            created_at: '2021-01-06T16:58:51.000000Z'
                            created_at_diff: '1 year 2 months ago'
                    items:
                      type: object
                  meta:
                    type: string
                    example: 'Paging, filtering and sorting information'
      tags:
        - Users
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: integer
                  description: ''
                  example: 1
                filter:
                  type: object
                  description: ''
                  example: []
                  properties:
                    except:
                      type: array
                      description: 'Array containing IDs, excluding records from the list.'
                      example: []
                      items:
                        type: integer
                    search:
                      type: string
                      description: 'Search by keyword. Must be at least 3 characters. Must not be greater than 255 characters.'
                      example: ''
                    status:
                      type: integer
                      description: 'Must be one of 1 or 0 (available only for admin.users.view).'
                      example: 1
                    role:
                      type: integer
                      description: ''
                      example: 1
                    orderby:
                      type: string
                      description: 'Sorting the result list. Must be one of <code>created_at|asc</code>, <code>created_at|desc</code>, <code>updated_at|asc</code>, or <code>updated_at|desc</code>.'
                      example: updated_at|asc
                    paginate:
                      type: integer
                      description: 'Number of records in the list. Must be one of <code>25</code>, <code>50</code>, or <code>100</code>.'
                      example: 50
tags:
  -
    name: 'Authenticated user'
    description: "\n> Routes:\n\n    /routes/vendor/icore/api/user.php\n\n> Controller:\n\n    N1ebieski\\ICore\\Http\\Controllers\\Api\\Auth\\UserController"
  -
    name: Authentication
    description: "\n> Routes:\n\n    /routes/vendor/icore/api/auth.php\n\n> Controllers:\n\n    N1ebieski\\ICore\\Http\\Controllers\\Api\\Auth\\RegisterController\n    N1ebieski\\ICore\\Http\\Controllers\\Api\\Auth\\TokenController"
  -
    name: Categories
    description: "\n> Routes:\n\n    /routes/vendor/icore/api/categories.php\n    /routes/vendor/idir/api/categories.php\n\n> Controllers:\n\n    N1ebieski\\ICore\\Http\\Controllers\\Api\\Category\\CategoryController\n    N1ebieski\\ICore\\Http\\Controllers\\Api\\Category\\Post\\CategoryController\n    N1ebieski\\IDir\\Http\\Controllers\\Api\\Category\\Dir\\CategoryController\n\n> Resource:\n\n    N1ebieski\\ICore\\Http\\Resources\\Category\\CategoryResource\n\nPermissions:\n\n- api.* - access to all api endpoints\n- api.categories.* - access to all categories endpoints\n- api.categories.view - access to endpoints with collection of categories"
  -
    name: Dirs
    description: "\n> Routes:\n\n    /routes/vendor/idir/api/dirs.php\n\n> Controller:\n\n    N1ebieski\\IDir\\Http\\Controllers\\Api\\Dir\\DirController\n\n> Resource:\n\n    N1ebieski\\IDir\\Http\\Resources\\Dir\\DirResource\n\nPermissions:\n\n- api.* - access to all api endpoints\n- api.dirs.* - access to all dirs endpoints\n- api.dirs.view - access to endpoints with collection of dirs\n- api.dirs.create - access to create dir endpoint\n- api.dirs.edit - access to edit token endpoint\n- api.dirs.delete - access to delete token endpoint"
  -
    name: Groups
    description: "\n> Routes:\n\n    /routes/vendor/idir/api/groups.php\n\n> Controller:\n\n    N1ebieski\\IDir\\Http\\Controllers\\Api\\Group\\GroupController\n\n> Resource:\n\n    N1ebieski\\IDir\\Http\\Resources\\Group\\GroupResource"
  -
    name: Payments
    description: "\n> Routes:\n\n    /routes/vendor/idir/api/payments.php\n\n> Controller:\n\n    N1ebieski\\IDir\\Http\\Controllers\\Api\\Payment\\Dir\\PaymentController\n\n> Resource:\n\n    N1ebieski\\IDir\\Http\\Resources\\Payment\\PaymentResource"
  -
    name: Posts
    description: "\n> Routes:\n\n    /routes/vendor/icore/api/posts.php\n\n> Controller:\n\n    N1ebieski\\ICore\\Http\\Controllers\\Api\\Post\\PostController\n\n> Resource:\n\n    N1ebieski\\ICore\\Http\\Resources\\Post\\PostResource\n\nPermissions:\n\n- api.* - access to all api endpoints\n- api.posts.* - access to all posts endpoints\n- api.posts.view - access to endpoints with collection of posts"
  -
    name: Tags
    description: "\n> Routes:\n\n    /routes/vendor/icore/api/tags.php\n\n> Controller:\n\n    N1ebieski\\ICore\\Http\\Controllers\\Api\\Tag\\TagController\n\n> Resource:\n\n    N1ebieski\\ICore\\Http\\Resources\\Tag\\TagResource\n\nPermissions:\n\n- api.* - access to all api endpoints\n- api.tags.* - access to all tags endpoints\n- api.tags.view - access to endpoints with collection of tags"
  -
    name: Tokens
    description: "\n> Routes:\n\n    /routes/vendor/icore/api/tokens.php\n\n> Controller:\n\n    N1ebieski\\ICore\\Http\\Controllers\\Api\\Token\\TokenController\n\nPermissions:\n\n- api.* - access to all api endpoints\n- api.tokens.* - access to all tokens endpoints\n- api.tokens.create - access to create token endpoint\n- api.tokens.delete - access to delete token endpoint"
  -
    name: Users
    description: "\n> Routes:\n\n    /routes/vendor/icore/api/users.php\n\n> Controller:\n\n    N1ebieski\\ICore\\Http\\Controllers\\Api\\User\\UserController\n\n> Resource:\n\n    N1ebieski\\ICore\\Http\\Resources\\User\\UserResource\n\nPermissions:\n\n- api.* - access to all api endpoints\n- api.users.* - access to all users endpoints\n- api.users.view - access to endpoints with collection of users"
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: ''
security:
  -
    default: []
